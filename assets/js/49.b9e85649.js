(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{454:function(l,t,a){"use strict";a.r(t);var i=a(25),r=Object(i.a)({},(function(){var l=this,t=l.$createElement,a=l._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":l.$parent.slotKey}},[a("h2",{attrs:{id:"基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[l._v("#")]),l._v(" 基本概念")]),l._v(" "),a("ul",[a("li",[l._v("当我们使用语言的一些现代特性时，一些引擎可能无法支持这样的代码。并不是所有功能在任何地方都有实现。需要使用babel来进行转换。")]),l._v(" "),a("li",[l._v("Babel 是一个 transpiler。它将现代的 JavaScript 代码转化为以前的标准形式。")]),l._v(" "),a("li",[l._v("实际上，Babel 包含了两部分：\n"),a("ul",[a("li",[l._v("第一，用于重写代码的 transpiler 程序。开发者在自己的电脑上运行它。它以之前的语言标准对代码进行重写。然后将代码传到面向用户的网站。像 webpack 这样的现代项目构建系统，提供了在每次代码改变时自动运行 transpiler 的方法，因此很容易集成在开发过程中。")]),l._v(" "),a("li",[l._v("第二，polyfill。新的语言特性可能包括新的内置函数和语法构造。transpiler 会重写代码，将语法结构转换为旧的结构。但是对于新的内置函数，需要我们去实现。JavaScript 是一个高度动态化的语言。脚本可以添加/修改任何函数，从而使它们的行为符合现代标准。更新/添加新函数的脚本称为 “polyfill”。它“填补”了缺口，并添加了缺少的实现。")])])])]),l._v(" "),a("h3",{attrs:{id:"两个有意思的-polyfills-是"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两个有意思的-polyfills-是"}},[l._v("#")]),l._v(" 两个有意思的 polyfills 是：")]),l._v(" "),a("ul",[a("li",[l._v("core js 支持很多，允许只包含需要的功能。")]),l._v(" "),a("li",[l._v("polyfill.io 根据功能和用户的浏览器，为脚本提供 polyfill 的服务。")])])])}),[],!1,null,null,null);t.default=r.exports}}]);