(window.webpackJsonp=window.webpackJsonp||[]).push([[327],{688:function(a,e,n){"use strict";n.r(e);var t=n(25),s=Object(t.a)({},(function(){var a=this,e=a.$createElement,n=a._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h2",{attrs:{id:"converters"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#converters"}},[a._v("#")]),a._v(" Converters")]),a._v(" "),n("p",[a._v("NAN contains functions that convert "),n("code",[a._v("v8::Value")]),a._v("s to other "),n("code",[a._v("v8::Value")]),a._v(" types and native types. Since type conversion is not guaranteed to succeed, they return "),n("code",[a._v("Nan::Maybe")]),a._v(" types. These converters can be used in place of "),n("code",[a._v("value->ToX()")]),a._v(" and "),n("code",[a._v("value->XValue()")]),a._v(" (where "),n("code",[a._v("X")]),a._v(" is one of the types, e.g. "),n("code",[a._v("Boolean")]),a._v(") in a way that provides a consistent interface across V8 versions. Newer versions of V8 use the new "),n("code",[a._v("v8::Maybe")]),a._v(" and "),n("code",[a._v("v8::MaybeLocal")]),a._v(" types for these conversions, older versions don't have this functionality so it is provided by NAN.")]),a._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#api_nan_to"}},[n("b",[n("code",[a._v("Nan::To()")])])])])]),a._v(" "),n("p",[n("a",{attrs:{name:"api_nan_to"}})]),a._v(" "),n("h3",{attrs:{id:"nan-to"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nan-to"}},[a._v("#")]),a._v(" Nan::To()")]),a._v(" "),n("p",[a._v("Converts a "),n("code",[a._v("v8::Local<v8::Value>")]),a._v(" to a different subtype of "),n("code",[a._v("v8::Value")]),a._v(" or to a native data type. Returns a "),n("code",[a._v("Nan::MaybeLocal<>")]),a._v(" or a "),n("code",[a._v("Nan::Maybe<>")]),a._v(" accordingly.")]),a._v(" "),n("p",[a._v("See "),n("RouterLink",{attrs:{to:"/Study/工程化/gulp 学习代码/gulp-project/node_modules/nan/doc/maybe_types.html"}},[a._v("maybe_types.md")]),a._v(" for more information on "),n("code",[a._v("Nan::Maybe")]),a._v(" types.")],1),a._v(" "),n("p",[a._v("Signatures:")]),a._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("// V8 types\nNan::MaybeLocal<v8::Boolean> Nan::To<v8::Boolean>(v8::Local<v8::Value> val);\nNan::MaybeLocal<v8::Int32> Nan::To<v8::Int32>(v8::Local<v8::Value> val);\nNan::MaybeLocal<v8::Integer> Nan::To<v8::Integer>(v8::Local<v8::Value> val);\nNan::MaybeLocal<v8::Object> Nan::To<v8::Object>(v8::Local<v8::Value> val);\nNan::MaybeLocal<v8::Number> Nan::To<v8::Number>(v8::Local<v8::Value> val);\nNan::MaybeLocal<v8::String> Nan::To<v8::String>(v8::Local<v8::Value> val);\nNan::MaybeLocal<v8::Uint32> Nan::To<v8::Uint32>(v8::Local<v8::Value> val);\n\n// Native types\nNan::Maybe<bool> Nan::To<bool>(v8::Local<v8::Value> val);\nNan::Maybe<double> Nan::To<double>(v8::Local<v8::Value> val);\nNan::Maybe<int32_t> Nan::To<int32_t>(v8::Local<v8::Value> val);\nNan::Maybe<int64_t> Nan::To<int64_t>(v8::Local<v8::Value> val);\nNan::Maybe<uint32_t> Nan::To<uint32_t>(v8::Local<v8::Value> val);\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br")])]),n("h3",{attrs:{id:"example"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[a._v("#")]),a._v(" Example")]),a._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("v8::Local<v8::Value> val;\nNan::MaybeLocal<v8::String> str = Nan::To<v8::String>(val);\nNan::Maybe<double> d = Nan::To<double>(val);\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br")])])])}),[],!1,null,null,null);e.default=s.exports}}]);