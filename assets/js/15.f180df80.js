(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{377:function(e,l,t){"use strict";t.r(l);var _=t(25),i=Object(_.a)({},(function(){var e=this,l=e.$createElement,t=e._self._c||l;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"参考资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[e._v("#")]),e._v(" 参考资料")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox",target:"_blank",rel:"noopener noreferrer"}},[e._v("flex 布局的基本概念"),t("OutboundLink")],1)]),e._v(" "),t("h2",{attrs:{id:"flex布局基础使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flex布局基础使用"}},[e._v("#")]),e._v(" flex布局基础使用")]),e._v(" "),t("h3",{attrs:{id:"flexbox-的两根轴线"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flexbox-的两根轴线"}},[e._v("#")]),e._v(" flexbox 的两根轴线")]),e._v(" "),t("ul",[t("li",[e._v("主轴由 flex-direction 定义,一般默认是inline")]),e._v(" "),t("li",[e._v("交叉轴垂直于主轴")]),e._v(" "),t("li",[e._v("flexbox 的特性是沿着主轴或者交叉轴对齐之中的元素。")])]),e._v(" "),t("h3",{attrs:{id:"flex-容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flex-容器"}},[e._v("#")]),e._v(" Flex 容器")]),e._v(" "),t("ul",[t("li",[e._v("文档中采用了 flexbox 的区域就叫做 flex 容器。为了创建 flex 容器， 我们把一个容器的 display 属性值改为 flex 或者 inline-flex。 完成这一步之后，容器中的直系子元素就会变为 flex 元素")]),e._v(" "),t("li",[e._v("flex 容器中的所有 flex 元素都会有下列行为:\n"),t("ul",[t("li",[e._v("元素排列为一行 (flex-direction 属性的初始值是 row)。")]),e._v(" "),t("li",[e._v("元素从主轴的起始线开始。")]),e._v(" "),t("li",[e._v("元素不会在主维度方向拉伸，但是可以缩小。")]),e._v(" "),t("li",[e._v("元素被拉伸来填充交叉轴大小。")]),e._v(" "),t("li",[e._v("flex-basis 属性为 auto。")]),e._v(" "),t("li",[e._v("flex-wrap 属性为 nowrap。")])])]),e._v(" "),t("li",[e._v("基本属性\n"),t("ul",[t("li",[e._v("flex-direction:设置flex 元素的排列方向")]),e._v(" "),t("li",[e._v("flex-wrap: 属性值wrap实现多行")]),e._v(" "),t("li",[e._v("flex-flow: 简写属性,flex-direction 和 flex-wrap 组合")])])]),e._v(" "),t("li",[e._v("flex 元素上的属性\n"),t("ul",[t("li",[e._v("flex-grow: 若被赋值为一个正整数， flex 元素会以 flex-basis 为基础，沿主轴方向增长尺寸。这会使该元素延展，并占据此方向轴上的可用空间")]),e._v(" "),t("li",[e._v("flex-shrink: 如果我们的容器中没有足够排列flex元素的空间，那么可以把flex元素flex-shrink属性设置为正整数来缩小它所占空间到flex-basis以下")]),e._v(" "),t("li",[e._v("flex-basis: 定义了该元素的空间大小（the size of that item in terms of the space），flex容器里除了元素所占的空间以外的富余空间就是可用空间")]),e._v(" "),t("li",[e._v("Flex属性的简写flex: Flex 简写形式允许你把三个数值按这个顺序书写 — flex-grow，flex-shrink，flex-basis。")])])]),e._v(" "),t("li",[e._v("元素间的对齐和空间分配\n"),t("ul",[t("li",[e._v("align-items: 可以使元素在交叉轴方向对齐。这个属性的初始值为stretch\n"),t("ul",[t("li",[e._v("stretch")]),e._v(" "),t("li",[e._v("flex-start")]),e._v(" "),t("li",[e._v("flex-end")]),e._v(" "),t("li",[e._v("center")])])]),e._v(" "),t("li",[e._v("justify-content属性用来使元素在主轴方向上对齐\n"),t("ul",[t("li",[e._v("stretch")]),e._v(" "),t("li",[e._v("flex-start")]),e._v(" "),t("li",[e._v("flex-end")]),e._v(" "),t("li",[e._v("center")]),e._v(" "),t("li",[e._v("space-around")]),e._v(" "),t("li",[e._v("space-between")])])])])])]),e._v(" "),t("h3",{attrs:{id:"扩展思考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#扩展思考"}},[e._v("#")]),e._v(" 扩展思考")]),e._v(" "),t("ul",[t("li",[e._v("flex: 1\nflex: 1 === flex: 1 1 0%;表示,flex元素的三个复合值为1,1,0%,如果元素均为flex:1,那么在页面上他们会等分")])])])}),[],!1,null,null,null);l.default=i.exports}}]);