(window.webpackJsonp=window.webpackJsonp||[]).push([[503],{872:function(e,t,s){"use strict";s.r(t);var a=s(25),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",{attrs:{align:"center"}},[s("a",{attrs:{href:"http://gulpjs.com"}},[s("img",{attrs:{height:"257",width:"114",src:"https://raw.githubusercontent.com/gulpjs/artwork/master/gulp-2x.png"}})])]),e._v(" "),s("h1",{attrs:{id:"vinyl-fs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vinyl-fs"}},[e._v("#")]),e._v(" vinyl-fs")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://www.npmjs.com/package/vinyl-fs",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"http://img.shields.io/npm/v/vinyl-fs.svg",alt:"NPM version"}}),s("OutboundLink")],1),e._v(" "),s("a",{attrs:{href:"https://www.npmjs.com/package/vinyl-fs",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"http://img.shields.io/npm/dm/vinyl-fs.svg",alt:"Downloads"}}),s("OutboundLink")],1),e._v(" "),s("a",{attrs:{href:"https://travis-ci.org/gulpjs/vinyl-fs",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"http://img.shields.io/travis/gulpjs/vinyl-fs.svg?label=travis-ci",alt:"Build Status"}}),s("OutboundLink")],1),e._v(" "),s("a",{attrs:{href:"https://ci.appveyor.com/project/gulpjs/vinyl-fs",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://img.shields.io/appveyor/ci/gulpjs/vinyl-fs.svg?label=appveyor",alt:"AppVeyor Build Status"}}),s("OutboundLink")],1),e._v(" "),s("a",{attrs:{href:"https://coveralls.io/r/gulpjs/vinyl-fs",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"http://img.shields.io/coveralls/gulpjs/vinyl-fs/master.svg",alt:"Coveralls Status"}}),s("OutboundLink")],1),e._v(" "),s("a",{attrs:{href:"https://gitter.im/gulpjs/gulp",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://badges.gitter.im/gulpjs/gulp.svg",alt:"Gitter chat"}}),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/wearefractal/vinyl",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vinyl"),s("OutboundLink")],1),e._v(" adapter for the file system.")]),e._v(" "),s("h2",{attrs:{id:"what-is-vinyl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-is-vinyl"}},[e._v("#")]),e._v(" What is Vinyl?")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/wearefractal/vinyl",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vinyl"),s("OutboundLink")],1),e._v(" is a very simple metadata object that describes a file. When you think of a file, two attributes come to mind: "),s("code",[e._v("path")]),e._v(" and "),s("code",[e._v("contents")]),e._v(". These are the main attributes on a "),s("a",{attrs:{href:"https://github.com/wearefractal/vinyl",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vinyl"),s("OutboundLink")],1),e._v(" object. A file does not necessarily represent something on your computerâ€™s file system. You have files on S3, FTP, Dropbox, Box, CloudThingly.io and other services. "),s("a",{attrs:{href:"https://github.com/wearefractal/vinyl",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vinyl"),s("OutboundLink")],1),e._v(" can be used to describe files from all of these sources.")]),e._v(" "),s("h2",{attrs:{id:"what-is-a-vinyl-adapter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-is-a-vinyl-adapter"}},[e._v("#")]),e._v(" What is a Vinyl Adapter?")]),e._v(" "),s("p",[e._v('While Vinyl provides a clean way to describe a file, we now need a way to access these files. Each file source needs what we call a "Vinyl adapter". A Vinyl adapter simply exposes a '),s("code",[e._v("src(globs)")]),e._v(" and a "),s("code",[e._v("dest(folder)")]),e._v(" method. Each return a stream. The "),s("code",[e._v("src")]),e._v(" stream produces Vinyl objects, and the "),s("code",[e._v("dest")]),e._v(" stream consumes Vinyl objects. Vinyl adapters can expose extra methods that might be specific to their input/output medium, such as the "),s("code",[e._v("symlink")]),e._v(" method "),s("code",[e._v("vinyl-fs")]),e._v(" provides.")]),e._v(" "),s("h2",{attrs:{id:"usage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[e._v("#")]),e._v(" Usage")]),e._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" map "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'map-stream'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" vfs "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'vinyl-fs'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[e._v("log")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" cb")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("cb")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\nvfs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("src")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'./js/**/*.js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'!./js/vendor/*.js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("pipe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("pipe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("vfs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("dest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'./output'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br")])]),s("h2",{attrs:{id:"api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[e._v("#")]),e._v(" API")]),e._v(" "),s("h3",{attrs:{id:"src-globs-options"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#src-globs-options"}},[e._v("#")]),e._v(" "),s("code",[e._v("src(globs[, options])")])]),e._v(" "),s("p",[e._v("Takes a glob string or an array of glob strings as the first argument and an options object as the second.\nReturns a stream of "),s("a",{attrs:{href:"https://github.com/wearefractal/vinyl",target:"_blank",rel:"noopener noreferrer"}},[e._v("vinyl"),s("OutboundLink")],1),e._v(" "),s("code",[e._v("File")]),e._v(" objects.")]),e._v(" "),s("p",[s("strong",[e._v("Note: UTF-8 BOM will be removed from all UTF-8 files read with "),s("code",[e._v(".src")]),e._v(" unless disabled in the options.")])]),e._v(" "),s("h4",{attrs:{id:"globs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#globs"}},[e._v("#")]),e._v(" Globs")]),e._v(" "),s("p",[e._v("Globs are executed in order, so negations should follow positive globs.")]),e._v(" "),s("p",[e._v("For example:")]),e._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[e._v("fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("src")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'!b*'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'*'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v('would not exclude any files, but the following would exclude all files starting with "b":')]),e._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[e._v("fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("src")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'*'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'!b*'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h4",{attrs:{id:"options"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[e._v("#")]),e._v(" Options")]),e._v(" "),s("ul",[s("li",[e._v("Values passed to the options must be of the expected type, otherwise they will be ignored.")]),e._v(" "),s("li",[e._v("All options can be passed a function instead of a value. The function will be called with the "),s("a",{attrs:{href:"https://github.com/wearefractal/vinyl",target:"_blank",rel:"noopener noreferrer"}},[e._v("vinyl"),s("OutboundLink")],1),e._v(" "),s("code",[e._v("File")]),e._v(" object as its only argument and must return a value of the expected type for that option.")])]),e._v(" "),s("h5",{attrs:{id:"options-buffer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options-buffer"}},[e._v("#")]),e._v(" "),s("code",[e._v("options.buffer")])]),e._v(" "),s("p",[e._v("Whether or not you want to buffer the file contents into memory. Setting to "),s("code",[e._v("false")]),e._v(" will make "),s("code",[e._v("file.contents")]),e._v(" a paused Stream.")]),e._v(" "),s("p",[e._v("Type: "),s("code",[e._v("Boolean")])]),e._v(" "),s("p",[e._v("Default: "),s("code",[e._v("true")])]),e._v(" "),s("h5",{attrs:{id:"options-read"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options-read"}},[e._v("#")]),e._v(" "),s("code",[e._v("options.read")])]),e._v(" "),s("p",[e._v("Whether or not you want the file to be read at all. Useful for stuff like removing files. Setting to "),s("code",[e._v("false")]),e._v(" will make "),s("code",[e._v("file.contents = null")]),e._v(" and will disable writing the file to disk via "),s("code",[e._v(".dest()")]),e._v(".")]),e._v(" "),s("p",[e._v("Type: "),s("code",[e._v("Boolean")])]),e._v(" "),s("p",[e._v("Default: "),s("code",[e._v("true")])]),e._v(" "),s("h5",{attrs:{id:"options-since"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options-since"}},[e._v("#")]),e._v(" "),s("code",[e._v("options.since")])]),e._v(" "),s("p",[e._v("Only streams files that have been modified since the time specified.")]),e._v(" "),s("p",[e._v("Type: "),s("code",[e._v("Date")]),e._v(" or "),s("code",[e._v("Number")])]),e._v(" "),s("p",[e._v("Default: "),s("code",[e._v("undefined")])]),e._v(" "),s("h5",{attrs:{id:"options-removebom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options-removebom"}},[e._v("#")]),e._v(" "),s("code",[e._v("options.removeBOM")])]),e._v(" "),s("p",[e._v("Causes the BOM to be removed on UTF-8 encoded files. Set to "),s("code",[e._v("false")]),e._v(" if you need the BOM for some reason.")]),e._v(" "),s("p",[e._v("Type: "),s("code",[e._v("Boolean")])]),e._v(" "),s("p",[e._v("Default: "),s("code",[e._v("true")])]),e._v(" "),s("h5",{attrs:{id:"options-sourcemaps"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options-sourcemaps"}},[e._v("#")]),e._v(" "),s("code",[e._v("options.sourcemaps")])]),e._v(" "),s("p",[e._v("Enables sourcemap support on files passed through the stream.  Will load inline sourcemaps and resolve sourcemap links from files.")]),e._v(" "),s("p",[e._v("Type: "),s("code",[e._v("Boolean")])]),e._v(" "),s("p",[e._v("Default: "),s("code",[e._v("false")])]),e._v(" "),s("h5",{attrs:{id:"options-resolvesymlinks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options-resolvesymlinks"}},[e._v("#")]),e._v(" "),s("code",[e._v("options.resolveSymlinks")])]),e._v(" "),s("p",[e._v("Whether or not to recursively resolve symlinks to their targets. Set to "),s("code",[e._v("false")]),e._v(" to preserve them as symlinks and make "),s("code",[e._v("file.symlink")]),e._v(" equal the original symlink's target path.")]),e._v(" "),s("p",[e._v("Type: "),s("code",[e._v("Boolean")])]),e._v(" "),s("p",[e._v("Default: "),s("code",[e._v("true")])]),e._v(" "),s("h5",{attrs:{id:"options-dot"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options-dot"}},[e._v("#")]),e._v(" "),s("code",[e._v("options.dot")])]),e._v(" "),s("p",[e._v("Whether or not you want globs to match on dot files (e.g. "),s("code",[e._v(".gitignore")]),e._v(").")]),e._v(" "),s("p",[s("strong",[e._v("Note: This option is not resolved from a function because it is passed verbatim to node-glob.")])]),e._v(" "),s("p",[e._v("Type: "),s("code",[e._v("Boolean")])]),e._v(" "),s("p",[e._v("Default: "),s("code",[e._v("false")])]),e._v(" "),s("h5",{attrs:{id:"other"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#other"}},[e._v("#")]),e._v(" other")]),e._v(" "),s("p",[e._v("Any glob-related options are documented in "),s("a",{attrs:{href:"https://github.com/gulpjs/glob-stream",target:"_blank",rel:"noopener noreferrer"}},[e._v("glob-stream"),s("OutboundLink")],1),e._v(" and "),s("a",{attrs:{href:"https://github.com/isaacs/node-glob",target:"_blank",rel:"noopener noreferrer"}},[e._v("node-glob"),s("OutboundLink")],1),e._v(" and are forwarded verbatim.")]),e._v(" "),s("h3",{attrs:{id:"dest-folder-options"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dest-folder-options"}},[e._v("#")]),e._v(" "),s("code",[e._v("dest(folder[, options])")])]),e._v(" "),s("p",[e._v("Takes a folder path string or a function as the first argument and an options object as the second. If given a function, it will be called with each "),s("a",{attrs:{href:"https://github.com/wearefractal/vinyl",target:"_blank",rel:"noopener noreferrer"}},[e._v("vinyl"),s("OutboundLink")],1),e._v(" "),s("code",[e._v("File")]),e._v(" object and must return a folder path.\nReturns a stream that accepts "),s("a",{attrs:{href:"https://github.com/wearefractal/vinyl",target:"_blank",rel:"noopener noreferrer"}},[e._v("vinyl"),s("OutboundLink")],1),e._v(" "),s("code",[e._v("File")]),e._v(" objects, writes them to disk at the folder/cwd specified, and passes them downstream so you can keep piping these around.")]),e._v(" "),s("p",[e._v("Once the file is written to disk, an attempt is made to determine if the "),s("code",[e._v("stat.mode")]),e._v(", "),s("code",[e._v("stat.mtime")]),e._v(" and "),s("code",[e._v("stat.atime")]),e._v(" of the "),s("a",{attrs:{href:"https://github.com/wearefractal/vinyl",target:"_blank",rel:"noopener noreferrer"}},[e._v("vinyl"),s("OutboundLink")],1),e._v(" "),s("code",[e._v("File")]),e._v(" object differ from the file on the filesystem.\nIf they differ and the running process owns the file, the corresponding filesystem metadata is updated.\nIf they don't differ or the process doesn't own the file, the attempt is skipped silently.\n"),s("strong",[e._v("This functionality is disabled on Windows operating systems or any other OS that doesn't support "),s("code",[e._v("process.getuid")]),e._v(" or "),s("code",[e._v("process.geteuid")]),e._v(" in node. This is due to Windows having very unexpected results through usage of "),s("code",[e._v("fs.fchmod")]),e._v(" and "),s("code",[e._v("fs.futimes")]),e._v(".")])]),e._v(" "),s("p",[s("strong",[e._v("Note: The "),s("code",[e._v("fs.futimes()")]),e._v(" method internally converts "),s("code",[e._v("stat.mtime")]),e._v(" and "),s("code",[e._v("stat.atime")]),e._v(" timestamps to seconds; this division by "),s("code",[e._v("1000")]),e._v(" may cause some loss of precision in 32-bit Node.js.")])]),e._v(" "),s("p",[e._v("If the file has a "),s("code",[e._v("symlink")]),e._v(" attribute specifying a target path, then a symlink will be created.")]),e._v(" "),s("p",[s("strong",[e._v("Note: The file will be modified after being written to this stream.")])]),e._v(" "),s("ul",[s("li",[s("code",[e._v("cwd")]),e._v(", "),s("code",[e._v("base")]),e._v(", and "),s("code",[e._v("path")]),e._v(" will be overwritten to match the folder.")]),e._v(" "),s("li",[s("code",[e._v("stat")]),e._v(" will be updated to match the file on the filesystem.")]),e._v(" "),s("li",[s("code",[e._v("contents")]),e._v(" will have it's position reset to the beginning if it is a stream.")])]),e._v(" "),s("h4",{attrs:{id:"options-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options-2"}},[e._v("#")]),e._v(" Options")]),e._v(" "),s("ul",[s("li",[e._v("Values passed to the options must be of the expected type, otherwise they will be ignored.")]),e._v(" "),s("li",[e._v("All options can be passed a function instead of a value. The function will be called with the "),s("a",{attrs:{href:"https://github.com/wearefractal/vinyl",target:"_blank",rel:"noopener noreferrer"}},[e._v("vinyl"),s("OutboundLink")],1),e._v(" "),s("code",[e._v("File")]),e._v(" object as its only argument and must return a value of the expected type for that option.")])]),e._v(" "),s("h5",{attrs:{id:"options-cwd"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options-cwd"}},[e._v("#")]),e._v(" "),s("code",[e._v("options.cwd")])]),e._v(" "),s("p",[e._v("The working directory the folder is relative to.")]),e._v(" "),s("p",[e._v("Type: "),s("code",[e._v("String")])]),e._v(" "),s("p",[e._v("Default: "),s("code",[e._v("process.cwd()")])]),e._v(" "),s("h5",{attrs:{id:"options-mode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options-mode"}},[e._v("#")]),e._v(" "),s("code",[e._v("options.mode")])]),e._v(" "),s("p",[e._v("The mode the files should be created with. This option is only resolved if the "),s("a",{attrs:{href:"https://github.com/wearefractal/vinyl",target:"_blank",rel:"noopener noreferrer"}},[e._v("vinyl"),s("OutboundLink")],1),e._v(" "),s("code",[e._v("File")]),e._v(" is not symbolic.")]),e._v(" "),s("p",[e._v("Type: "),s("code",[e._v("Number")])]),e._v(" "),s("p",[e._v("Default: The "),s("code",[e._v("mode")]),e._v(" of the input file ("),s("code",[e._v("file.stat.mode")]),e._v(") if any, or the process mode if the input file has no "),s("code",[e._v("mode")]),e._v(" property.")]),e._v(" "),s("h5",{attrs:{id:"options-dirmode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options-dirmode"}},[e._v("#")]),e._v(" "),s("code",[e._v("options.dirMode")])]),e._v(" "),s("p",[e._v("The mode directories should be created with.")]),e._v(" "),s("p",[e._v("Type: "),s("code",[e._v("Number")])]),e._v(" "),s("p",[e._v("Default: The process "),s("code",[e._v("mode")]),e._v(".")]),e._v(" "),s("h5",{attrs:{id:"options-overwrite"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options-overwrite"}},[e._v("#")]),e._v(" "),s("code",[e._v("options.overwrite")])]),e._v(" "),s("p",[e._v("Whether or not existing files with the same path should be overwritten.")]),e._v(" "),s("p",[e._v("Type: "),s("code",[e._v("Boolean")])]),e._v(" "),s("p",[e._v("Default: "),s("code",[e._v("true")]),e._v(" (always overwrite existing files)")]),e._v(" "),s("h5",{attrs:{id:"options-append"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options-append"}},[e._v("#")]),e._v(" "),s("code",[e._v("options.append")])]),e._v(" "),s("p",[e._v("Whether or not new data should be appended after existing file contents (if any).")]),e._v(" "),s("p",[e._v("Type: "),s("code",[e._v("Boolean")])]),e._v(" "),s("p",[e._v("Default: "),s("code",[e._v("false")]),e._v(" (always replace existing contents, if any)")]),e._v(" "),s("h5",{attrs:{id:"options-sourcemaps-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options-sourcemaps-2"}},[e._v("#")]),e._v(" "),s("code",[e._v("options.sourcemaps")])]),e._v(" "),s("p",[e._v("Enables sourcemap support on files passed through the stream.  Will write inline soucemaps if specified as "),s("code",[e._v("true")]),e._v(".\nSpecifying a "),s("code",[e._v("String")]),e._v(" path will write external sourcemaps at the given path.")]),e._v(" "),s("p",[e._v("Examples:")]),e._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Write as inline comments")]),e._v("\nvfs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("dest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'./'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" sourcemaps"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Write as files in the same folder")]),e._v("\nvfs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("dest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'./'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" sourcemaps"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'.'")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("p",[e._v("Type: "),s("code",[e._v("Boolean")]),e._v(" or "),s("code",[e._v("String")])]),e._v(" "),s("p",[e._v("Default: "),s("code",[e._v("undefined")]),e._v(" (do not write sourcemaps)")]),e._v(" "),s("h5",{attrs:{id:"options-relativesymlinks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options-relativesymlinks"}},[e._v("#")]),e._v(" "),s("code",[e._v("options.relativeSymlinks")])]),e._v(" "),s("p",[e._v("When creating a symlink, whether or not the created symlink should be relative. If "),s("code",[e._v("false")]),e._v(", the symlink will be absolute.")]),e._v(" "),s("p",[s("strong",[e._v("Note: This option will be ignored if a "),s("code",[e._v("junction")]),e._v(" is being created, as they must be absolute.")])]),e._v(" "),s("p",[e._v("Type: "),s("code",[e._v("Boolean")])]),e._v(" "),s("p",[e._v("Default: "),s("code",[e._v("false")])]),e._v(" "),s("h5",{attrs:{id:"options-usejunctions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options-usejunctions"}},[e._v("#")]),e._v(" "),s("code",[e._v("options.useJunctions")])]),e._v(" "),s("p",[e._v("When creating a symlink, whether or not a directory symlink should be created as a "),s("code",[e._v("junction")]),e._v(".\nThis option is only relevant on Windows and ignored elsewhere. Please refer to the "),s("a",{attrs:{href:"#symbolic-links-on-windows"}},[e._v("Symbolic Links on Windows")]),e._v(" section below.")]),e._v(" "),s("p",[e._v("Type: "),s("code",[e._v("Boolean")])]),e._v(" "),s("p",[e._v("Default: "),s("code",[e._v("true")])]),e._v(" "),s("h3",{attrs:{id:"symlink-folder-options"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#symlink-folder-options"}},[e._v("#")]),e._v(" "),s("code",[e._v("symlink(folder[, options])")])]),e._v(" "),s("p",[e._v("Takes a folder path string or a function as the first argument and an options object as the second. If given a function, it will be called with each "),s("a",{attrs:{href:"https://github.com/wearefractal/vinyl",target:"_blank",rel:"noopener noreferrer"}},[e._v("vinyl"),s("OutboundLink")],1),e._v(" "),s("code",[e._v("File")]),e._v(" object and must return a folder path.\nReturns a stream that accepts "),s("a",{attrs:{href:"https://github.com/wearefractal/vinyl",target:"_blank",rel:"noopener noreferrer"}},[e._v("vinyl"),s("OutboundLink")],1),e._v(" "),s("code",[e._v("File")]),e._v(" objects, creates a symbolic link (i.e. symlink) at the folder/cwd specified, and passes them downstream so you can keep piping these around.")]),e._v(" "),s("p",[s("strong",[e._v("Note: The file will be modified after being written to this stream.")])]),e._v(" "),s("ul",[s("li",[s("code",[e._v("cwd")]),e._v(", "),s("code",[e._v("base")]),e._v(", and "),s("code",[e._v("path")]),e._v(" will be overwritten to match the folder.")]),e._v(" "),s("li",[s("code",[e._v("stat")]),e._v(" will be updated to match the symlink on the filesystem.")]),e._v(" "),s("li",[s("code",[e._v("contents")]),e._v(" will be set to "),s("code",[e._v("null")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("symlink")]),e._v(" will be added or replaced to be the original path.")])]),e._v(" "),s("p",[s("strong",[e._v("Note: On Windows, directory links are created using Junctions by default. Use the "),s("code",[e._v("useJunctions")]),e._v(" option to disable this behavior.")])]),e._v(" "),s("h4",{attrs:{id:"options-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options-3"}},[e._v("#")]),e._v(" Options")]),e._v(" "),s("ul",[s("li",[e._v("Values passed to the options must be of the expected type, otherwise they will be ignored.")]),e._v(" "),s("li",[e._v("All options can be passed a function instead of a value. The function will be called with the "),s("a",{attrs:{href:"https://github.com/wearefractal/vinyl",target:"_blank",rel:"noopener noreferrer"}},[e._v("vinyl"),s("OutboundLink")],1),e._v(" "),s("code",[e._v("File")]),e._v(" object as its only argument and must return a value of the expected type for that option.")])]),e._v(" "),s("h5",{attrs:{id:"options-cwd-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options-cwd-2"}},[e._v("#")]),e._v(" "),s("code",[e._v("options.cwd")])]),e._v(" "),s("p",[e._v("The working directory the folder is relative to.")]),e._v(" "),s("p",[e._v("Type: "),s("code",[e._v("String")])]),e._v(" "),s("p",[e._v("Default: "),s("code",[e._v("process.cwd()")])]),e._v(" "),s("h5",{attrs:{id:"options-dirmode-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options-dirmode-2"}},[e._v("#")]),e._v(" "),s("code",[e._v("options.dirMode")])]),e._v(" "),s("p",[e._v("The mode directories should be created with.")]),e._v(" "),s("p",[e._v("Type: "),s("code",[e._v("Number")])]),e._v(" "),s("p",[e._v("Default: The process mode.")]),e._v(" "),s("h5",{attrs:{id:"options-overwrite-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options-overwrite-2"}},[e._v("#")]),e._v(" "),s("code",[e._v("options.overwrite")])]),e._v(" "),s("p",[e._v("Whether or not existing files with the same path should be overwritten.")]),e._v(" "),s("p",[e._v("Type: "),s("code",[e._v("Boolean")])]),e._v(" "),s("p",[e._v("Default: "),s("code",[e._v("true")]),e._v(" (always overwrite existing files)")]),e._v(" "),s("h5",{attrs:{id:"options-relativesymlinks-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options-relativesymlinks-2"}},[e._v("#")]),e._v(" "),s("code",[e._v("options.relativeSymlinks")])]),e._v(" "),s("p",[e._v("Whether or not the created symlinks should be relative. If "),s("code",[e._v("false")]),e._v(", the symlink will be absolute.")]),e._v(" "),s("p",[s("strong",[e._v("Note: This option will be ignored if a "),s("code",[e._v("junction")]),e._v(" is being created, as they must be absolute.")])]),e._v(" "),s("p",[e._v("Type: "),s("code",[e._v("Boolean")])]),e._v(" "),s("p",[e._v("Default: "),s("code",[e._v("false")])]),e._v(" "),s("h5",{attrs:{id:"options-usejunctions-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options-usejunctions-2"}},[e._v("#")]),e._v(" "),s("code",[e._v("options.useJunctions")])]),e._v(" "),s("p",[e._v("When creating a symlink, whether or not a directory symlink should be created as a "),s("code",[e._v("junction")]),e._v(".\nThis option is only relevant on Windows and ignored elsewhere. Please refer to the "),s("a",{attrs:{href:"#symbolic-links-on-windows"}},[e._v("Symbolic Links on Windows")]),e._v(" section below.")]),e._v(" "),s("p",[e._v("Type: "),s("code",[e._v("Boolean")])]),e._v(" "),s("p",[e._v("Default: "),s("code",[e._v("true")])]),e._v(" "),s("h4",{attrs:{id:"symbolic-links-on-windows"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#symbolic-links-on-windows"}},[e._v("#")]),e._v(" Symbolic Links on Windows")]),e._v(" "),s("p",[e._v("When creating symbolic links on Windows, we pass a "),s("code",[e._v("type")]),e._v(" argument to Node's\n"),s("code",[e._v("fs")]),e._v(" module which specifies the kind of target we link to (one of "),s("code",[e._v("'file'")]),e._v(",\n"),s("code",[e._v("'dir'")]),e._v(" or "),s("code",[e._v("'junction'")]),e._v("). Specifically, this will be "),s("code",[e._v("'file'")]),e._v(" when the target\nis a regular file, "),s("code",[e._v("'junction'")]),e._v(" if the target is a directory, or "),s("code",[e._v("'dir'")]),e._v(" if\nthe target is a directory and the user overrides the "),s("code",[e._v("useJunctions")]),e._v(" option\ndefault.")]),e._v(" "),s("p",[e._v('However, if the user tries to make a "dangling" link (pointing to a non-existent\ntarget) we won\'t be able to determine automatically which type we should use.\nIn these cases, '),s("code",[e._v("vinyl-fs")]),e._v(" will behave slightly differently depending on\nwhether the dangling link is being created via "),s("code",[e._v("symlink()")]),e._v(" or via "),s("code",[e._v("dest()")]),e._v(".")]),e._v(" "),s("p",[e._v("For dangling links created via "),s("code",[e._v("symlink()")]),e._v(", the incoming vinyl represents the\ntarget and so we will look to its stats to guess the desired type. In\nparticular, if "),s("code",[e._v("isDirectory()")]),e._v(" returns false then we'll create a "),s("code",[e._v("'file'")]),e._v(" type\nlink, otherwise we will create a "),s("code",[e._v("'junction'")]),e._v(" or a "),s("code",[e._v("'dir'")]),e._v(" type link depending\non the value of the "),s("code",[e._v("useJunctions")]),e._v(" option.")]),e._v(" "),s("p",[e._v("For dangling links created via "),s("code",[e._v("dest()")]),e._v(", the incoming vinyl represents the link -\ntypically read off disk via "),s("code",[e._v("src()")]),e._v(" with the "),s("code",[e._v("resolveSymlinks")]),e._v(" option set to\nfalse. In this case, we won't be able to make any reasonable guess as to the\ntype of link and we default to using "),s("code",[e._v("'file'")]),e._v(', which may cause unexpected behavior\nif you are creating a "dangling" link to a directory. It is advised to avoid this\nscenario.')])])}),[],!1,null,null,null);t.default=n.exports}}]);