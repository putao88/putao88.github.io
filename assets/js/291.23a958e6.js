(window.webpackJsonp=window.webpackJsonp||[]).push([[291],{653:function(t,s,a){"use strict";a.r(s);var e=a(25),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",{attrs:{align:"center"}},[a("a",{attrs:{href:"http://gulpjs.com"}},[a("img",{attrs:{height:"257",width:"114",src:"https://raw.githubusercontent.com/gulpjs/artwork/master/gulp-2x.png"}})])]),t._v(" "),a("h1",{attrs:{id:"last-run"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#last-run"}},[t._v("#")]),t._v(" last-run")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.npmjs.com/package/last-run",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"http://img.shields.io/npm/v/last-run.svg",alt:"NPM version"}}),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://www.npmjs.com/package/last-run",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"http://img.shields.io/npm/dm/last-run.svg",alt:"Downloads"}}),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://travis-ci.org/gulpjs/last-run",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"http://img.shields.io/travis/gulpjs/last-run.svg?label=travis-ci",alt:"Build Status"}}),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://ci.appveyor.com/project/gulpjs/last-run",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/appveyor/ci/gulpjs/last-run.svg?label=appveyor",alt:"AppVeyor Build Status"}}),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://coveralls.io/r/gulpjs/last-run",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"http://img.shields.io/coveralls/gulpjs/last-run/master.svg",alt:"Coveralls Status"}}),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://gitter.im/gulpjs/gulp",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://badges.gitter.im/gulpjs/gulp.svg",alt:"Gitter chat"}}),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("Capture and retrieve the last time a function was run.")]),t._v(" "),a("h2",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" lastRun "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'last-run'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("myFunc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("myFunc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// capture the run after (or before) calling the function")]),t._v("\nlastRun"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("capture")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myFunc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// retrieve the last run time")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lastRun")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myFunc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//-> outputs the Date.now() when capture was called")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("h2",{attrs:{id:"api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" API")]),t._v(" "),a("p",[a("strong",[t._v("Note: this module uses a WeakMap shim, and throws on non-extensible functions on platforms that\ndon't have a native WeakMap implementation")])]),t._v(" "),a("h3",{attrs:{id:"lastrun-fn-timeresolution-timestamp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lastrun-fn-timeresolution-timestamp"}},[t._v("#")]),t._v(" lastRun(fn, [timeResolution]) => [Timestamp]")]),t._v(" "),a("p",[t._v("Takes a function ("),a("code",[t._v("fn")]),t._v(") and returns a timestamp of the last time the function was captured.")]),t._v(" "),a("p",[t._v("Returns undefined if the function has not been captured.")]),t._v(" "),a("p",[t._v("The timestamp is always given in millisecond but the time resolution can be reduced (rounded down).\nThe use case is to be able to compare a build time to a file time attribute.\nOn node v0.10 or with file system like HFS or FAT, "),a("code",[t._v("fs.stat")]),t._v(" time attributes like "),a("code",[t._v("mtime")]),t._v(" precision is one second.")]),t._v(" "),a("p",[t._v("Assuming "),a("code",[t._v("lastRun(fn)")]),t._v(" returns 1426000001111, "),a("code",[t._v("lastRun(fn, 1000)")]),t._v(" returns 1426000001000.")]),t._v(" "),a("p",[t._v("The default time resolution is 1000 on node v0.10, 0 on node 0.11+ and iojs.\nMore information at "),a("a",{attrs:{href:"https://github.com/gulpjs/default-resolution",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("default-resolution")]),a("OutboundLink")],1),t._v(" and\n"),a("a",{attrs:{href:"https://github.com/gulpjs/undertaker/pull/17#issuecomment-82374512",target:"_blank",rel:"noopener noreferrer"}},[t._v("undertaker PR #17"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"lastrun-capture-fn-timestamp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lastrun-capture-fn-timestamp"}},[t._v("#")]),t._v(" lastRun.capture(fn, [timestamp])")]),t._v(" "),a("p",[t._v("Takes a function ("),a("code",[t._v("fn")]),t._v(") and captures the current timestamp with "),a("code",[t._v("Date.now()")]),t._v(".\nIf passed the optional timestamp, captures that time instead of "),a("code",[t._v("Date.now()")]),t._v(".\nThe captured timestamp can then be retrieved using the "),a("code",[t._v("lastRun")]),t._v(" function.")]),t._v(" "),a("h3",{attrs:{id:"lastrun-release-fn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lastrun-release-fn"}},[t._v("#")]),t._v(" lastRun.release(fn)")]),t._v(" "),a("p",[t._v("Takes a function ("),a("code",[t._v("fn")]),t._v(") and removes the last run timestamp for it.")]),t._v(" "),a("h2",{attrs:{id:"license"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#license"}},[t._v("#")]),t._v(" License")]),t._v(" "),a("p",[t._v("MIT")])])}),[],!1,null,null,null);s.default=n.exports}}]);