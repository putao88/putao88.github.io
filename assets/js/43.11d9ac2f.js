(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{404:function(t,e,r){"use strict";r.r(e);var o=r(25),n=Object(o.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"资源"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#资源"}},[t._v("#")]),t._v(" 资源")]),t._v(" "),r("ol",[r("li",[r("a",{attrs:{href:"https://juejin.cn/post/6844903919722692621",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端该如何准备数据结构和算法"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"数据结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[t._v("#")]),t._v(" 数据结构")]),t._v(" "),r("h3",{attrs:{id:"哈希表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#哈希表"}},[t._v("#")]),t._v(" 哈希表")]),t._v(" "),r("ol",[r("li",[t._v("名词解释")])]),t._v(" "),r("blockquote",[r("p",[t._v("哈希表（Hash Table，也叫散列表），是根据键（Key）而直接访问在内存存储位置的数据结构。哈希表通过计算一个关于键值的函数，将所需查询的数据映射到表中一个位置来访问记录，这加快了查找速度。这个映射函数称做哈希函数，存放记录的数组称做哈希表。\n哈希表就是一个具备映射关系的表，你可以通过映射关系由键找到值")])]),t._v(" "),r("h3",{attrs:{id:"链表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#链表"}},[t._v("#")]),t._v(" 链表")]),t._v(" "),r("ol",[r("li",[t._v("名词解释")])]),t._v(" "),r("blockquote",[r("p",[t._v("链表（Linked List）是最简单的线性的、动态数据结构。理解它是理解树结构、图结构的基础。区别于数组，链表中的元素不是存储在内存中连续的一片区域，链表中的数据存储在每一个称之为「结点」复合区域里在每一个结点除了存储数据以外，还保存了到下一个节点的指针（Pointer）。"),r("img",{attrs:{src:"/linked-list.png",alt:"linked-list"}}),r("br"),t._v("\n由于不必按顺序存储，链表在插入数据的时候可以达到 O(1)O(1) 的复杂度，但是查找一个节点或者访问特定编号的节点则需要 O(n)O(n) 的时间。使用链表结构可以克服数组链表需要预先知道数据大小的缺点，链表结构可以充分利用计算机内存空间，实现灵活的内存动态管理。但是链表失去了数组随机读取的优点，同时链表由于增加了结点的指针域，空间开销比较大。在计算机科学中，链表作为一种基础的数据结构可以用来生成其它类型的数据结构。链表通常由一连串节点组成，每个节点包含任意的实例数据（data fields）和一或两个用来指向上一个/或下一个节点的位置的链接（links）。链表最明显的好处就是，常规数组排列关联项目的方式可能不同于这些数据项目在记忆体或磁盘上顺序，数据的访问往往要在不同的排列顺序中转换。而链表是一种自我指示数据类型，因为它包含指向另一个相同类型的数据的指针（链接）。链表允许插入和移除表上任意位置上的节点，但是不允许随机存取。链表有很多种不同的类型："),r("strong",[t._v("单向链表")]),t._v("，"),r("strong",[t._v("双向链表")]),t._v("以及"),r("strong",[t._v("循环链表")]),t._v("。链表通常可以衍生出循环链表，静态链表，双链表等。对于链表使用，灵活使用虚拟头结点可以简化问题")])]),t._v(" "),r("h2",{attrs:{id:"经典题目"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#经典题目"}},[t._v("#")]),t._v(" 经典题目")]),t._v(" "),r("ol",[r("li",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/two-sum/",target:"_blank",rel:"noopener noreferrer"}},[t._v("两数之和"),r("OutboundLink")],1)])]),t._v(" "),r("blockquote",[r("p",[r("strong",[t._v("标签")]),t._v("：哈希表、数组")])]),t._v(" "),r("ol",{attrs:{start:"2"}},[r("li",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/add-two-numbers/",target:"_blank",rel:"noopener noreferrer"}},[t._v("两数相加"),r("OutboundLink")],1)])]),t._v(" "),r("blockquote",[r("p",[r("strong",[t._v("标签")]),t._v("：递归、链表")])]),t._v(" "),r("ol",{attrs:{start:"3"}},[r("li",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/",target:"_blank",rel:"noopener noreferrer"}},[t._v("无重复字符的最长子串"),r("OutboundLink")],1)])]),t._v(" "),r("blockquote",[r("p",[r("strong",[t._v("标签")]),t._v("：哈希表、双指针")])]),t._v(" "),r("ol",{attrs:{start:"4"}},[r("li",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/subarray-sum-equals-k/",target:"_blank",rel:"noopener noreferrer"}},[t._v("和为K的子数组"),r("OutboundLink")],1)])]),t._v(" "),r("blockquote",[r("p",[r("strong",[t._v("标签")]),t._v("：哈希表、数组")])]),t._v(" "),r("ol",{attrs:{start:"5"}},[r("li",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/single-number/",target:"_blank",rel:"noopener noreferrer"}},[t._v("只出现一次的数字"),r("OutboundLink")],1)])]),t._v(" "),r("blockquote",[r("p",[r("strong",[t._v("标签")]),t._v("：位运算、哈希表")])]),t._v(" "),r("ol",{attrs:{start:"6"}},[r("li",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/container-with-most-water/",target:"_blank",rel:"noopener noreferrer"}},[t._v(" 盛最多水的容器"),r("OutboundLink")],1)])]),t._v(" "),r("blockquote",[r("p",[r("strong",[t._v("标签")]),t._v("：数组、双指针")])]),t._v(" "),r("ol",{attrs:{start:"7"}},[r("li",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/move-zeroes/",target:"_blank",rel:"noopener noreferrer"}},[t._v("移动零"),r("OutboundLink")],1)])]),t._v(" "),r("blockquote",[r("p",[r("strong",[t._v("标签")]),t._v("：数组、双指针")])]),t._v(" "),r("ol",{attrs:{start:"8"}},[r("li",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/find-the-duplicate-number/",target:"_blank",rel:"noopener noreferrer"}},[t._v("寻找重复数"),r("OutboundLink")],1)])]),t._v(" "),r("blockquote",[r("p",[r("strong",[t._v("标签")]),t._v("：数组、双指针")])]),t._v(" "),r("ol",{attrs:{start:"9"}},[r("li",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/3sum/",target:"_blank",rel:"noopener noreferrer"}},[t._v("三数之和"),r("OutboundLink")],1)])]),t._v(" "),r("blockquote",[r("p",[r("strong",[t._v("标签")]),t._v("：数组、双指针")])]),t._v(" "),r("ol",{attrs:{start:"10"}},[r("li",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/merge-two-sorted-lists/",target:"_blank",rel:"noopener noreferrer"}},[t._v("合并两个有序链表"),r("OutboundLink")],1)])]),t._v(" "),r("blockquote",[r("p",[r("strong",[t._v("标签")]),t._v("：链表、递归")])]),t._v(" "),r("ol",{attrs:{start:"11"}},[r("li",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/linked-list-cycle/",target:"_blank",rel:"noopener noreferrer"}},[t._v("环形链表"),r("OutboundLink")],1)])]),t._v(" "),r("blockquote",[r("p",[r("strong",[t._v("标签")]),t._v("：链表、双指针")])]),t._v(" "),r("ol",{attrs:{start:"12"}},[r("li",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/intersection-of-two-linked-lists/",target:"_blank",rel:"noopener noreferrer"}},[t._v("相交链表"),r("OutboundLink")],1)])]),t._v(" "),r("blockquote",[r("p",[r("strong",[t._v("标签")]),t._v("：链表")])]),t._v(" "),r("ol",{attrs:{start:"13"}},[r("li",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/reverse-linked-list/",target:"_blank",rel:"noopener noreferrer"}},[t._v("反转链表"),r("OutboundLink")],1)])]),t._v(" "),r("blockquote",[r("p",[r("strong",[t._v("标签")]),t._v("：链表")])]),t._v(" "),r("ol",{attrs:{start:"14"}},[r("li",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/palindrome-linked-list/",target:"_blank",rel:"noopener noreferrer"}},[t._v("回文链表"),r("OutboundLink")],1)])]),t._v(" "),r("blockquote",[r("p",[r("strong",[t._v("标签")]),t._v("：链表")])]),t._v(" "),r("ol",{attrs:{start:"15"}},[r("li",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/",target:"_blank",rel:"noopener noreferrer"}},[t._v("删除链表的倒数第 N 个结点"),r("OutboundLink")],1)])]),t._v(" "),r("blockquote",[r("p",[r("strong",[t._v("标签")]),t._v("：链表、双指针")])]),t._v(" "),r("ol",{attrs:{start:"16"}},[r("li",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/linked-list-cycle-ii/",target:"_blank",rel:"noopener noreferrer"}},[t._v("环形链表 II"),r("OutboundLink")],1)])]),t._v(" "),r("blockquote",[r("p",[r("strong",[t._v("标签")]),t._v("：链表、数组")])]),t._v(" "),r("ol",{attrs:{start:"17"}},[r("li",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/merge-intervals/",target:"_blank",rel:"noopener noreferrer"}},[t._v("合并区间"),r("OutboundLink")],1)])]),t._v(" "),r("blockquote",[r("p",[r("strong",[t._v("标签")]),t._v("：排序、数组")])]),t._v(" "),r("ol",{attrs:{start:"18"}},[r("li",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/sort-colors/",target:"_blank",rel:"noopener noreferrer"}},[t._v("颜色分类"),r("OutboundLink")],1)])]),t._v(" "),r("blockquote",[r("p",[r("strong",[t._v("标签")]),t._v("：排序、数组")])]),t._v(" "),r("ol",{attrs:{start:"19"}},[r("li",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/sort-list/",target:"_blank",rel:"noopener noreferrer"}},[t._v("排序链表"),r("OutboundLink")],1)])]),t._v(" "),r("blockquote",[r("p",[r("strong",[t._v("标签")]),t._v("：排序、链表")])])])}),[],!1,null,null,null);e.default=n.exports}}]);