(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{385:function(t,a,r){"use strict";r.r(a);var p=r(25),c=Object(p.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h3",{attrs:{id:"_1-简介"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-简介"}},[t._v("#")]),t._v(" 1.简介")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[t._v("TypeScript 是 Microsoft 开发和维护的一种面向对象的编程语言。它是 JavaScript 的超集，\n包含了 JavaScript 的所有元素，可以载入 JavaScript 代码运行，并扩展了 JavaScript 的语法。\n")])])]),r("h3",{attrs:{id:"_2-typescript-具有以下特点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-typescript-具有以下特点"}},[t._v("#")]),t._v(" 2.TypeScript 具有以下特点：")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[t._v("TypeScript 是 Microsoft 推出的开源语言，使用 Apache 授权协议\nTypeScript 增加了静态类型、类、模块、接口和类型注解\nTypeScript 可用于开发大型的应用\nTypeScript 易学易于理解\n")])])]),r("h3",{attrs:{id:"_3-typescript-和-javascript-的主要差异"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-typescript-和-javascript-的主要差异"}},[t._v("#")]),t._v(" 3.TypeScript 和 JavaScript 的主要差异")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[t._v("TypeScript 可以使用 JavaScript 中的所有代码和编码概念，TypeScript 是为了使 JavaScript 的开发变得更加容易而创建的。\n例如，TypeScript 使用类型和接口等概念来描述正在使用的数据，这使开发人员能够快速检测错误并调试应用程序\nTypeScript 从核心语言方面和类概念的模塑方面对 JavaScript 对象模型进行扩展。\nJavaScript 代码可以在无需任何修改的情况下与 TypeScript 一同工作，同时可以使用编译器将 TypeScript 代码转换为 JavaScript。\nTypeScript 通过类型注解提供编译时的静态类型检查。\nTypeScript 中的数据要求带有明确的类型，JavaScript不要求。\nTypeScript 为函数提供了缺省参数值。\nTypeScript 引入了 JavaScript 中没有的“类”概念。\nTypeScript 中引入了模块的概念，可以把声明、数据、函数和类封装在模块中。\n")])])]),r("h3",{attrs:{id:"_4-优点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-优点"}},[t._v("#")]),t._v(" 4.优点")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[t._v("清晰的函数参数/接口属性，增加了代码可读性和可维护性\n静态检查\n生成API文档\n配合现代编辑器，各种提示\n活跃的社区\n")])])])])}),[],!1,null,null,null);a.default=c.exports}}]);