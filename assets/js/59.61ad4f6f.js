(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{414:function(s,a,e){"use strict";e.r(a);var t=e(45),r=Object(t.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"相关文档"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#相关文档"}},[s._v("#")]),s._v(" 相关文档")]),s._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://juejin.cn/post/6844903767226351623",target:"_blank",rel:"noopener noreferrer"}},[s._v("九种跨域方式实现原理"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"https://juejin.cn/post/6844904126246027278",target:"_blank",rel:"noopener noreferrer"}},[s._v("10种跨域解决方案"),e("OutboundLink")],1)])]),s._v(" "),e("h2",{attrs:{id:"跨域-非同源策略请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#跨域-非同源策略请求"}},[s._v("#")]),s._v(" 跨域（非同源策略请求）")]),s._v(" "),e("ul",[e("li",[s._v("同源策略请求 ajax/fetch")]),s._v(" "),e("li",[s._v("跨域传输")])]),s._v(" "),e("ol",[e("li",[s._v("部署到web服务器上：同源策略\nxampp (修改host文件)")]),s._v(" "),e("li",[s._v("为了好的性能，高负载，进行了服务器拆分\nweb服务器：静态资源\ndata服务器：业务逻辑和数据分析\n图片服务器")]),s._v(" "),e("li",[s._v("三者（协议，域名，端口号）都一样就是同源，只要有一个不同就是跨域")])]),s._v(" "),e("h2",{attrs:{id:"跨域解决方案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#跨域解决方案"}},[s._v("#")]),s._v(" 跨域解决方案")]),s._v(" "),e("h3",{attrs:{id:"_1-jsonp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-jsonp"}},[s._v("#")]),s._v(" 1.JSONP")]),s._v(" "),e("h4",{attrs:{id:"_1-不存在跨域请求的限制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-不存在跨域请求的限制"}},[s._v("#")]),s._v(" 1.不存在跨域请求的限制")]),s._v(" "),e("ul",[e("li",[s._v("script")]),s._v(" "),e("li",[s._v("img")]),s._v(" "),e("li",[s._v("link")]),s._v(" "),e("li",[s._v("iframe")])]),s._v(" "),e("h4",{attrs:{id:"_2-jsonp原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-jsonp原理"}},[s._v("#")]),s._v(" 2.JSONP原理")]),s._v(" "),e("p",[s._v("利用script标签没有跨域限制的漏洞，网页可以得到从其他来源动态产生的 JSON 数据。JSONP请求一定需要对方的服务器做支持才可以")]),s._v(" "),e("h4",{attrs:{id:"_3-jsonp存在的问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-jsonp存在的问题"}},[s._v("#")]),s._v(" 3. JSONP存在的问题")]),s._v(" "),e("ol",[e("li",[s._v("JSONP只能处理GET请求")]),s._v(" "),e("li",[s._v("不安全可能会遭受XSS攻击")])]),s._v(" "),e("h3",{attrs:{id:"_2-cors跨域资源共享"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-cors跨域资源共享"}},[s._v("#")]),s._v(" 2.CORS跨域资源共享")]),s._v(" "),e("p",[e("strong",[s._v("服务端设置 Access-Control-Allow-Origin 就可以开启 CORS。 该属性表示哪些域名可以访问资源，如果设置通配符则表示所有网站都可以访问资源。")]),s._v("\n注意：Access-Control-Allow-Origin设置为*后，就不能再允许携带cookie")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("客户端（发送ajax/fetch请求）\n服务器返回参数\napp.use(function(req, res, next) {\n  let origin = req.headers.origin\n  if (whitList.includes(origin)) {\n    // 设置哪个源可以访问我\n    res.setHeader('Access-Control-Allow-Origin', origin)\n    // 允许携带哪个头访问我\n    res.setHeader('Access-Control-Allow-Headers', 'name')\n    // 允许哪个方法访问我\n    res.setHeader('Access-Control-Allow-Methods', 'PUT')\n    // 允许携带cookie\n    res.setHeader('Access-Control-Allow-Credentials', true)\n    // 预检的存活时间\n    res.setHeader('Access-Control-Max-Age', 6)\n    // 允许返回的头\n    res.setHeader('Access-Control-Expose-Headers', 'name')\n    if (req.method === 'OPTIONS') {\n      res.end() // OPTIONS请求不做任何处理\n    }\n  }\n  next()\n})\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br")])]),e("h3",{attrs:{id:"_3-http-proxy-webpack-webpack-dev-server"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-http-proxy-webpack-webpack-dev-server"}},[s._v("#")]),s._v(" 3.http proxy => webpack:webpack-dev-server")]),s._v(" "),e("p",[s._v("在webpack中设置proxy代理，利用node中间件去处理请求，在proxy中请求目标地址")]),s._v(" "),e("h3",{attrs:{id:"_4-nginx反向代理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-nginx反向代理"}},[s._v("#")]),s._v(" 4.nginx反向代理")]),s._v(" "),e("p",[s._v("实现原理类似于Node中间件代理，需要你搭建一个中转nginx服务器，用于转发请求。（主要是服务器部署时使用）")]),s._v(" "),e("h3",{attrs:{id:"_5-postmessage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-postmessage"}},[s._v("#")]),s._v(" 5.postMessage")]),s._v(" "),e("p",[s._v("postMessage()方法允许来自不同源的脚本采用异步方式进行有限的通信，可以实现跨文本档、多窗口、跨域消息传递。")]),s._v(" "),e("h3",{attrs:{id:"_6-websocket"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-websocket"}},[s._v("#")]),s._v(" 6.websocket")]),s._v(" "),e("p",[s._v("WebSocket 是一种双向通信协议，在建立连接之后，WebSocket 的 server 与 client 都能主动向对方发送或接收数据")]),s._v(" "),e("h3",{attrs:{id:"_7-document-domain-iframe"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-document-domain-iframe"}},[s._v("#")]),s._v(" 7.document.domain + iframe")]),s._v(" "),e("p",[e("strong",[s._v("该方式只能用于二级域名相同的情况下，比如 a.test.com 和 b.test.com 适用于该方式。")])]),s._v(" "),e("h3",{attrs:{id:"_8-window-name-iframe"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-window-name-iframe"}},[s._v("#")]),s._v(" 8.window.name + iframe")]),s._v(" "),e("p",[s._v("window.name属性的独特之处：name值在不同的页面（甚至不同域名）加载后依旧存在，并且可以支持非常长的 name 值（2MB）")]),s._v(" "),e("h3",{attrs:{id:"_9-location-hash-iframe"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_9-location-hash-iframe"}},[s._v("#")]),s._v(" 9.location.hash + iframe")]),s._v(" "),e("p",[s._v("a.html欲与c.html跨域相互通信，通过中间页b.html来实现。 三个页面，不同域之间利用iframe的location.hash传值，相同域之间直接js访问来通信。")])])}),[],!1,null,null,null);a.default=r.exports}}]);