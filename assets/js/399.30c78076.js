(window.webpackJsonp=window.webpackJsonp||[]).push([[399],{762:function(e,t,a){"use strict";a.r(t);var s=a(25),i=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"streams-wg-meeting-2015-01-30"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#streams-wg-meeting-2015-01-30"}},[e._v("#")]),e._v(" streams WG Meeting 2015-01-30")]),e._v(" "),a("h2",{attrs:{id:"links"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#links"}},[e._v("#")]),e._v(" Links")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("Google Hangouts Video")]),e._v(": http://www.youtube.com/watch?v=I9nDOSGfwZg")]),e._v(" "),a("li",[a("strong",[e._v("GitHub Issue")]),e._v(": https://github.com/iojs/readable-stream/issues/106")]),e._v(" "),a("li",[a("strong",[e._v("Original Minutes Google Doc")]),e._v(": https://docs.google.com/document/d/17aTgLnjMXIrfjgNaTUnHQO7m3xgzHR2VXBTmi03Qii4/")])]),e._v(" "),a("h2",{attrs:{id:"agenda"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#agenda"}},[e._v("#")]),e._v(" Agenda")]),e._v(" "),a("p",[e._v("Extracted from https://github.com/iojs/readable-stream/labels/wg-agenda prior to meeting.")]),e._v(" "),a("ul",[a("li",[e._v("adopt a charter "),a("a",{attrs:{href:"https://github.com/iojs/readable-stream/issues/105",target:"_blank",rel:"noopener noreferrer"}},[e._v("#105"),a("OutboundLink")],1)]),e._v(" "),a("li",[e._v("release and versioning strategy "),a("a",{attrs:{href:"https://github.com/iojs/readable-stream/issues/101",target:"_blank",rel:"noopener noreferrer"}},[e._v("#101"),a("OutboundLink")],1)]),e._v(" "),a("li",[e._v("simpler stream creation "),a("a",{attrs:{href:"https://github.com/iojs/readable-stream/issues/102",target:"_blank",rel:"noopener noreferrer"}},[e._v("#102"),a("OutboundLink")],1)]),e._v(" "),a("li",[e._v("proposal: deprecate implicit flowing of streams "),a("a",{attrs:{href:"https://github.com/iojs/readable-stream/issues/99",target:"_blank",rel:"noopener noreferrer"}},[e._v("#99"),a("OutboundLink")],1)])]),e._v(" "),a("h2",{attrs:{id:"minutes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#minutes"}},[e._v("#")]),e._v(" Minutes")]),e._v(" "),a("h3",{attrs:{id:"adopt-a-charter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#adopt-a-charter"}},[e._v("#")]),e._v(" adopt a charter")]),e._v(" "),a("ul",[a("li",[e._v("group: +1's all around")])]),e._v(" "),a("h3",{attrs:{id:"what-versioning-scheme-should-be-adopted"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-versioning-scheme-should-be-adopted"}},[e._v("#")]),e._v(" What versioning scheme should be adopted?")]),e._v(" "),a("ul",[a("li",[e._v("group: +1’s 3.0.0")]),e._v(" "),a("li",[e._v("domenic+group: pulling in patches from other sources where appropriate")]),e._v(" "),a("li",[e._v("mikeal: version independently, suggesting versions for io.js")]),e._v(" "),a("li",[e._v("mikeal+domenic: work with TC to notify in advance of changes\nsimpler stream creation")])]),e._v(" "),a("h3",{attrs:{id:"streamline-creation-of-streams"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#streamline-creation-of-streams"}},[e._v("#")]),e._v(" streamline creation of streams")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("sam: streamline creation of streams")])]),e._v(" "),a("li",[a("p",[e._v("domenic: nice simple solution posted\nbut, we lose the opportunity to change the model\nmay not be backwards incompatible (double check keys)")]),e._v(" "),a("p",[a("strong",[e._v("action item:")]),e._v(" domenic will check")])])]),e._v(" "),a("h3",{attrs:{id:"remove-implicit-flowing-of-streams-on-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remove-implicit-flowing-of-streams-on-data"}},[e._v("#")]),e._v(" remove implicit flowing of streams on(‘data’)")]),e._v(" "),a("ul",[a("li",[e._v("add isFlowing / isPaused")]),e._v(" "),a("li",[e._v("mikeal: worrying that we’re documenting polyfill methods – confuses users")]),e._v(" "),a("li",[e._v("domenic: more reflective API is probably good, with warning labels for users")]),e._v(" "),a("li",[e._v("new section for mad scientists (reflective stream access)")]),e._v(" "),a("li",[e._v("calvin: name the “third state”")]),e._v(" "),a("li",[e._v("mikeal: maybe borrow the name from whatwg?")]),e._v(" "),a("li",[e._v("domenic: we’re missing the “third state”")]),e._v(" "),a("li",[e._v("consensus: kind of difficult to name the third state")]),e._v(" "),a("li",[e._v("mikeal: figure out differences in states / compat")]),e._v(" "),a("li",[e._v("mathias: always flow on data – eliminates third state\n"),a("ul",[a("li",[e._v("explore what it breaks")])])])]),e._v(" "),a("p",[a("strong",[e._v("action items:")])]),e._v(" "),a("ul",[a("li",[e._v("ask isaac for ability to list packages by what public io.js APIs they use (esp. Stream)")]),e._v(" "),a("li",[e._v("ask rod/build for infrastructure")]),e._v(" "),a("li",[a("strong",[e._v("chris")]),e._v(": explore the “flow on data” approach")]),e._v(" "),a("li",[e._v("add isPaused/isFlowing")]),e._v(" "),a("li",[e._v("add new docs section")]),e._v(" "),a("li",[e._v("move isPaused to that section")])])])}),[],!1,null,null,null);t.default=i.exports}}]);