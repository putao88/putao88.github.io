(window.webpackJsonp=window.webpackJsonp||[]).push([[326],{690:function(a,n,s){"use strict";s.r(n);var e=s(25),t=Object(e.a)({},(function(){var a=this,n=a.$createElement,s=a._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"nan-callback"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nan-callback"}},[a._v("#")]),a._v(" Nan::Callback")]),a._v(" "),s("p",[s("code",[a._v("Nan::Callback")]),a._v(" makes it easier to use "),s("code",[a._v("v8::Function")]),a._v(" handles as callbacks. A class that wraps a "),s("code",[a._v("v8::Function")]),a._v(" handle, protecting it from garbage collection and making it particularly useful for storage and use across asynchronous execution.")]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#api_nan_callback"}},[s("b",[s("code",[a._v("Nan::Callback")])])])])]),a._v(" "),s("p",[s("a",{attrs:{name:"api_nan_callback"}})]),a._v(" "),s("h3",{attrs:{id:"nan-callback-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nan-callback-2"}},[a._v("#")]),a._v(" Nan::Callback")]),a._v(" "),s("div",{staticClass:"language-c++ line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("class Callback {\n public:\n  Callback();\n\n  explicit Callback(const v8::Local<v8::Function> &fn);\n\n  ~Callback();\n\n  bool operator==(const Callback &other) const;\n\n  bool operator!=(const Callback &other) const;\n\n  v8::Local<v8::Function> operator*() const;\n\n  MaybeLocal<v8::Value> operator()(AsyncResource* async_resource,\n                                   v8::Local<v8::Object> target,\n                                   int argc = 0,\n                                   v8::Local<v8::Value> argv[] = 0) const;\n\n  MaybeLocal<v8::Value> operator()(AsyncResource* async_resource,\n                                   int argc = 0,\n                                   v8::Local<v8::Value> argv[] = 0) const;\n\n  void SetFunction(const v8::Local<v8::Function> &fn);\n\n  v8::Local<v8::Function> GetFunction() const;\n\n  bool IsEmpty() const;\n\n  void Reset(const v8::Local<v8::Function> &fn);\n\n  void Reset();\n\n  MaybeLocal<v8::Value> Call(v8::Local<v8::Object> target,\n                            int argc,\n                            v8::Local<v8::Value> argv[],\n                            AsyncResource* async_resource) const;\n  MaybeLocal<v8::Value> Call(int argc,\n                             v8::Local<v8::Value> argv[],\n                             AsyncResource* async_resource) const;\n\n  // Deprecated versions. Use the versions that accept an async_resource instead\n  // as they run the callback in the correct async context as specified by the\n  // resource. If you want to call a synchronous JS function (i.e. on a\n  // non-empty JS stack), you can use Nan::Call instead.\n  v8::Local<v8::Value> operator()(v8::Local<v8::Object> target,\n                                  int argc = 0,\n                                  v8::Local<v8::Value> argv[] = 0) const;\n\n  v8::Local<v8::Value> operator()(int argc = 0,\n                                  v8::Local<v8::Value> argv[] = 0) const;\n  v8::Local<v8::Value> Call(v8::Local<v8::Object> target,\n                            int argc,\n                            v8::Local<v8::Value> argv[]) const;\n\n  v8::Local<v8::Value> Call(int argc, v8::Local<v8::Value> argv[]) const;\n};\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br"),s("span",{staticClass:"line-number"},[a._v("23")]),s("br"),s("span",{staticClass:"line-number"},[a._v("24")]),s("br"),s("span",{staticClass:"line-number"},[a._v("25")]),s("br"),s("span",{staticClass:"line-number"},[a._v("26")]),s("br"),s("span",{staticClass:"line-number"},[a._v("27")]),s("br"),s("span",{staticClass:"line-number"},[a._v("28")]),s("br"),s("span",{staticClass:"line-number"},[a._v("29")]),s("br"),s("span",{staticClass:"line-number"},[a._v("30")]),s("br"),s("span",{staticClass:"line-number"},[a._v("31")]),s("br"),s("span",{staticClass:"line-number"},[a._v("32")]),s("br"),s("span",{staticClass:"line-number"},[a._v("33")]),s("br"),s("span",{staticClass:"line-number"},[a._v("34")]),s("br"),s("span",{staticClass:"line-number"},[a._v("35")]),s("br"),s("span",{staticClass:"line-number"},[a._v("36")]),s("br"),s("span",{staticClass:"line-number"},[a._v("37")]),s("br"),s("span",{staticClass:"line-number"},[a._v("38")]),s("br"),s("span",{staticClass:"line-number"},[a._v("39")]),s("br"),s("span",{staticClass:"line-number"},[a._v("40")]),s("br"),s("span",{staticClass:"line-number"},[a._v("41")]),s("br"),s("span",{staticClass:"line-number"},[a._v("42")]),s("br"),s("span",{staticClass:"line-number"},[a._v("43")]),s("br"),s("span",{staticClass:"line-number"},[a._v("44")]),s("br"),s("span",{staticClass:"line-number"},[a._v("45")]),s("br"),s("span",{staticClass:"line-number"},[a._v("46")]),s("br"),s("span",{staticClass:"line-number"},[a._v("47")]),s("br"),s("span",{staticClass:"line-number"},[a._v("48")]),s("br"),s("span",{staticClass:"line-number"},[a._v("49")]),s("br"),s("span",{staticClass:"line-number"},[a._v("50")]),s("br"),s("span",{staticClass:"line-number"},[a._v("51")]),s("br"),s("span",{staticClass:"line-number"},[a._v("52")]),s("br"),s("span",{staticClass:"line-number"},[a._v("53")]),s("br"),s("span",{staticClass:"line-number"},[a._v("54")]),s("br"),s("span",{staticClass:"line-number"},[a._v("55")]),s("br"),s("span",{staticClass:"line-number"},[a._v("56")]),s("br"),s("span",{staticClass:"line-number"},[a._v("57")]),s("br")])]),s("p",[a._v("Example usage:")]),a._v(" "),s("div",{staticClass:"language-c++ line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("v8::Local<v8::Function> function;\nNan::Callback callback(function);\ncallback.Call(0, 0);\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);