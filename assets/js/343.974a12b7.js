(window.webpackJsonp=window.webpackJsonp||[]).push([[343],{706:function(t,s,a){"use strict";a.r(s);var n=a(25),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"nanomatch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nanomatch"}},[t._v("#")]),t._v(" nanomatch "),a("a",{attrs:{href:"https://www.npmjs.com/package/nanomatch",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/npm/v/nanomatch.svg?style=flat",alt:"NPM version"}}),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://npmjs.org/package/nanomatch",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/npm/dm/nanomatch.svg?style=flat",alt:"NPM monthly downloads"}}),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://npmjs.org/package/nanomatch",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/npm/dt/nanomatch.svg?style=flat",alt:"NPM total downloads"}}),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://travis-ci.org/micromatch/nanomatch",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/travis/micromatch/nanomatch.svg?style=flat&label=Travis",alt:"Linux Build Status"}}),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://ci.appveyor.com/project/micromatch/nanomatch",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/appveyor/ci/micromatch/nanomatch.svg?style=flat&label=AppVeyor",alt:"Windows Build Status"}}),a("OutboundLink")],1)]),t._v(" "),a("blockquote",[a("p",[t._v("Fast, minimal glob matcher for node.js. Similar to micromatch, minimatch and multimatch, but complete Bash 4.3 wildcard support only (no support for exglobs, posix brackets or braces)")])]),t._v(" "),a("p",[t._v("Please consider following this project's author, "),a("a",{attrs:{href:"https://github.com/jonschlinkert",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jon Schlinkert"),a("OutboundLink")],1),t._v(", and consider starring the project to show your ❤️ and support.")]),t._v(" "),a("h2",{attrs:{id:"table-of-contents"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#table-of-contents"}},[t._v("#")]),t._v(" Table of Contents")]),t._v(" "),a("details",[a("summary",[a("strong",[t._v("Details")])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#install"}},[t._v("Install")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#what-is-nanomatch"}},[t._v("What is nanomatch?")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#getting-started"}},[t._v("Getting started")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#installing-nanomatch"}},[t._v("Installing nanomatch")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#usage"}},[t._v("Usage")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#documentation"}},[t._v("Documentation")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#escaping"}},[t._v("Escaping")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#api"}},[t._v("API")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#options"}},[t._v("Options")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#optionsbasename"}},[t._v("options.basename")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#optionsbash"}},[t._v("options.bash")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#optionscache"}},[t._v("options.cache")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#optionsdot"}},[t._v("options.dot")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#optionsfailglob"}},[t._v("options.failglob")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#optionsignore"}},[t._v("options.ignore")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#optionsmatchbase"}},[t._v("options.matchBase")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#optionsnocase"}},[t._v("options.nocase")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#optionsnodupes"}},[t._v("options.nodupes")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#optionsnoglobstar"}},[t._v("options.noglobstar")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#optionsnonegate"}},[t._v("options.nonegate")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#optionsnonull"}},[t._v("options.nonull")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#optionsnullglob"}},[t._v("options.nullglob")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#optionsslash"}},[t._v("options.slash")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#optionsstar"}},[t._v("options.star")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#optionssnapdragon"}},[t._v("options.snapdragon")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#optionssourcemap"}},[t._v("options.sourcemap")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#optionsunescape"}},[t._v("options.unescape")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#optionsunixify"}},[t._v("options.unixify")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#features"}},[t._v("Features")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#bash-expansion-libs"}},[t._v("Bash expansion libs")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#benchmarks"}},[t._v("Benchmarks")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#running-benchmarks"}},[t._v("Running benchmarks")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#nanomatch-vs-minimatch-vs-multimatch"}},[t._v("Nanomatch vs. Minimatch vs. Multimatch")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#about"}},[t._v("About")])])])]),t._v(" "),a("h2",{attrs:{id:"install"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install"}},[t._v("#")]),t._v(" Install")]),t._v(" "),a("p",[t._v("Install with "),a("a",{attrs:{href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("npm"),a("OutboundLink")],1),t._v(":")]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --save nanomatch\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("details",[a("summary",[a("strong",[t._v("Release history")])]),t._v(" "),a("h2",{attrs:{id:"history"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#history"}},[t._v("#")]),t._v(" History")]),t._v(" "),a("h3",{attrs:{id:"key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#key"}},[t._v("#")]),t._v(" key")]),t._v(" "),a("p",[t._v("Changelog entries are classified using the following labels "),a("em",[t._v("(from "),a("a",{attrs:{href:"https://github.com/olivierlacan/keep-a-changelog",target:"_blank",rel:"noopener noreferrer"}},[t._v("keep-a-changelog"),a("OutboundLink")],1)]),t._v("):")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("added")]),t._v(": for new features")]),t._v(" "),a("li",[a("code",[t._v("changed")]),t._v(": for changes in existing functionality")]),t._v(" "),a("li",[a("code",[t._v("deprecated")]),t._v(": for once-stable features removed in upcoming releases")]),t._v(" "),a("li",[a("code",[t._v("removed")]),t._v(": for deprecated features removed in this release")]),t._v(" "),a("li",[a("code",[t._v("fixed")]),t._v(": for any bug fixes")]),t._v(" "),a("li",[a("code",[t._v("bumped")]),t._v(": updated dependencies, only minor or higher will be listed.")])]),t._v(" "),a("h3",{attrs:{id:"_1-1-0-2017-04-11"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-0-2017-04-11"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://github.com/micromatch/nanomatch/compare/1.0.4...1.1.0",target:"_blank",rel:"noopener noreferrer"}},[t._v("1.1.0"),a("OutboundLink")],1),t._v(" - 2017-04-11")]),t._v(" "),a("p",[a("strong",[t._v("Fixed")])]),t._v(" "),a("ul",[a("li",[t._v("adds support for unclosed quotes")])]),t._v(" "),a("p",[a("strong",[t._v("Added")])]),t._v(" "),a("ul",[a("li",[t._v("adds support for "),a("code",[t._v("options.noglobstar")])])]),t._v(" "),a("h3",{attrs:{id:"_1-0-4-2017-04-06"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-0-4-2017-04-06"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://github.com/micromatch/nanomatch/compare/1.0.3...1.0.4",target:"_blank",rel:"noopener noreferrer"}},[t._v("1.0.4"),a("OutboundLink")],1),t._v(" - 2017-04-06")]),t._v(" "),a("p",[t._v("Housekeeping updates. Adds documentation section about escaping, cleans up utils.")]),t._v(" "),a("h3",{attrs:{id:"_1-0-3-2017-04-06"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-0-3-2017-04-06"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://github.com/micromatch/nanomatch/compare/1.0.1...1.0.3",target:"_blank",rel:"noopener noreferrer"}},[t._v("1.0.3"),a("OutboundLink")],1),t._v(" - 2017-04-06")]),t._v(" "),a("p",[t._v("This release includes fixes for windows path edge cases and other improvements for stricter adherence to bash spec.")]),t._v(" "),a("p",[a("strong",[t._v("Fixed")])]),t._v(" "),a("ul",[a("li",[t._v("More windows path edge cases")])]),t._v(" "),a("p",[a("strong",[t._v("Added")])]),t._v(" "),a("ul",[a("li",[t._v("Support for bash-like quoted strings for escaping sequences of characters, such as "),a("code",[t._v('foo/"**"/bar')]),t._v(" where "),a("code",[t._v("**")]),t._v(" should be matched literally and not evaluated as special characters.")])]),t._v(" "),a("h3",{attrs:{id:"_1-0-1-2016-12-12"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-0-1-2016-12-12"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://github.com/micromatch/nanomatch/compare/1.0.0...1.0.1",target:"_blank",rel:"noopener noreferrer"}},[t._v("1.0.1"),a("OutboundLink")],1),t._v(" - 2016-12-12")]),t._v(" "),a("p",[a("strong",[t._v("Added")])]),t._v(" "),a("ul",[a("li",[t._v("Support for windows path edge cases where backslashes are used in brackets or other unusual combinations.")])]),t._v(" "),a("h3",{attrs:{id:"_1-0-0-2016-12-12"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-0-0-2016-12-12"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://github.com/micromatch/nanomatch/compare/0.1.0...1.0.0",target:"_blank",rel:"noopener noreferrer"}},[t._v("1.0.0"),a("OutboundLink")],1),t._v(" - 2016-12-12")]),t._v(" "),a("p",[t._v("Stable release.")]),t._v(" "),a("h3",{attrs:{id:"_0-1-0-2016-10-08"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0-1-0-2016-10-08"}},[t._v("#")]),t._v(" [0.1.0] - 2016-10-08")]),t._v(" "),a("p",[t._v("First release.")])]),t._v(" "),a("h2",{attrs:{id:"what-is-nanomatch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-nanomatch"}},[t._v("#")]),t._v(" What is nanomatch?")]),t._v(" "),a("p",[t._v('Nanomatch is a fast and accurate glob matcher with full support for standard Bash glob features, including the following "metacharacters": '),a("code",[t._v("*")]),t._v(", "),a("code",[t._v("**")]),t._v(", "),a("code",[t._v("?")]),t._v(" and "),a("code",[t._v("[...]")]),t._v(".")]),t._v(" "),a("p",[a("strong",[t._v("Learn more")])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#getting-started"}},[t._v("Getting started")]),t._v(": learn how to install and begin using nanomatch")]),t._v(" "),a("li",[a("a",{attrs:{href:"#features"}},[t._v("Features")]),t._v(": jump to info about supported patterns, and a glob matching reference")]),t._v(" "),a("li",[a("a",{attrs:{href:"#api"}},[t._v("API documentation")]),t._v(": jump to available options and methods")]),t._v(" "),a("li",[a("a",{attrs:{href:"test"}},[t._v("Unit tests")]),t._v(": visit unit tests. there is no better way to learn a code library than spending time the unit tests. Nanomatch has 36,000 unit tests - go become a glob matching ninja!")])]),t._v(" "),a("details",[a("summary",[a("strong",[t._v("How is this different?")])]),t._v(" "),a("p",[a("strong",[t._v("Speed and accuracy")])]),t._v(" "),a("p",[t._v("Nanomatch uses "),a("a",{attrs:{href:"https://github.com/jonschlinkert/snapdragon",target:"_blank",rel:"noopener noreferrer"}},[t._v("snapdragon"),a("OutboundLink")],1),t._v(" for parsing and compiling globs, which results in:")]),t._v(" "),a("ul",[a("li",[t._v("Granular control over the entire conversion process in a way that is easy to understand, reason about, and customize.")]),t._v(" "),a("li",[t._v("Faster matching, from a combination of optimized glob patterns and (optional) caching.")]),t._v(" "),a("li",[t._v("Much greater accuracy than minimatch. In fact, nanomatch passes "),a("em",[t._v("all of the spec tests")]),t._v(" from bash, including some that bash still fails. However, since there is no real specification for globs, if you encounter a pattern that yields unexpected match results "),a("a",{attrs:{href:"../../issues"}},[t._v("after researching previous issues")]),t._v(", "),a("a",{attrs:{href:"../../issues/new"}},[t._v("please let us know")]),t._v(".")])]),t._v(" "),a("p",[a("strong",[t._v("Basic globbing only")])]),t._v(" "),a("p",[t._v("Nanomatch supports "),a("a",{attrs:{href:"#features"}},[t._v("basic globbing only")]),t._v(", which is limited to "),a("code",[t._v("*")]),t._v(", "),a("code",[t._v("**")]),t._v(", "),a("code",[t._v("?")]),t._v(" and regex-like brackets.")]),t._v(" "),a("p",[t._v("If you need support for the other "),a("a",{attrs:{href:"#bash-expansion-libs"}},[t._v('bash "expansion" types')]),t._v(" (in addition to the wildcard matching provided by nanomatch), consider using "),a("a",{attrs:{href:"https://github.com/micromatch/micromatch",target:"_blank",rel:"noopener noreferrer"}},[t._v("micromatch"),a("OutboundLink")],1),t._v(" instead. "),a("em",[t._v("(micromatch >=3.0.0  uses the nanomatch parser and compiler for basic glob matching)")])])]),t._v(" "),a("h2",{attrs:{id:"getting-started"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getting-started"}},[t._v("#")]),t._v(" Getting started")]),t._v(" "),a("h3",{attrs:{id:"installing-nanomatch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installing-nanomatch"}},[t._v("#")]),t._v(" Installing nanomatch")]),t._v(" "),a("p",[a("strong",[t._v("Install with "),a("a",{attrs:{href:"https://yarnpkg.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("yarn"),a("OutboundLink")],1)])]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" nanomatch\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("strong",[t._v("Install with "),a("a",{attrs:{href:"https://npmjs.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("npm"),a("OutboundLink")],1)])]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" nanomatch\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),a("p",[t._v("Add nanomatch to your project using node's "),a("code",[t._v("require()")]),t._v(" system:")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nanomatch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nanomatch'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the main export is a function that takes an array of strings to match")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// and a string or array of patterns to use for matching")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nanomatch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" patterns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[a("strong",[t._v("Params")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("list")]),t._v(" "),a("strong",[t._v("{String|Array}")]),t._v(": List of strings to perform matches against. This is often a list of file paths.")]),t._v(" "),a("li",[a("code",[t._v("patterns")]),t._v(" "),a("strong",[t._v("{String|Array}")]),t._v(": One or more "),a("a",{attrs:{href:"#features"}},[t._v("glob paterns")]),t._v(" to use for matching.")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" "),a("strong",[t._v("{Object}")]),t._v(": Any "),a("a",{attrs:{href:"#options"}},[t._v("supported options")]),t._v(" may be passed")])]),t._v(" "),a("p",[a("strong",[t._v("Examples")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nanomatch'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b/b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c/c/c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> ['a']")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b/b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c/c/c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*/*'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> ['b/b']")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b/b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c/c/c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'**'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> ['a', 'b/b', 'c/c/c']")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("See the "),a("a",{attrs:{href:"#api"}},[t._v("API documentation")]),t._v(" for available methods and "),a("a",{attrs:{href:"https://github.com/einaros/options.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("options"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"documentation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#documentation"}},[t._v("#")]),t._v(" Documentation")]),t._v(" "),a("h3",{attrs:{id:"escaping"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#escaping"}},[t._v("#")]),t._v(" Escaping")]),t._v(" "),a("p",[a("em",[t._v("Backslashes and quotes")]),t._v(" can be used to escape characters, forcing nanomatch to regard those characters as a literal characters.")]),t._v(" "),a("p",[a("strong",[t._v("Backslashes")])]),t._v(" "),a("p",[t._v("Use backslashes to escape single characters. For example, the following pattern would match "),a("code",[t._v("foo/*/bar")]),t._v(" exactly:")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo/\\*/bar'")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("The following pattern would match "),a("code",[t._v("foo/")]),t._v(" followed by a literal "),a("code",[t._v("*")]),t._v(", followed by zero or more of any characters besides "),a("code",[t._v("/")]),t._v(", followed by "),a("code",[t._v("/bar")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo/\\**/bar'")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("strong",[t._v("Quoted strings")])]),t._v(" "),a("p",[t._v("Use single or double quotes to escape sequences of characters. For example, the following patterns would match "),a("code",[t._v("foo/**/bar")]),t._v(" exactly:")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo/\"**\"/bar'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo/\\'**\\'/bar'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"foo/'**'/bar\"")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[a("strong",[t._v("Matching literal quotes")])]),t._v(" "),a("p",[t._v("If you need to match quotes literally, you can escape them as well. For example, the following will match "),a("code",[t._v('foo/"*"/bar')]),t._v(", "),a("code",[t._v('foo/"a"/bar')]),t._v(", "),a("code",[t._v('foo/"b"/bar')]),t._v(", or "),a("code",[t._v('foo/"c"/bar')]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo/\\\\\"*\\\\\"/bar'")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("And the following will match "),a("code",[t._v("foo/'*'/bar")]),t._v(", "),a("code",[t._v("foo/'a'/bar")]),t._v(", "),a("code",[t._v("foo/'b'/bar")]),t._v(", or "),a("code",[t._v("foo/'c'/bar")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo/\\\\\\'*\\\\\\'/bar'")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h2",{attrs:{id:"api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" API")]),t._v(" "),a("h3",{attrs:{id:"nanomatch-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nanomatch-2"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"index.js#L40"}},[t._v("nanomatch")])]),t._v(" "),a("p",[t._v("The main function takes a list of strings and one or more glob patterns to use for matching.")]),t._v(" "),a("p",[a("strong",[t._v("Params")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("list")]),t._v(" "),a("strong",[t._v("{Array}")]),t._v(": A list of strings to match")]),t._v(" "),a("li",[a("code",[t._v("patterns")]),t._v(" "),a("strong",[t._v("{String|Array}")]),t._v(": One or more glob patterns to use for matching.")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" "),a("strong",[t._v("{Object}")]),t._v(": See available "),a("a",{attrs:{href:"#options"}},[t._v("options")]),t._v(" for changing how matches are performed")]),t._v(" "),a("li",[a("code",[t._v("returns")]),t._v(" "),a("strong",[t._v("{Array}")]),t._v(": Returns an array of matches")])]),t._v(" "),a("p",[a("strong",[t._v("Example")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nanomatch'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" patterns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a.txt'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> [ 'a.js' ]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h3",{attrs:{id:"match"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#match"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"index.js#L106"}},[t._v(".match")])]),t._v(" "),a("p",[t._v("Similar to the main function, but "),a("code",[t._v("pattern")]),t._v(" must be a string.")]),t._v(" "),a("p",[a("strong",[t._v("Params")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("list")]),t._v(" "),a("strong",[t._v("{Array}")]),t._v(": Array of strings to match")]),t._v(" "),a("li",[a("code",[t._v("pattern")]),t._v(" "),a("strong",[t._v("{String}")]),t._v(": Glob pattern to use for matching.")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" "),a("strong",[t._v("{Object}")]),t._v(": See available "),a("a",{attrs:{href:"#options"}},[t._v("options")]),t._v(" for changing how matches are performed")]),t._v(" "),a("li",[a("code",[t._v("returns")]),t._v(" "),a("strong",[t._v("{Array}")]),t._v(": Returns an array of matches")])]),t._v(" "),a("p",[a("strong",[t._v("Example")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nanomatch'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pattern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a.a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a.aa'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a.b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a.c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*.a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> ['a.a', 'a.aa']")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h3",{attrs:{id:"ismatch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ismatch"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"index.js#L167"}},[t._v(".isMatch")])]),t._v(" "),a("p",[t._v("Returns true if the specified "),a("code",[t._v("string")]),t._v(" matches the given glob "),a("code",[t._v("pattern")]),t._v(".")]),t._v(" "),a("p",[a("strong",[t._v("Params")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("string")]),t._v(" "),a("strong",[t._v("{String}")]),t._v(": String to match")]),t._v(" "),a("li",[a("code",[t._v("pattern")]),t._v(" "),a("strong",[t._v("{String}")]),t._v(": Glob pattern to use for matching.")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" "),a("strong",[t._v("{Object}")]),t._v(": See available "),a("a",{attrs:{href:"#options"}},[t._v("options")]),t._v(" for changing how matches are performed")]),t._v(" "),a("li",[a("code",[t._v("returns")]),t._v(" "),a("strong",[t._v("{Boolean}")]),t._v(": Returns true if the string matches the glob pattern.")])]),t._v(" "),a("p",[a("strong",[t._v("Example")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nanomatch'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isMatch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pattern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isMatch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a.a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*.a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isMatch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a.b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*.a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> false")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h3",{attrs:{id:"some"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#some"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"index.js#L205"}},[t._v(".some")])]),t._v(" "),a("p",[t._v("Returns true if some of the elements in the given "),a("code",[t._v("list")]),t._v(" match any of the given glob "),a("code",[t._v("patterns")]),t._v(".")]),t._v(" "),a("p",[a("strong",[t._v("Params")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("list")]),t._v(" "),a("strong",[t._v("{String|Array}")]),t._v(": The string or array of strings to test. Returns as soon as the first match is found.")]),t._v(" "),a("li",[a("code",[t._v("patterns")]),t._v(" "),a("strong",[t._v("{String|Array}")]),t._v(": One or more glob patterns to use for matching.")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" "),a("strong",[t._v("{Object}")]),t._v(": See available "),a("a",{attrs:{href:"#options"}},[t._v("options")]),t._v(" for changing how matches are performed")]),t._v(" "),a("li",[a("code",[t._v("returns")]),t._v(" "),a("strong",[t._v("{Boolean}")]),t._v(": Returns true if any patterns match "),a("code",[t._v("str")])])]),t._v(" "),a("p",[a("strong",[t._v("Example")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nanomatch'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("some")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" patterns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("some")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'!foo.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("some")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'!foo.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h3",{attrs:{id:"every"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#every"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"index.js#L243"}},[t._v(".every")])]),t._v(" "),a("p",[t._v("Returns true if every element in the given "),a("code",[t._v("list")]),t._v(" matches at least one of the given glob "),a("code",[t._v("patterns")]),t._v(".")]),t._v(" "),a("p",[a("strong",[t._v("Params")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("list")]),t._v(" "),a("strong",[t._v("{String|Array}")]),t._v(": The string or array of strings to test.")]),t._v(" "),a("li",[a("code",[t._v("patterns")]),t._v(" "),a("strong",[t._v("{String|Array}")]),t._v(": One or more glob patterns to use for matching.")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" "),a("strong",[t._v("{Object}")]),t._v(": See available "),a("a",{attrs:{href:"#options"}},[t._v("options")]),t._v(" for changing how matches are performed")]),t._v(" "),a("li",[a("code",[t._v("returns")]),t._v(" "),a("strong",[t._v("{Boolean}")]),t._v(": Returns true if any patterns match "),a("code",[t._v("str")])])]),t._v(" "),a("p",[a("strong",[t._v("Example")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nanomatch'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("every")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" patterns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("every")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("every")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("every")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'!foo.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("every")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'!foo.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("h3",{attrs:{id:"any"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#any"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"index.js#L277"}},[t._v(".any")])]),t._v(" "),a("p",[t._v("Returns true if "),a("strong",[t._v("any")]),t._v(" of the given glob "),a("code",[t._v("patterns")]),t._v(" match the specified "),a("code",[t._v("string")]),t._v(".")]),t._v(" "),a("p",[a("strong",[t._v("Params")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("str")]),t._v(" "),a("strong",[t._v("{String|Array}")]),t._v(": The string to test.")]),t._v(" "),a("li",[a("code",[t._v("patterns")]),t._v(" "),a("strong",[t._v("{String|Array}")]),t._v(": One or more glob patterns to use for matching.")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" "),a("strong",[t._v("{Object}")]),t._v(": See available "),a("a",{attrs:{href:"#options"}},[t._v("options")]),t._v(" for changing how matches are performed")]),t._v(" "),a("li",[a("code",[t._v("returns")]),t._v(" "),a("strong",[t._v("{Boolean}")]),t._v(": Returns true if any patterns match "),a("code",[t._v("str")])])]),t._v(" "),a("p",[a("strong",[t._v("Example")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nanomatch'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" patterns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a.a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b.*'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*.a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a.a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b.*'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> false")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h3",{attrs:{id:"all"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#all"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"index.js#L325"}},[t._v(".all")])]),t._v(" "),a("p",[t._v("Returns true if "),a("strong",[t._v("all")]),t._v(" of the given "),a("code",[t._v("patterns")]),t._v(" match the specified string.")]),t._v(" "),a("p",[a("strong",[t._v("Params")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("str")]),t._v(" "),a("strong",[t._v("{String|Array}")]),t._v(": The string to test.")]),t._v(" "),a("li",[a("code",[t._v("patterns")]),t._v(" "),a("strong",[t._v("{String|Array}")]),t._v(": One or more glob patterns to use for matching.")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" "),a("strong",[t._v("{Object}")]),t._v(": See available "),a("a",{attrs:{href:"#options"}},[t._v("options")]),t._v(" for changing how matches are performed")]),t._v(" "),a("li",[a("code",[t._v("returns")]),t._v(" "),a("strong",[t._v("{Boolean}")]),t._v(": Returns true if any patterns match "),a("code",[t._v("str")])])]),t._v(" "),a("p",[a("strong",[t._v("Example")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nanomatch'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" patterns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'!foo.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'f*'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*o*'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*o.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])]),a("h3",{attrs:{id:"not"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#not"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"index.js#L359"}},[t._v(".not")])]),t._v(" "),a("p",[t._v("Returns a list of strings that "),a("em",[a("strong",[t._v("do not match any")])]),t._v(" of the given "),a("code",[t._v("patterns")]),t._v(".")]),t._v(" "),a("p",[a("strong",[t._v("Params")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("list")]),t._v(" "),a("strong",[t._v("{Array}")]),t._v(": Array of strings to match.")]),t._v(" "),a("li",[a("code",[t._v("patterns")]),t._v(" "),a("strong",[t._v("{String|Array}")]),t._v(": One or more glob pattern to use for matching.")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" "),a("strong",[t._v("{Object}")]),t._v(": See available "),a("a",{attrs:{href:"#options"}},[t._v("options")]),t._v(" for changing how matches are performed")]),t._v(" "),a("li",[a("code",[t._v("returns")]),t._v(" "),a("strong",[t._v("{Array}")]),t._v(": Returns an array of strings that "),a("strong",[t._v("do not match")]),t._v(" the given patterns.")])]),t._v(" "),a("p",[a("strong",[t._v("Example")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nanomatch'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("not")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" patterns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("not")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a.a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b.b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c.c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*.a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> ['b.b', 'c.c']")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h3",{attrs:{id:"contains"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#contains"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"index.js#L394"}},[t._v(".contains")])]),t._v(" "),a("p",[t._v("Returns true if the given "),a("code",[t._v("string")]),t._v(" contains the given pattern. Similar to "),a("a",{attrs:{href:"#isMatch"}},[t._v(".isMatch")]),t._v(" but the pattern can match any part of the string.")]),t._v(" "),a("p",[a("strong",[t._v("Params")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("str")]),t._v(" "),a("strong",[t._v("{String}")]),t._v(": The string to match.")]),t._v(" "),a("li",[a("code",[t._v("patterns")]),t._v(" "),a("strong",[t._v("{String|Array}")]),t._v(": Glob pattern to use for matching.")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" "),a("strong",[t._v("{Object}")]),t._v(": See available "),a("a",{attrs:{href:"#options"}},[t._v("options")]),t._v(" for changing how matches are performed")]),t._v(" "),a("li",[a("code",[t._v("returns")]),t._v(" "),a("strong",[t._v("{Boolean}")]),t._v(": Returns true if the patter matches any part of "),a("code",[t._v("str")]),t._v(".")])]),t._v(" "),a("p",[a("strong",[t._v("Example")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nanomatch'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("contains")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pattern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("contains")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aa/bb/cc'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("contains")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aa/bb/cc'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*d'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> false")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h3",{attrs:{id:"matchkeys"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#matchkeys"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"index.js#L450"}},[t._v(".matchKeys")])]),t._v(" "),a("p",[t._v("Filter the keys of the given object with the given "),a("code",[t._v("glob")]),t._v(" pattern and "),a("code",[t._v("options")]),t._v(". Does not attempt to match nested keys. If you need this feature, use "),a("a",{attrs:{href:"https://github.com/jonschlinkert/glob-object",target:"_blank",rel:"noopener noreferrer"}},[t._v("glob-object"),a("OutboundLink")],1),t._v(" instead.")]),t._v(" "),a("p",[a("strong",[t._v("Params")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("object")]),t._v(" "),a("strong",[t._v("{Object}")]),t._v(": The object with keys to filter.")]),t._v(" "),a("li",[a("code",[t._v("patterns")]),t._v(" "),a("strong",[t._v("{String|Array}")]),t._v(": One or more glob patterns to use for matching.")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" "),a("strong",[t._v("{Object}")]),t._v(": See available "),a("a",{attrs:{href:"#options"}},[t._v("options")]),t._v(" for changing how matches are performed")]),t._v(" "),a("li",[a("code",[t._v("returns")]),t._v(" "),a("strong",[t._v("{Object}")]),t._v(": Returns an object with only keys that match the given patterns.")])]),t._v(" "),a("p",[a("strong",[t._v("Example")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nanomatch'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("matchKeys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" patterns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" aa"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ab"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ac"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("matchKeys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> { ab: 'b' }")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h3",{attrs:{id:"matcher"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#matcher"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"index.js#L479"}},[t._v(".matcher")])]),t._v(" "),a("p",[t._v("Returns a memoized matcher function from the given glob "),a("code",[t._v("pattern")]),t._v(" and "),a("code",[t._v("options")]),t._v(". The returned function takes a string to match as its only argument and returns true if the string is a match.")]),t._v(" "),a("p",[a("strong",[t._v("Params")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("pattern")]),t._v(" "),a("strong",[t._v("{String}")]),t._v(": Glob pattern")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" "),a("strong",[t._v("{Object}")]),t._v(": See available "),a("a",{attrs:{href:"#options"}},[t._v("options")]),t._v(" for changing how matches are performed.")]),t._v(" "),a("li",[a("code",[t._v("returns")]),t._v(" "),a("strong",[t._v("{Function}")]),t._v(": Returns a matcher function.")])]),t._v(" "),a("p",[a("strong",[t._v("Example")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nanomatch'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("matcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" isMatch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("matcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*.!(*a)'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isMatch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a.a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isMatch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a.b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("h3",{attrs:{id:"capture"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#capture"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"index.js#L560"}},[t._v(".capture")])]),t._v(" "),a("p",[t._v("Returns an array of matches captured by "),a("code",[t._v("pattern")]),t._v(" in "),a("code",[t._v("string, or")]),t._v("null` if the pattern did not match.")]),t._v(" "),a("p",[a("strong",[t._v("Params")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("pattern")]),t._v(" "),a("strong",[t._v("{String}")]),t._v(": Glob pattern to use for matching.")]),t._v(" "),a("li",[a("code",[t._v("string")]),t._v(" "),a("strong",[t._v("{String}")]),t._v(": String to match")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" "),a("strong",[t._v("{Object}")]),t._v(": See available "),a("a",{attrs:{href:"#options"}},[t._v("options")]),t._v(" for changing how matches are performed")]),t._v(" "),a("li",[a("code",[t._v("returns")]),t._v(" "),a("strong",[t._v("{Boolean}")]),t._v(": Returns an array of captures if the string matches the glob pattern, otherwise "),a("code",[t._v("null")]),t._v(".")])]),t._v(" "),a("p",[a("strong",[t._v("Example")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nanomatch'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("capture")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("capture")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test/*.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test/foo.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> ['foo']")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("capture")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test/*.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo/bar.css'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> null")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h3",{attrs:{id:"makere"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#makere"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"index.js#L595"}},[t._v(".makeRe")])]),t._v(" "),a("p",[t._v("Create a regular expression from the given glob "),a("code",[t._v("pattern")]),t._v(".")]),t._v(" "),a("p",[a("strong",[t._v("Params")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("pattern")]),t._v(" "),a("strong",[t._v("{String}")]),t._v(": A glob pattern to convert to regex.")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" "),a("strong",[t._v("{Object}")]),t._v(": See available "),a("a",{attrs:{href:"#options"}},[t._v("options")]),t._v(" for changing how matches are performed.")]),t._v(" "),a("li",[a("code",[t._v("returns")]),t._v(" "),a("strong",[t._v("{RegExp}")]),t._v(": Returns a regex created from the given pattern.")])]),t._v(" "),a("p",[a("strong",[t._v("Example")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nanomatch'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeRe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeRe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> /^(?:(\\.[\\\\\\/])?(?!\\.)(?=.)[^\\/]*?\\.js)$/")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h3",{attrs:{id:"create"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"index.js#L658"}},[t._v(".create")])]),t._v(" "),a("p",[t._v("Parses the given glob "),a("code",[t._v("pattern")]),t._v(" and returns an object with the compiled "),a("code",[t._v("output")]),t._v(" and optional source "),a("code",[t._v("map")]),t._v(".")]),t._v(" "),a("p",[a("strong",[t._v("Params")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("pattern")]),t._v(" "),a("strong",[t._v("{String}")]),t._v(": Glob pattern to parse and compile.")]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" "),a("strong",[t._v("{Object}")]),t._v(": Any "),a("a",{attrs:{href:"#options"}},[t._v("options")]),t._v(" to change how parsing and compiling is performed.")]),t._v(" "),a("li",[a("code",[t._v("returns")]),t._v(" "),a("strong",[t._v("{Object}")]),t._v(": Returns an object with the parsed AST, compiled string and optional source map.")])]),t._v(" "),a("p",[a("strong",[t._v("Example")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nanomatch'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc/*.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { options: { source: 'string', sourcemap: true },")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   state: {},")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   compilers:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    { ... },")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   output: '(\\\\.[\\\\\\\\\\\\/])?abc\\\\/(?!\\\\.)(?=.)[^\\\\/]*?\\\\.js',")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   ast:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    { type: 'root',")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      errors: [],")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      nodes:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//       [ ... ],")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      dot: false,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      input: 'abc/*.js' },")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   parsingErrors: [],")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   map:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    { version: 3,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      sources: [ 'string' ],")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      names: [],")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      mappings: 'AAAA,GAAG,EAAC,kBAAC,EAAC,EAAE',")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      sourcesContent: [ 'abc/*.js' ] },")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   position: { line: 1, column: 28 },")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   content: {},")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   files: {},")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   idx: 6 }")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br")])]),a("h3",{attrs:{id:"parse"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parse"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"index.js#L697"}},[t._v(".parse")])]),t._v(" "),a("p",[t._v("Parse the given "),a("code",[t._v("str")]),t._v(" with the given "),a("code",[t._v("options")]),t._v(".")]),t._v(" "),a("p",[a("strong",[t._v("Params")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("str")]),t._v(" "),a("strong",[t._v("{String}")])]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" "),a("strong",[t._v("{Object}")])]),t._v(" "),a("li",[a("code",[t._v("returns")]),t._v(" "),a("strong",[t._v("{Object}")]),t._v(": Returns an AST")])]),t._v(" "),a("p",[a("strong",[t._v("Example")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nanomatch'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ast "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a/{b,c}/d'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { type: 'root',")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   errors: [],")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   input: 'a/{b,c}/d',")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   nodes:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    [ { type: 'bos', val: '' },")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      { type: 'text', val: 'a/' },")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      { type: 'brace',")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        nodes:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         [ { type: 'brace.open', val: '{' },")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//           { type: 'text', val: 'b,c' },")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//           { type: 'brace.close', val: '}' } ] },")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      { type: 'text', val: '/d' },")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      { type: 'eos', val: '' } ] }")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br")])]),a("h3",{attrs:{id:"compile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compile"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"index.js#L745"}},[t._v(".compile")])]),t._v(" "),a("p",[t._v("Compile the given "),a("code",[t._v("ast")]),t._v(" or string with the given "),a("code",[t._v("options")]),t._v(".")]),t._v(" "),a("p",[a("strong",[t._v("Params")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("ast")]),t._v(" "),a("strong",[t._v("{Object|String}")])]),t._v(" "),a("li",[a("code",[t._v("options")]),t._v(" "),a("strong",[t._v("{Object}")])]),t._v(" "),a("li",[a("code",[t._v("returns")]),t._v(" "),a("strong",[t._v("{Object}")]),t._v(": Returns an object that has an "),a("code",[t._v("output")]),t._v(" property with the compiled string.")])]),t._v(" "),a("p",[a("strong",[t._v("Example")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nanomatch'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("compile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ast "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a/{b,c}/d'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("compile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { options: { source: 'string' },")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   state: {},")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   compilers:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    { eos: [Function],")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      noop: [Function],")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      bos: [Function],")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      brace: [Function],")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      'brace.open': [Function],")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      text: [Function],")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      'brace.close': [Function] },")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   output: [ 'a/(b|c)/d' ],")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   ast:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    { ... },")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   parsingErrors: [] }")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br")])]),a("h3",{attrs:{id:"clearcache"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clearcache"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"index.js#L768"}},[t._v(".clearCache")])]),t._v(" "),a("p",[t._v("Clear the regex cache.")]),t._v(" "),a("p",[a("strong",[t._v("Example")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearCache")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h2",{attrs:{id:"options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[t._v("#")]),t._v(" Options")]),t._v(" "),a("details",[a("summary",[a("strong",[t._v("basename")])]),t._v(" "),a("h3",{attrs:{id:"options-basename"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-basename"}},[t._v("#")]),t._v(" options.basename")]),t._v(" "),a("p",[t._v("Allow glob patterns without slashes to match a file path based on its basename. Same behavior as "),a("a",{attrs:{href:"https://github.com/isaacs/minimatch",target:"_blank",rel:"noopener noreferrer"}},[t._v("minimatch"),a("OutboundLink")],1),t._v(" option "),a("code",[t._v("matchBase")]),t._v(".")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("boolean")])]),t._v(" "),a("p",[t._v("Default: "),a("code",[t._v("false")])]),t._v(" "),a("p",[a("strong",[t._v("Example")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a/b.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a/c.md'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> []")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a/b.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a/c.md'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("matchBase"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> ['a/b.js']")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])]),t._v(" "),a("details",[a("summary",[a("strong",[t._v("bash")])]),t._v(" "),a("h3",{attrs:{id:"options-bash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-bash"}},[t._v("#")]),t._v(" options.bash")]),t._v(" "),a("p",[t._v("Enabled by default, this option enforces bash-like behavior with stars immediately following a bracket expression. Bash bracket expressions are similar to regex character classes, but unlike regex, a star following a bracket expression "),a("strong",[t._v("does not repeat the bracketed characters")]),t._v(". Instead, the star is treated the same as an other star.")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("boolean")])]),t._v(" "),a("p",[t._v("Default: "),a("code",[t._v("true")])]),t._v(" "),a("p",[a("strong",[t._v("Example")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" files "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ajz'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("files"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[a-c]*'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> ['abc', 'ajz']")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("files"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[a-c]*'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("bash"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])]),t._v(" "),a("details",[a("summary",[a("strong",[t._v("cache")])]),t._v(" "),a("h3",{attrs:{id:"options-cache"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-cache"}},[t._v("#")]),t._v(" options.cache")]),t._v(" "),a("p",[t._v("Disable regex and function memoization.")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("boolean")])]),t._v(" "),a("p",[t._v("Default: "),a("code",[t._v("undefined")])])]),t._v(" "),a("details",[a("summary",[a("strong",[t._v("dot")])]),t._v(" "),a("h3",{attrs:{id:"options-dot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-dot"}},[t._v("#")]),t._v(" options.dot")]),t._v(" "),a("p",[t._v("Match dotfiles. Same behavior as "),a("a",{attrs:{href:"https://github.com/isaacs/minimatch",target:"_blank",rel:"noopener noreferrer"}},[t._v("minimatch"),a("OutboundLink")],1),t._v(" option "),a("code",[t._v("dot")]),t._v(".")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("boolean")])]),t._v(" "),a("p",[t._v("Default: "),a("code",[t._v("false")])])]),t._v(" "),a("details",[a("summary",[a("strong",[t._v("failglob")])]),t._v(" "),a("h3",{attrs:{id:"options-failglob"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-failglob"}},[t._v("#")]),t._v(" options.failglob")]),t._v(" "),a("p",[t._v("Similar to the "),a("code",[t._v("--failglob")]),t._v(" behavior in Bash, throws an error when no matches are found.")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("boolean")])]),t._v(" "),a("p",[t._v("Default: "),a("code",[t._v("undefined")])])]),t._v(" "),a("details",[a("summary",[a("strong",[t._v("ignore")])]),t._v(" "),a("h3",{attrs:{id:"options-ignore"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-ignore"}},[t._v("#")]),t._v(" options.ignore")]),t._v(" "),a("p",[t._v("String or array of glob patterns to match files to ignore.")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("String|Array")])]),t._v(" "),a("p",[t._v("Default: "),a("code",[t._v("undefined")])])]),t._v(" "),a("details",[a("summary",[a("strong",[t._v("matchBase")])]),t._v(" "),a("h3",{attrs:{id:"options-matchbase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-matchbase"}},[t._v("#")]),t._v(" options.matchBase")]),t._v(" "),a("p",[t._v("Alias for "),a("a",{attrs:{href:"#options-basename"}},[t._v("options.basename")]),t._v(".")])]),t._v(" "),a("details",[a("summary",[a("strong",[t._v("nocase")])]),t._v(" "),a("h3",{attrs:{id:"options-nocase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-nocase"}},[t._v("#")]),t._v(" options.nocase")]),t._v(" "),a("p",[t._v("Use a case-insensitive regex for matching files. Same behavior as "),a("a",{attrs:{href:"https://github.com/isaacs/minimatch",target:"_blank",rel:"noopener noreferrer"}},[t._v("minimatch"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("boolean")])]),t._v(" "),a("p",[t._v("Default: "),a("code",[t._v("undefined")])])]),t._v(" "),a("details",[a("summary",[a("strong",[t._v("nodupes")])]),t._v(" "),a("h3",{attrs:{id:"options-nodupes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-nodupes"}},[t._v("#")]),t._v(" options.nodupes")]),t._v(" "),a("p",[t._v("Remove duplicate elements from the result array.")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("boolean")])]),t._v(" "),a("p",[t._v("Default: "),a("code",[t._v("true")]),t._v(" (enabled by default)")]),t._v(" "),a("p",[a("strong",[t._v("Example")])]),t._v(" "),a("p",[t._v("Example of using the "),a("code",[t._v("unescape")]),t._v(" and "),a("code",[t._v("nodupes")]),t._v(" options together:")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a/b/c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a/b/c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'**'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> ['abc']")]),t._v("\n\nnm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a/b/c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a/b/c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'**'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("nodupes"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> ['a/b/c', 'a/b/c']")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])]),t._v(" "),a("details",[a("summary",[a("strong",[t._v("nonegate")])]),t._v(" "),a("h3",{attrs:{id:"options-noglobstar"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-noglobstar"}},[t._v("#")]),t._v(" options.noglobstar")]),t._v(" "),a("p",[t._v("Disable matching with globstars ("),a("code",[t._v("**")]),t._v(").")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("boolean")])]),t._v(" "),a("p",[t._v("Default: "),a("code",[t._v("undefined")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a/b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a/b/c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a/b/c/d'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a/**'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> ['a/b', 'a/b/c', 'a/b/c/d']")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a/b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a/b/c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a/b/c/d'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a/**'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("noglobstar"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> ['a/b']")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])]),t._v(" "),a("details",[a("summary",[a("strong",[t._v("nonegate")])]),t._v(" "),a("h3",{attrs:{id:"options-nonegate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-nonegate"}},[t._v("#")]),t._v(" options.nonegate")]),t._v(" "),a("p",[t._v("Disallow negation ("),a("code",[t._v("!")]),t._v(") patterns, and treat leading "),a("code",[t._v("!")]),t._v(" as a literal character to match.")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("boolean")])]),t._v(" "),a("p",[t._v("Default: "),a("code",[t._v("undefined")])])]),t._v(" "),a("details",[a("summary",[a("strong",[t._v("nonull")])]),t._v(" "),a("h3",{attrs:{id:"options-nonull"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-nonull"}},[t._v("#")]),t._v(" options.nonull")]),t._v(" "),a("p",[t._v("Alias for "),a("a",{attrs:{href:"#options-nullglob"}},[t._v("options.nullglob")]),t._v(".")])]),t._v(" "),a("details",[a("summary",[a("strong",[t._v("nullglob")])]),t._v(" "),a("h3",{attrs:{id:"options-nullglob"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-nullglob"}},[t._v("#")]),t._v(" options.nullglob")]),t._v(" "),a("p",[t._v("If "),a("code",[t._v("true")]),t._v(", when no matches are found the actual (arrayified) glob pattern is returned instead of an empty array. Same behavior as "),a("a",{attrs:{href:"https://github.com/isaacs/minimatch",target:"_blank",rel:"noopener noreferrer"}},[t._v("minimatch"),a("OutboundLink")],1),t._v(" option "),a("code",[t._v("nonull")]),t._v(".")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("boolean")])]),t._v(" "),a("p",[t._v("Default: "),a("code",[t._v("undefined")])])]),t._v(" "),a("details",[a("summary",[a("strong",[a("a",{attrs:{name:"slash"}},[t._v("slash")])])]),t._v(" "),a("h3",{attrs:{id:"options-slash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-slash"}},[t._v("#")]),t._v(" options.slash")]),t._v(" "),a("p",[t._v("Customize the slash character(s) to use for matching.")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("string|function")])]),t._v(" "),a("p",[t._v("Default: "),a("code",[t._v("[/\\\\]")]),t._v(" (forward slash and backslash)")])]),t._v(" "),a("details",[a("summary",[a("strong",[a("a",{attrs:{name:"star"}},[t._v("star")])])]),t._v(" "),a("h3",{attrs:{id:"options-star"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-star"}},[t._v("#")]),t._v(" options.star")]),t._v(" "),a("p",[t._v("Customize the star character(s) to use for matching. It's not recommended that you modify this unless you have advanced knowledge of the compiler and matching rules.")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("string|function")])]),t._v(" "),a("p",[t._v("Default: "),a("code",[t._v("[^/\\\\]*?")])])]),t._v(" "),a("details",[a("summary",[a("strong",[a("a",{attrs:{name:"snapdragon"}},[t._v("snapdragon")])])]),t._v(" "),a("h3",{attrs:{id:"options-snapdragon"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-snapdragon"}},[t._v("#")]),t._v(" options.snapdragon")]),t._v(" "),a("p",[t._v("Pass your own instance of "),a("a",{attrs:{href:"https://github.com/jonschlinkert/snapdragon",target:"_blank",rel:"noopener noreferrer"}},[t._v("snapdragon"),a("OutboundLink")],1),t._v(" to customize parsers or compilers.")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("object")])]),t._v(" "),a("p",[t._v("Default: "),a("code",[t._v("undefined")])])]),t._v(" "),a("details",[a("summary",[a("strong",[t._v("snapdragon")])]),t._v(" "),a("h3",{attrs:{id:"options-sourcemap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-sourcemap"}},[t._v("#")]),t._v(" options.sourcemap")]),t._v(" "),a("p",[t._v("Generate a source map by enabling the "),a("code",[t._v("sourcemap")]),t._v(" option with the "),a("code",[t._v(".parse")]),t._v(", "),a("code",[t._v(".compile")]),t._v(", or "),a("code",[t._v(".create")]),t._v(" methods.")]),t._v(" "),a("p",[a("strong",[t._v("Examples")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nanomatch'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" res "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc/*.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("sourcemap"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { version: 3,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   sources: [ 'string' ],")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   names: [],")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   mappings: 'AAAA,GAAG,EAAC,iBAAC,EAAC,EAAE',")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   sourcesContent: [ 'abc/*.js' ] }")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ast "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc/**/*.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" res "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("compile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("sourcemap"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { version: 3,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   sources: [ 'string' ],")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   names: [],")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   mappings: 'AAAA,GAAG,EAAC,2BAAE,EAAC,iBAAC,EAAC,EAAE',")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   sourcesContent: [ 'abc/**/*.js' ] }")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br")])])]),t._v(" "),a("details",[a("summary",[a("strong",[t._v("unescape")])]),t._v(" "),a("h3",{attrs:{id:"options-unescape"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-unescape"}},[t._v("#")]),t._v(" options.unescape")]),t._v(" "),a("p",[t._v("Remove backslashes from returned matches.")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("boolean")])]),t._v(" "),a("p",[t._v("Default: "),a("code",[t._v("undefined")])]),t._v(" "),a("p",[a("strong",[t._v("Example")])]),t._v(" "),a("p",[t._v("In this example we want to match a literal "),a("code",[t._v("*")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a\\\\*c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a\\\\*c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> ['a\\\\*c']")]),t._v("\n\nnm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a\\\\*c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a\\\\*c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("unescape"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> ['a*c']")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])]),t._v(" "),a("details",[a("summary",[a("strong",[t._v("unixify")])]),t._v(" "),a("h3",{attrs:{id:"options-unixify"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-unixify"}},[t._v("#")]),t._v(" options.unixify")]),t._v(" "),a("p",[t._v("Convert path separators on returned files to posix/unix-style forward slashes.")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("boolean")])]),t._v(" "),a("p",[t._v("Default: "),a("code",[t._v("true")])]),t._v(" "),a("p",[a("strong",[t._v("Example")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a\\\\b\\\\c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a/**'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> ['a/b/c']")]),t._v("\n\nnm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a\\\\b\\\\c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("unixify"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> ['a\\\\b\\\\c']")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])]),t._v(" "),a("h2",{attrs:{id:"features"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#features"}},[t._v("#")]),t._v(" Features")]),t._v(" "),a("p",[t._v('Nanomatch has full support for standard Bash glob features, including the following "metacharacters": '),a("code",[t._v("*")]),t._v(", "),a("code",[t._v("**")]),t._v(", "),a("code",[t._v("?")]),t._v(" and "),a("code",[t._v("[...]")]),t._v(".")]),t._v(" "),a("p",[t._v("Here are some examples of how they work:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[t._v("Pattern")])]),t._v(" "),a("th",[a("strong",[t._v("Description")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("*")])]),t._v(" "),a("td",[t._v("Matches any string except for "),a("code",[t._v("/")]),t._v(", leading "),a("code",[t._v(".")]),t._v(", or "),a("code",[t._v("/.")]),t._v(" inside a path")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("**")])]),t._v(" "),a("td",[t._v("Matches any string including "),a("code",[t._v("/")]),t._v(", but not a leading "),a("code",[t._v(".")]),t._v(" or "),a("code",[t._v("/.")]),t._v(" inside a path. More than two stars (e.g. "),a("code",[t._v("***")]),t._v(" is treated the same as one star, and "),a("code",[t._v("**")]),t._v(" loses its special meaning")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("foo*")])]),t._v(" "),a("td",[t._v("Matches any string beginning with "),a("code",[t._v("foo")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("*bar*")])]),t._v(" "),a("td",[t._v("Matches any string containing "),a("code",[t._v("bar")]),t._v(" (beginning, middle or end)")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("*.min.js")])]),t._v(" "),a("td",[t._v("Matches any string ending with "),a("code",[t._v(".min.js")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("[abc]*.js")])]),t._v(" "),a("td",[t._v("Matches any string beginning with "),a("code",[t._v("a")]),t._v(", "),a("code",[t._v("b")]),t._v(", or "),a("code",[t._v("c")]),t._v(" and ending with "),a("code",[t._v(".js")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("abc?")])]),t._v(" "),a("td",[t._v("Matches "),a("code",[t._v("abcd")]),t._v(" or "),a("code",[t._v("abcz")]),t._v(" but not "),a("code",[t._v("abcde")])])])])]),t._v(" "),a("p",[t._v("The exceptions noted for "),a("code",[t._v("*")]),t._v(" apply to all patterns that contain a "),a("code",[t._v("*")]),t._v(".")]),t._v(" "),a("p",[a("strong",[t._v("Not supported")])]),t._v(" "),a("p",[t._v("The following extended-globbing features are not supported:")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/jonschlinkert/braces",target:"_blank",rel:"noopener noreferrer"}},[t._v("brace expansion"),a("OutboundLink")],1),t._v(" (e.g. "),a("code",[t._v("{a,b,c}")]),t._v(")")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/jonschlinkert/extglob",target:"_blank",rel:"noopener noreferrer"}},[t._v("extglobs"),a("OutboundLink")],1),t._v(" (e.g. "),a("code",[t._v("@(a|!(c|d))")]),t._v(")")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/jonschlinkert/expand-brackets",target:"_blank",rel:"noopener noreferrer"}},[t._v("POSIX brackets"),a("OutboundLink")],1),t._v(" (e.g. "),a("code",[t._v("[[:alpha:][:digit:]]")]),t._v(")")])]),t._v(" "),a("p",[t._v("If you need any of these features consider using "),a("a",{attrs:{href:"https://github.com/micromatch/micromatch",target:"_blank",rel:"noopener noreferrer"}},[t._v("micromatch"),a("OutboundLink")],1),t._v(" instead.")]),t._v(" "),a("h2",{attrs:{id:"bash-expansion-libs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bash-expansion-libs"}},[t._v("#")]),t._v(" Bash expansion libs")]),t._v(" "),a("p",[t._v("Nanomatch is part of a suite of libraries aimed at bringing the power and expressiveness of "),a("a",{attrs:{href:"https://www.gnu.org/software/bash/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Bash's"),a("OutboundLink")],1),t._v(" matching and expansion capabilities to JavaScript, "),a("em",[t._v("and - as you can see by the "),a("a",{attrs:{href:"#benchmarks"}},[t._v("benchmarks")]),t._v(" - without sacrificing speed")]),t._v(".")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[t._v("Related library")])]),t._v(" "),a("th",[a("strong",[t._v("Matching Type")])]),t._v(" "),a("th",[a("strong",[t._v("Example")])]),t._v(" "),a("th",[a("strong",[t._v("Description")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("nanomatch")]),t._v(" (you are here)")]),t._v(" "),a("td",[t._v("Wildcards")]),t._v(" "),a("td",[a("code",[t._v("*")])]),t._v(" "),a("td",[a("a",{attrs:{href:"https://www.gnu.org/software/bash/manual/html_node/Filename-Expansion.html#Filename-Expansion",target:"_blank",rel:"noopener noreferrer"}},[t._v("Filename expansion"),a("OutboundLink")],1),t._v(", also referred to as globbing and pathname expansion, allows the use of "),a("a",{attrs:{href:"#features"}},[t._v("wildcards")]),t._v(" for matching.")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/jonschlinkert/expand-tilde",target:"_blank",rel:"noopener noreferrer"}},[t._v("expand-tilde"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("Tildes")]),t._v(" "),a("td",[a("code",[t._v("~")])]),t._v(" "),a("td",[a("a",{attrs:{href:"https://www.gnu.org/software/bash/manual/html_node/Tilde-Expansion.html#Tilde-Expansion",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tilde expansion"),a("OutboundLink")],1),t._v(" converts the leading tilde in a file path to the user home directory.")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/jonschlinkert/braces",target:"_blank",rel:"noopener noreferrer"}},[t._v("braces"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("Braces")]),t._v(" "),a("td",[a("code",[t._v("{a,b,c}")])]),t._v(" "),a("td",[a("a",{attrs:{href:"https://www.gnu.org/software/bash/manual/html_node/Brace-Expansion.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Brace expansion"),a("OutboundLink")],1)])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/jonschlinkert/expand-brackets",target:"_blank",rel:"noopener noreferrer"}},[t._v("expand-brackets"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("Brackets")]),t._v(" "),a("td",[a("code",[t._v("[[:alpha:]]")])]),t._v(" "),a("td",[a("a",{attrs:{href:"https://www.gnu.org/software/grep/manual/html_node/Character-Classes-and-Bracket-Expressions.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("POSIX character classes"),a("OutboundLink")],1),t._v(" (also referred to as POSIX brackets, or POSIX character classes)")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/jonschlinkert/extglob",target:"_blank",rel:"noopener noreferrer"}},[t._v("extglob"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("Parens")]),t._v(" "),a("td",[a("code",[t._v("!(a\\ | b)")])]),t._v(" "),a("td",[a("a",{attrs:{href:"https://www.gnu.org/software/bash/manual/html_node/Pattern-Matching.html#Pattern-Matching",target:"_blank",rel:"noopener noreferrer"}},[t._v("Extglobs"),a("OutboundLink")],1)])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/micromatch/micromatch",target:"_blank",rel:"noopener noreferrer"}},[t._v("micromatch"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("All")]),t._v(" "),a("td",[t._v("all")]),t._v(" "),a("td",[t._v("Micromatch is built on top of the other libraries.")])])])]),t._v(" "),a("p",[t._v("There are many resources available on the web if you want to dive deeper into how these features work in Bash.")]),t._v(" "),a("h2",{attrs:{id:"benchmarks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#benchmarks"}},[t._v("#")]),t._v(" Benchmarks")]),t._v(" "),a("h3",{attrs:{id:"running-benchmarks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#running-benchmarks"}},[t._v("#")]),t._v(" Running benchmarks")]),t._v(" "),a("p",[t._v("Install dev dependencies:")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i -d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" node benchmark\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"nanomatch-vs-minimatch-vs-multimatch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nanomatch-vs-minimatch-vs-multimatch"}},[t._v("#")]),t._v(" Nanomatch vs. Minimatch vs. Multimatch")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# globstar-basic (182 bytes)")]),t._v("\n  minimatch x "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("69,512")]),t._v(" ops/sec ±1.92% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("88")]),t._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  multimatch x "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("63,376")]),t._v(" ops/sec ±1.41% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("89")]),t._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  nanomatch x "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("432,451")]),t._v(" ops/sec ±0.92% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("88")]),t._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  fastest is nanomatch "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("by "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("651")]),t._v("% avg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# large-list-globstar (485686 bytes)")]),t._v("\n  minimatch x "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("34.02")]),t._v(" ops/sec ±1.42% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("59")]),t._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  multimatch x "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("33.58")]),t._v(" ops/sec ±1.97% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("58")]),t._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  nanomatch x "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("483")]),t._v(" ops/sec ±1.06% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("86")]),t._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  fastest is nanomatch "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("by "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1429")]),t._v("% avg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# long-list-globstar (194085 bytes)")]),t._v("\n  minimatch x "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("383")]),t._v(" ops/sec ±0.74% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  multimatch x "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("378")]),t._v(" ops/sec ±0.59% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("89")]),t._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  nanomatch x "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("990")]),t._v(" ops/sec ±1.14% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("85")]),t._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  fastest is nanomatch "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("by "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("260")]),t._v("% avg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# negation-basic (132 bytes)")]),t._v("\n  minimatch x "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("242,145")]),t._v(" ops/sec ±1.17% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("89")]),t._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  multimatch x "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("76,403")]),t._v(" ops/sec ±0.78% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("92")]),t._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  nanomatch x "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("537,253")]),t._v(" ops/sec ±1.44% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("86")]),t._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  fastest is nanomatch "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("by "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("337")]),t._v("% avg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# not-glob-basic (93 bytes)")]),t._v("\n  minimatch x "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("252,402")]),t._v(" ops/sec ±1.33% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("89")]),t._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  multimatch x "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("209,954")]),t._v(" ops/sec ±1.30% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  nanomatch x "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1,716")]),t._v(",468 ops/sec ±1.13% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("86")]),t._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  fastest is nanomatch "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("by "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("742")]),t._v("% avg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# star-basic (93 bytes)")]),t._v("\n  minimatch x "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("182,780")]),t._v(" ops/sec ±1.41% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("91")]),t._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  multimatch x "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("153,210")]),t._v(" ops/sec ±0.72% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("89")]),t._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  nanomatch x "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("599,621")]),t._v(" ops/sec ±1.22% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  fastest is nanomatch "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("by "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("357")]),t._v("% avg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br")])]),a("h2",{attrs:{id:"about"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#about"}},[t._v("#")]),t._v(" About")]),t._v(" "),a("details",[a("summary",[a("strong",[t._v("Contributing")])]),t._v(" "),a("p",[t._v("Pull requests and stars are always welcome. For bugs and feature requests, "),a("a",{attrs:{href:"../../issues/new"}},[t._v("please create an issue")]),t._v(".")]),t._v(" "),a("p",[t._v("Please read the "),a("RouterLink",{attrs:{to:"/Study/工程化/gulp 学习代码/gulp-project/node_modules/nanomatch/.github/contributing.html"}},[t._v("contributing guide")]),t._v(" for advice on opening issues, pull requests, and coding standards.")],1)]),t._v(" "),a("details",[a("summary",[a("strong",[t._v("Running Tests")])]),t._v(" "),a("p",[t._v("Running and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:")]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])]),t._v(" "),a("details",[a("summary",[a("strong",[t._v("Building docs")])]),t._v(" "),a("p",[a("em",[t._v("(This project's readme.md is generated by "),a("a",{attrs:{href:"https://github.com/verbose/verb-generate-readme",target:"_blank",rel:"noopener noreferrer"}},[t._v("verb"),a("OutboundLink")],1),t._v(", please don't edit the readme directly. Any changes to the readme must be made in the "),a("RouterLink",{attrs:{to:"/Study/工程化/gulp 学习代码/gulp-project/node_modules/nanomatch/.verb.html"}},[t._v(".verb.md")]),t._v(" readme template.)")],1)]),t._v(" "),a("p",[t._v("To generate the readme, run the following command:")]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g verbose/verb"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#dev verb-generate-readme && verb")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])]),t._v(" "),a("h3",{attrs:{id:"related-projects"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#related-projects"}},[t._v("#")]),t._v(" Related projects")]),t._v(" "),a("p",[t._v("You might also be interested in these projects:")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.npmjs.com/package/extglob",target:"_blank",rel:"noopener noreferrer"}},[t._v("extglob"),a("OutboundLink")],1),t._v(": Extended glob support for JavaScript. Adds (almost) the expressive power of regular expressions to glob… "),a("a",{attrs:{href:"https://github.com/micromatch/extglob",target:"_blank",rel:"noopener noreferrer"}},[t._v("more"),a("OutboundLink")],1),t._v(" | "),a("a",{attrs:{href:"https://github.com/micromatch/extglob",title:"Extended glob support for JavaScript. Adds (almost) the expressive power of regular expressions to glob patterns.",target:"_blank",rel:"noopener noreferrer"}},[t._v("homepage"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.npmjs.com/package/is-extglob",target:"_blank",rel:"noopener noreferrer"}},[t._v("is-extglob"),a("OutboundLink")],1),t._v(": Returns true if a string has an extglob. | "),a("a",{attrs:{href:"https://github.com/jonschlinkert/is-extglob",title:"Returns true if a string has an extglob.",target:"_blank",rel:"noopener noreferrer"}},[t._v("homepage"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.npmjs.com/package/is-glob",target:"_blank",rel:"noopener noreferrer"}},[t._v("is-glob"),a("OutboundLink")],1),t._v(": Returns "),a("code",[t._v("true")]),t._v(" if the given string looks like a glob pattern or an extglob pattern… "),a("a",{attrs:{href:"https://github.com/jonschlinkert/is-glob",target:"_blank",rel:"noopener noreferrer"}},[t._v("more"),a("OutboundLink")],1),t._v(" | "),a("a",{attrs:{href:"https://github.com/jonschlinkert/is-glob",title:"Returns `true` if the given string looks like a glob pattern or an extglob pattern. This makes it easy to create code that only uses external modules like node-glob when necessary, resulting in much faster code execution and initialization time, and a bet",target:"_blank",rel:"noopener noreferrer"}},[t._v("homepage"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.npmjs.com/package/micromatch",target:"_blank",rel:"noopener noreferrer"}},[t._v("micromatch"),a("OutboundLink")],1),t._v(": Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch. | "),a("a",{attrs:{href:"https://github.com/micromatch/micromatch",title:"Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch.",target:"_blank",rel:"noopener noreferrer"}},[t._v("homepage"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"contributors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#contributors"}},[t._v("#")]),t._v(" Contributors")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[t._v("Commits")])]),t._v(" "),a("th",[a("strong",[t._v("Contributor")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("164")]),t._v(" "),a("td",[a("a",{attrs:{href:"https://github.com/jonschlinkert",target:"_blank",rel:"noopener noreferrer"}},[t._v("jonschlinkert"),a("OutboundLink")],1)])]),t._v(" "),a("tr",[a("td",[t._v("1")]),t._v(" "),a("td",[a("a",{attrs:{href:"https://github.com/devongovett",target:"_blank",rel:"noopener noreferrer"}},[t._v("devongovett"),a("OutboundLink")],1)])])])]),t._v(" "),a("h3",{attrs:{id:"author"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#author"}},[t._v("#")]),t._v(" Author")]),t._v(" "),a("p",[a("strong",[t._v("Jon Schlinkert")])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://linkedin.com/in/jonschlinkert",target:"_blank",rel:"noopener noreferrer"}},[t._v("linkedin/in/jonschlinkert"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/jonschlinkert",target:"_blank",rel:"noopener noreferrer"}},[t._v("github/jonschlinkert"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://twitter.com/jonschlinkert",target:"_blank",rel:"noopener noreferrer"}},[t._v("twitter/jonschlinkert"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"license"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#license"}},[t._v("#")]),t._v(" License")]),t._v(" "),a("p",[t._v("Copyright © 2018, "),a("a",{attrs:{href:"https://github.com/jonschlinkert",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jon Schlinkert"),a("OutboundLink")],1),t._v(".\nReleased under the "),a("a",{attrs:{href:"LICENSE"}},[t._v("MIT License")]),t._v(".")]),t._v(" "),a("hr"),t._v(" "),a("p",[a("em",[t._v("This file was generated by "),a("a",{attrs:{href:"https://github.com/verbose/verb-generate-readme",target:"_blank",rel:"noopener noreferrer"}},[t._v("verb-generate-readme"),a("OutboundLink")],1),t._v(", v0.6.0, on February 18, 2018.")])])])}),[],!1,null,null,null);s.default=e.exports}}]);