(window.webpackJsonp=window.webpackJsonp||[]).push([[335],{697:function(e,s,n){"use strict";n.r(s);var a=n(25),t=Object(a.a)({},(function(){var e=this,s=e.$createElement,n=e._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h2",{attrs:{id:"persistent-references"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#persistent-references"}},[e._v("#")]),e._v(" Persistent references")]),e._v(" "),n("p",[e._v("An object reference that is independent of any "),n("code",[e._v("HandleScope")]),e._v(" is a "),n("em",[e._v("persistent")]),e._v(" reference. Where a "),n("code",[e._v("Local")]),e._v(" handle only lives as long as the "),n("code",[e._v("HandleScope")]),e._v(" in which it was allocated, a "),n("code",[e._v("Persistent")]),e._v(" handle remains valid until it is explicitly disposed.")]),e._v(" "),n("p",[e._v("Due to the evolution of the V8 API, it is necessary for NAN to provide a wrapper implementation of the "),n("code",[e._v("Persistent")]),e._v(" classes to supply compatibility across the V8 versions supported.")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#api_nan_persistent_base"}},[n("b",[n("code",[e._v("Nan::PersistentBase & v8::PersistentBase")])])])]),e._v(" "),n("li",[n("a",{attrs:{href:"#api_nan_non_copyable_persistent_traits"}},[n("b",[n("code",[e._v("Nan::NonCopyablePersistentTraits & v8::NonCopyablePersistentTraits")])])])]),e._v(" "),n("li",[n("a",{attrs:{href:"#api_nan_copyable_persistent_traits"}},[n("b",[n("code",[e._v("Nan::CopyablePersistentTraits & v8::CopyablePersistentTraits")])])])]),e._v(" "),n("li",[n("a",{attrs:{href:"#api_nan_persistent"}},[n("b",[n("code",[e._v("Nan::Persistent")])])])]),e._v(" "),n("li",[n("a",{attrs:{href:"#api_nan_global"}},[n("b",[n("code",[e._v("Nan::Global")])])])]),e._v(" "),n("li",[n("a",{attrs:{href:"#api_nan_weak_callback_info"}},[n("b",[n("code",[e._v("Nan::WeakCallbackInfo")])])])]),e._v(" "),n("li",[n("a",{attrs:{href:"#api_nan_weak_callback_type"}},[n("b",[n("code",[e._v("Nan::WeakCallbackType")])])])])]),e._v(" "),n("p",[e._v("Also see the V8 Embedders Guide section on "),n("a",{attrs:{href:"https://developers.google.com/v8/embed#handles",target:"_blank",rel:"noopener noreferrer"}},[e._v("Handles and Garbage Collection"),n("OutboundLink")],1),e._v(".")]),e._v(" "),n("p",[n("a",{attrs:{name:"api_nan_persistent_base"}})]),e._v(" "),n("h3",{attrs:{id:"nan-persistentbase-v8-persistentbase"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nan-persistentbase-v8-persistentbase"}},[e._v("#")]),e._v(" Nan::PersistentBase & v8::PersistentBase")]),e._v(" "),n("p",[e._v("A persistent handle contains a reference to a storage cell in V8 which holds an object value and which is updated by the garbage collector whenever the object is moved. A new storage cell can be created using the constructor or "),n("code",[e._v("Nan::PersistentBase::Reset()")]),e._v(". Existing handles can be disposed using an argument-less "),n("code",[e._v("Nan::PersistentBase::Reset()")]),e._v(".")]),e._v(" "),n("p",[e._v("Definition:")]),e._v(" "),n("p",[n("em",[e._v("(note: this is implemented as "),n("code",[e._v("Nan::PersistentBase")]),e._v(" for older versions of V8 and the native "),n("code",[e._v("v8::PersistentBase")]),e._v(" is used for newer versions of V8)")])]),e._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("template<typename T> class PersistentBase {\n public:\n  /**\n   * If non-empty, destroy the underlying storage cell\n   */\n  void Reset();\n\n  /**\n   * If non-empty, destroy the underlying storage cell and create a new one with\n   * the contents of another if it is also non-empty\n   */\n  template<typename S> void Reset(const v8::Local<S> &other);\n\n  /**\n   * If non-empty, destroy the underlying storage cell and create a new one with\n   * the contents of another if it is also non-empty\n   */\n  template<typename S> void Reset(const PersistentBase<S> &other);\n\n  /** Returns true if the handle is empty. */\n  bool IsEmpty() const;\n\n  /**\n   * If non-empty, destroy the underlying storage cell\n   * IsEmpty() will return true after this call.\n   */\n  void Empty();\n\n  template<typename S> bool operator==(const PersistentBase<S> &that);\n\n  template<typename S> bool operator==(const v8::Local<S> &that);\n\n  template<typename S> bool operator!=(const PersistentBase<S> &that);\n\n  template<typename S> bool operator!=(const v8::Local<S> &that);\n\n   /**\n   *  Install a finalization callback on this object.\n   *  NOTE: There is no guarantee as to *when* or even *if* the callback is\n   *  invoked. The invocation is performed solely on a best effort basis.\n   *  As always, GC-based finalization should *not* be relied upon for any\n   *  critical form of resource management! At the moment you can either\n   *  specify a parameter for the callback or the location of two internal\n   *  fields in the dying object.\n   */\n  template<typename P>\n  void SetWeak(P *parameter,\n               typename WeakCallbackInfo<P>::Callback callback,\n               WeakCallbackType type);\n\n  void ClearWeak();\n\n  /**\n   * Marks the reference to this object independent. Garbage collector is free\n   * to ignore any object groups containing this object. Weak callback for an\n   * independent handle should not assume that it will be preceded by a global\n   * GC prologue callback or followed by a global GC epilogue callback.\n   */\n  void MarkIndependent() const;\n\n  bool IsIndependent() const;\n\n  /** Checks if the handle holds the only reference to an object. */\n  bool IsNearDeath() const;\n\n  /** Returns true if the handle's reference is weak.  */\n  bool IsWeak() const\n};\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br"),n("span",{staticClass:"line-number"},[e._v("15")]),n("br"),n("span",{staticClass:"line-number"},[e._v("16")]),n("br"),n("span",{staticClass:"line-number"},[e._v("17")]),n("br"),n("span",{staticClass:"line-number"},[e._v("18")]),n("br"),n("span",{staticClass:"line-number"},[e._v("19")]),n("br"),n("span",{staticClass:"line-number"},[e._v("20")]),n("br"),n("span",{staticClass:"line-number"},[e._v("21")]),n("br"),n("span",{staticClass:"line-number"},[e._v("22")]),n("br"),n("span",{staticClass:"line-number"},[e._v("23")]),n("br"),n("span",{staticClass:"line-number"},[e._v("24")]),n("br"),n("span",{staticClass:"line-number"},[e._v("25")]),n("br"),n("span",{staticClass:"line-number"},[e._v("26")]),n("br"),n("span",{staticClass:"line-number"},[e._v("27")]),n("br"),n("span",{staticClass:"line-number"},[e._v("28")]),n("br"),n("span",{staticClass:"line-number"},[e._v("29")]),n("br"),n("span",{staticClass:"line-number"},[e._v("30")]),n("br"),n("span",{staticClass:"line-number"},[e._v("31")]),n("br"),n("span",{staticClass:"line-number"},[e._v("32")]),n("br"),n("span",{staticClass:"line-number"},[e._v("33")]),n("br"),n("span",{staticClass:"line-number"},[e._v("34")]),n("br"),n("span",{staticClass:"line-number"},[e._v("35")]),n("br"),n("span",{staticClass:"line-number"},[e._v("36")]),n("br"),n("span",{staticClass:"line-number"},[e._v("37")]),n("br"),n("span",{staticClass:"line-number"},[e._v("38")]),n("br"),n("span",{staticClass:"line-number"},[e._v("39")]),n("br"),n("span",{staticClass:"line-number"},[e._v("40")]),n("br"),n("span",{staticClass:"line-number"},[e._v("41")]),n("br"),n("span",{staticClass:"line-number"},[e._v("42")]),n("br"),n("span",{staticClass:"line-number"},[e._v("43")]),n("br"),n("span",{staticClass:"line-number"},[e._v("44")]),n("br"),n("span",{staticClass:"line-number"},[e._v("45")]),n("br"),n("span",{staticClass:"line-number"},[e._v("46")]),n("br"),n("span",{staticClass:"line-number"},[e._v("47")]),n("br"),n("span",{staticClass:"line-number"},[e._v("48")]),n("br"),n("span",{staticClass:"line-number"},[e._v("49")]),n("br"),n("span",{staticClass:"line-number"},[e._v("50")]),n("br"),n("span",{staticClass:"line-number"},[e._v("51")]),n("br"),n("span",{staticClass:"line-number"},[e._v("52")]),n("br"),n("span",{staticClass:"line-number"},[e._v("53")]),n("br"),n("span",{staticClass:"line-number"},[e._v("54")]),n("br"),n("span",{staticClass:"line-number"},[e._v("55")]),n("br"),n("span",{staticClass:"line-number"},[e._v("56")]),n("br"),n("span",{staticClass:"line-number"},[e._v("57")]),n("br"),n("span",{staticClass:"line-number"},[e._v("58")]),n("br"),n("span",{staticClass:"line-number"},[e._v("59")]),n("br"),n("span",{staticClass:"line-number"},[e._v("60")]),n("br"),n("span",{staticClass:"line-number"},[e._v("61")]),n("br"),n("span",{staticClass:"line-number"},[e._v("62")]),n("br"),n("span",{staticClass:"line-number"},[e._v("63")]),n("br"),n("span",{staticClass:"line-number"},[e._v("64")]),n("br"),n("span",{staticClass:"line-number"},[e._v("65")]),n("br"),n("span",{staticClass:"line-number"},[e._v("66")]),n("br"),n("span",{staticClass:"line-number"},[e._v("67")]),n("br"),n("span",{staticClass:"line-number"},[e._v("68")]),n("br")])]),n("p",[e._v("See the V8 documentation for "),n("a",{attrs:{href:"https://v8docs.nodesource.com/node-8.16/d4/dca/classv8_1_1_persistent_base.html",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("PersistentBase")]),n("OutboundLink")],1),e._v(" for further information.")]),e._v(" "),n("p",[n("strong",[e._v("Tip:")]),e._v(" To get a "),n("code",[e._v("v8::Local")]),e._v(" reference to the original object back from a "),n("code",[e._v("PersistentBase")]),e._v(" or "),n("code",[e._v("Persistent")]),e._v(" object:")]),e._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("v8::Local<v8::Object> object = Nan::New(persistent);\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[n("a",{attrs:{name:"api_nan_non_copyable_persistent_traits"}})]),e._v(" "),n("h3",{attrs:{id:"nan-noncopyablepersistenttraits-v8-noncopyablepersistenttraits"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nan-noncopyablepersistenttraits-v8-noncopyablepersistenttraits"}},[e._v("#")]),e._v(" Nan::NonCopyablePersistentTraits & v8::NonCopyablePersistentTraits")]),e._v(" "),n("p",[e._v("Default traits for "),n("code",[e._v("Nan::Persistent")]),e._v(". This class does not allow use of the a copy constructor or assignment operator. At present "),n("code",[e._v("kResetInDestructor")]),e._v(" is not set, but that will change in a future version.")]),e._v(" "),n("p",[e._v("Definition:")]),e._v(" "),n("p",[n("em",[e._v("(note: this is implemented as "),n("code",[e._v("Nan::NonCopyablePersistentTraits")]),e._v(" for older versions of V8 and the native "),n("code",[e._v("v8::NonCopyablePersistentTraits")]),e._v(" is used for newer versions of V8)")])]),e._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("template<typename T> class NonCopyablePersistentTraits {\n public:\n  typedef Persistent<T, NonCopyablePersistentTraits<T> > NonCopyablePersistent;\n\n  static const bool kResetInDestructor = false;\n\n  template<typename S, typename M>\n  static void Copy(const Persistent<S, M> &source,\n                   NonCopyablePersistent *dest);\n\n  template<typename O> static void Uncompilable();\n};\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br")])]),n("p",[e._v("See the V8 documentation for "),n("a",{attrs:{href:"https://v8docs.nodesource.com/node-8.16/de/d73/classv8_1_1_non_copyable_persistent_traits.html",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("NonCopyablePersistentTraits")]),n("OutboundLink")],1),e._v(" for further information.")]),e._v(" "),n("p",[n("a",{attrs:{name:"api_nan_copyable_persistent_traits"}})]),e._v(" "),n("h3",{attrs:{id:"nan-copyablepersistenttraits-v8-copyablepersistenttraits"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nan-copyablepersistenttraits-v8-copyablepersistenttraits"}},[e._v("#")]),e._v(" Nan::CopyablePersistentTraits & v8::CopyablePersistentTraits")]),e._v(" "),n("p",[e._v("A helper class of traits to allow copying and assignment of "),n("code",[e._v("Persistent")]),e._v(". This will clone the contents of storage cell, but not any of the flags, etc..")]),e._v(" "),n("p",[e._v("Definition:")]),e._v(" "),n("p",[n("em",[e._v("(note: this is implemented as "),n("code",[e._v("Nan::CopyablePersistentTraits")]),e._v(" for older versions of V8 and the native "),n("code",[e._v("v8::NonCopyablePersistentTraits")]),e._v(" is used for newer versions of V8)")])]),e._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("template<typename T>\nclass CopyablePersistentTraits {\n public:\n  typedef Persistent<T, CopyablePersistentTraits<T> > CopyablePersistent;\n\n  static const bool kResetInDestructor = true;\n\n  template<typename S, typename M>\n  static void Copy(const Persistent<S, M> &source,\n                   CopyablePersistent *dest);\n};\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br")])]),n("p",[e._v("See the V8 documentation for "),n("a",{attrs:{href:"https://v8docs.nodesource.com/node-8.16/da/d5c/structv8_1_1_copyable_persistent_traits.html",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("CopyablePersistentTraits")]),n("OutboundLink")],1),e._v(" for further information.")]),e._v(" "),n("p",[n("a",{attrs:{name:"api_nan_persistent"}})]),e._v(" "),n("h3",{attrs:{id:"nan-persistent"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nan-persistent"}},[e._v("#")]),e._v(" Nan::Persistent")]),e._v(" "),n("p",[e._v("A type of "),n("code",[e._v("PersistentBase")]),e._v(" which allows copy and assignment. Copy, assignment and destructor behavior is controlled by the traits class "),n("code",[e._v("M")]),e._v(".")]),e._v(" "),n("p",[e._v("Definition:")]),e._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("template<typename T, typename M = NonCopyablePersistentTraits<T> >\nclass Persistent;\n\ntemplate<typename T, typename M> class Persistent : public PersistentBase<T> {\n public:\n /**\n  * A Persistent with no storage cell.\n  */\n  Persistent();\n\n  /**\n   * Construct a Persistent from a v8::Local. When the v8::Local is non-empty, a\n   * new storage cell is created pointing to the same object, and no flags are\n   * set.\n   */\n  template<typename S> Persistent(v8::Local<S> that);\n\n  /**\n   * Construct a Persistent from a Persistent. When the Persistent is non-empty,\n   * a new storage cell is created pointing to the same object, and no flags are\n   * set.\n   */\n  Persistent(const Persistent &that);\n\n  /**\n   * The copy constructors and assignment operator create a Persistent exactly\n   * as the Persistent constructor, but the Copy function from the traits class\n   * is called, allowing the setting of flags based on the copied Persistent.\n   */\n  Persistent &operator=(const Persistent &that);\n\n  template <typename S, typename M2>\n  Persistent &operator=(const Persistent<S, M2> &that);\n\n  /**\n   * The destructor will dispose the Persistent based on the kResetInDestructor\n   * flags in the traits class.  Since not calling dispose can result in a\n   * memory leak, it is recommended to always set this flag.\n   */\n  ~Persistent();\n};\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br"),n("span",{staticClass:"line-number"},[e._v("15")]),n("br"),n("span",{staticClass:"line-number"},[e._v("16")]),n("br"),n("span",{staticClass:"line-number"},[e._v("17")]),n("br"),n("span",{staticClass:"line-number"},[e._v("18")]),n("br"),n("span",{staticClass:"line-number"},[e._v("19")]),n("br"),n("span",{staticClass:"line-number"},[e._v("20")]),n("br"),n("span",{staticClass:"line-number"},[e._v("21")]),n("br"),n("span",{staticClass:"line-number"},[e._v("22")]),n("br"),n("span",{staticClass:"line-number"},[e._v("23")]),n("br"),n("span",{staticClass:"line-number"},[e._v("24")]),n("br"),n("span",{staticClass:"line-number"},[e._v("25")]),n("br"),n("span",{staticClass:"line-number"},[e._v("26")]),n("br"),n("span",{staticClass:"line-number"},[e._v("27")]),n("br"),n("span",{staticClass:"line-number"},[e._v("28")]),n("br"),n("span",{staticClass:"line-number"},[e._v("29")]),n("br"),n("span",{staticClass:"line-number"},[e._v("30")]),n("br"),n("span",{staticClass:"line-number"},[e._v("31")]),n("br"),n("span",{staticClass:"line-number"},[e._v("32")]),n("br"),n("span",{staticClass:"line-number"},[e._v("33")]),n("br"),n("span",{staticClass:"line-number"},[e._v("34")]),n("br"),n("span",{staticClass:"line-number"},[e._v("35")]),n("br"),n("span",{staticClass:"line-number"},[e._v("36")]),n("br"),n("span",{staticClass:"line-number"},[e._v("37")]),n("br"),n("span",{staticClass:"line-number"},[e._v("38")]),n("br"),n("span",{staticClass:"line-number"},[e._v("39")]),n("br"),n("span",{staticClass:"line-number"},[e._v("40")]),n("br"),n("span",{staticClass:"line-number"},[e._v("41")]),n("br")])]),n("p",[e._v("See the V8 documentation for "),n("a",{attrs:{href:"https://v8docs.nodesource.com/node-8.16/d2/d78/classv8_1_1_persistent.html",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("Persistent")]),n("OutboundLink")],1),e._v(" for further information.")]),e._v(" "),n("p",[n("a",{attrs:{name:"api_nan_global"}})]),e._v(" "),n("h3",{attrs:{id:"nan-global"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nan-global"}},[e._v("#")]),e._v(" Nan::Global")]),e._v(" "),n("p",[e._v("A type of "),n("code",[e._v("PersistentBase")]),e._v(" which has move semantics.")]),e._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("template<typename T> class Global : public PersistentBase<T> {\n public:\n  /**\n   * A Global with no storage cell.\n   */\n  Global();\n\n  /**\n   * Construct a Global from a v8::Local. When the v8::Local is non-empty, a new\n   * storage cell is created pointing to the same object, and no flags are set.\n   */\n  template<typename S> Global(v8::Local<S> that);\n  /**\n   * Construct a Global from a PersistentBase. When the Persistent is non-empty,\n   * a new storage cell is created pointing to the same object, and no flags are\n   * set.\n   */\n  template<typename S> Global(const PersistentBase<S> &that);\n\n  /**\n   * Pass allows returning globals from functions, etc.\n   */\n  Global Pass();\n};\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br"),n("span",{staticClass:"line-number"},[e._v("15")]),n("br"),n("span",{staticClass:"line-number"},[e._v("16")]),n("br"),n("span",{staticClass:"line-number"},[e._v("17")]),n("br"),n("span",{staticClass:"line-number"},[e._v("18")]),n("br"),n("span",{staticClass:"line-number"},[e._v("19")]),n("br"),n("span",{staticClass:"line-number"},[e._v("20")]),n("br"),n("span",{staticClass:"line-number"},[e._v("21")]),n("br"),n("span",{staticClass:"line-number"},[e._v("22")]),n("br"),n("span",{staticClass:"line-number"},[e._v("23")]),n("br"),n("span",{staticClass:"line-number"},[e._v("24")]),n("br")])]),n("p",[e._v("See the V8 documentation for "),n("a",{attrs:{href:"https://v8docs.nodesource.com/node-8.16/d5/d40/classv8_1_1_global.html",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("Global")]),n("OutboundLink")],1),e._v(" for further information.")]),e._v(" "),n("p",[n("a",{attrs:{name:"api_nan_weak_callback_info"}})]),e._v(" "),n("h3",{attrs:{id:"nan-weakcallbackinfo"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nan-weakcallbackinfo"}},[e._v("#")]),e._v(" Nan::WeakCallbackInfo")]),e._v(" "),n("p",[n("code",[e._v("Nan::WeakCallbackInfo")]),e._v(" is used as an argument when setting a persistent reference as weak. You may need to free any external resources attached to the object. It is a mirror of "),n("code",[e._v("v8:WeakCallbackInfo")]),e._v(" as found in newer versions of V8.")]),e._v(" "),n("p",[e._v("Definition:")]),e._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("template<typename T> class WeakCallbackInfo {\n public:\n  typedef void (*Callback)(const WeakCallbackInfo<T>& data);\n\n  v8::Isolate *GetIsolate() const;\n\n  /**\n   * Get the parameter that was associated with the weak handle.\n   */\n  T *GetParameter() const;\n\n  /**\n   * Get pointer from internal field, index can be 0 or 1.\n   */\n  void *GetInternalField(int index) const;\n};\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br"),n("span",{staticClass:"line-number"},[e._v("15")]),n("br"),n("span",{staticClass:"line-number"},[e._v("16")]),n("br")])]),n("p",[e._v("Example usage:")]),e._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("void weakCallback(const WeakCallbackInfo<int> &data) {\n  int *parameter = data.GetParameter();\n  delete parameter;\n}\n\nPersistent<v8::Object> obj;\nint *data = new int(0);\nobj.SetWeak(data, callback, WeakCallbackType::kParameter);\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br")])]),n("p",[e._v("See the V8 documentation for "),n("a",{attrs:{href:"https://v8docs.nodesource.com/node-8.16/d8/d06/classv8_1_1_weak_callback_info.html",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("WeakCallbackInfo")]),n("OutboundLink")],1),e._v(" for further information.")]),e._v(" "),n("p",[n("a",{attrs:{name:"api_nan_weak_callback_type"}})]),e._v(" "),n("h3",{attrs:{id:"nan-weakcallbacktype"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nan-weakcallbacktype"}},[e._v("#")]),e._v(" Nan::WeakCallbackType")]),e._v(" "),n("p",[e._v("Represents the type of a weak callback.\nA weak callback of type "),n("code",[e._v("kParameter")]),e._v(" makes the supplied parameter to "),n("code",[e._v("Nan::PersistentBase::SetWeak")]),e._v(" available through "),n("code",[e._v("WeakCallbackInfo::GetParameter")]),e._v(".\nA weak callback of type "),n("code",[e._v("kInternalFields")]),e._v(" uses up to two internal fields at indices 0 and 1 on the "),n("code",[e._v("Nan::PersistentBase<v8::Object>")]),e._v(" being made weak.\nNote that only "),n("code",[e._v("v8::Object")]),e._v("s and derivatives can have internal fields.")]),e._v(" "),n("p",[e._v("Definition:")]),e._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("enum class WeakCallbackType { kParameter, kInternalFields };\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])])])}),[],!1,null,null,null);s.default=t.exports}}]);