(window.webpackJsonp=window.webpackJsonp||[]).push([[212],{579:function(t,a,e){"use strict";e.r(a);var s=e(25),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",{attrs:{align:"center"}},[e("a",{attrs:{href:"http://gulpjs.com"}},[e("img",{attrs:{height:"257",width:"114",src:"https://raw.githubusercontent.com/gulpjs/artwork/master/gulp-2x.png"}})])]),t._v(" "),e("h1",{attrs:{id:"flagged-respawn"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flagged-respawn"}},[t._v("#")]),t._v(" flagged-respawn")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.npmjs.com/package/flagged-respawn",target:"_blank",rel:"noopener noreferrer"}},[e("img",{attrs:{src:"http://img.shields.io/npm/v/flagged-respawn.svg",alt:"NPM version"}}),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://www.npmjs.com/package/flagged-respawn",target:"_blank",rel:"noopener noreferrer"}},[e("img",{attrs:{src:"http://img.shields.io/npm/dm/flagged-respawn.svg",alt:"Downloads"}}),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://travis-ci.org/gulpjs/flagged-respawn",target:"_blank",rel:"noopener noreferrer"}},[e("img",{attrs:{src:"http://img.shields.io/travis/gulpjs/flagged-respawn.svg?label=travis-ci",alt:"Travis Build Status"}}),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://ci.appveyor.com/project/gulpjs/flagged-respawn",target:"_blank",rel:"noopener noreferrer"}},[e("img",{attrs:{src:"https://img.shields.io/appveyor/ci/gulpjs/flagged-respawn.svg?label=appveyor",alt:"AppVeyor Build Status"}}),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://coveralls.io/r/gulpjs/flagged-respawn",target:"_blank",rel:"noopener noreferrer"}},[e("img",{attrs:{src:"http://img.shields.io/coveralls/gulpjs/flagged-respawn/master.svg",alt:"Coveralls Status"}}),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://gitter.im/gulpjs/gulp",target:"_blank",rel:"noopener noreferrer"}},[e("img",{attrs:{src:"https://badges.gitter.im/gulpjs/gulp.svg",alt:"Gitter chat"}}),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("A tool for respawning node binaries when special flags are present.")]),t._v(" "),e("h2",{attrs:{id:"what-is-it"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#what-is-it"}},[t._v("#")]),t._v(" What is it?")]),t._v(" "),e("p",[t._v("Say you wrote a command line tool that runs arbitrary javascript (e.g. task runner, test framework, etc). For the sake of discussion, let's pretend it's a testing harness you've named "),e("code",[t._v("testify")]),t._v(".")]),t._v(" "),e("p",[t._v("Everything is going splendidly until one day you decide to test some code that relies on a feature behind a v8 flag in node ("),e("code",[t._v("--harmony")]),t._v(", for example).  Without much thought, you run "),e("code",[t._v("testify --harmony spec tests.js")]),t._v(".")]),t._v(" "),e("p",[t._v("It doesn't work. After digging around for a bit, you realize this produces a "),e("a",{attrs:{href:"http://nodejs.org/docs/latest/api/process.html#process_process_argv",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("process.argv")]),e("OutboundLink")],1),t._v(" of:")]),t._v(" "),e("p",[e("code",[t._v("['node', '/usr/local/bin/test', '--harmony', 'spec', 'tests.js']")])]),t._v(" "),e("p",[t._v("Crap. The "),e("code",[t._v("--harmony")]),t._v(" flag is in the wrong place! It should be applied to the "),e("strong",[t._v("node")]),t._v(" command, not our binary. What we actually wanted was this:")]),t._v(" "),e("p",[e("code",[t._v("['node', '--harmony', '/usr/local/bin/test', 'spec', 'tests.js']")])]),t._v(" "),e("p",[t._v("Flagged-respawn fixes this problem and handles all the edge cases respawning creates, such as:")]),t._v(" "),e("ul",[e("li",[t._v("Providing a method to determine if a respawn is needed.")]),t._v(" "),e("li",[t._v("Piping stderr/stdout from the child into the parent.")]),t._v(" "),e("li",[t._v("Making the parent process exit with the same code as the child.")]),t._v(" "),e("li",[t._v("If the child is killed, making the parent exit with the same signal.")])]),t._v(" "),e("p",[t._v("To see it in action, clone this repository and run "),e("code",[t._v("npm install")]),t._v(" / "),e("code",[t._v("npm run respawn")]),t._v(" / "),e("code",[t._v("npm run nospawn")]),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"sample-usage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sample-usage"}},[t._v("#")]),t._v(" Sample Usage")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("#"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("usr"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("bin"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("env node\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" flaggedRespawn "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'flagged-respawn'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// get a list of all possible v8 flags for the running version of node")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" v8flags "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'v8flags'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("flaggedRespawn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v8flags"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argv"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("ready"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" child")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ready"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Running!'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// your cli code here")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Special flags found, respawning.'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pid "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" child"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pid"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Respawned to PID:'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" child"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pid"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br")])]),e("h2",{attrs:{id:"api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" API")]),t._v(" "),e("h3",{attrs:{id:"flaggedrespawn-flags-argv-forcedflags-callback-void"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flaggedrespawn-flags-argv-forcedflags-callback-void"}},[t._v("#")]),t._v(" "),e("u",[t._v("flaggedRespawn(flags, argv, [ forcedFlags, ] callback) : Void")])]),t._v(" "),e("p",[t._v("Respawns the script itself when "),e("em",[t._v("argv")]),t._v(" has special flag contained in "),e("em",[t._v("flags")]),t._v(" and/or "),e("em",[t._v("forcedFlags")]),t._v(" is not empty. Because members of "),e("em",[t._v("flags")]),t._v(" and "),e("em",[t._v("forcedFlags")]),t._v(" are passed to "),e("code",[t._v("node")]),t._v(" command, each of them needs to be a node flag or a V8 flag.")]),t._v(" "),e("h4",{attrs:{id:"forbid-respawning"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#forbid-respawning"}},[t._v("#")]),t._v(" Forbid respawning")]),t._v(" "),e("p",[t._v("If "),e("code",[t._v("--no-respawning")]),t._v(" flag is given in "),e("em",[t._v("argv")]),t._v(", this function does not respawned even if "),e("em",[t._v("argv")]),t._v(" contains members of flags or "),e("em",[t._v("forcedFlags")]),t._v(" is not empty. (This flag is also used internally to prevent from respawning more than once).")]),t._v(" "),e("h4",{attrs:{id:"parameter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parameter"}},[t._v("#")]),t._v(" Parameter:")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("Parameter")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("Type")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("em",[t._v("flags")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Array")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("An array of node flags and V8 flags which are available when present in "),e("em",[t._v("argv")]),t._v(".")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("em",[t._v("argv")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Array")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Command line arguments to respawn.")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("em",[t._v("forcedFlags")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Array or String")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("An array of node flags or a string of a single flag and V8 flags for respawning forcely.")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("em",[t._v("callback")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("function")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("A called function when not respawning or after respawned.")])])])]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[e("u",[e("i",[t._v("callback")]),t._v("(ready, proc, argv) : Void")])])]),t._v(" "),e("p",[e("em",[t._v("callback")]),t._v(" function is called both when respawned or not, and it can be distinguished by callback's argument: "),e("em",[t._v("ready")]),t._v(". ("),e("em",[t._v("ready")]),t._v(" indicates whether a process spawned its child process (false) or not (true), but it does not indicate whether a process is a spawned child process or not. "),e("em",[t._v("ready")]),t._v(" for a spawned child process is true.)")]),t._v(" "),e("p",[e("em",[t._v("argv")]),t._v(" is an array of command line arguments which is respawned (when "),e("em",[t._v("ready")]),t._v(" is false) or is passed current process except flags within "),e("em",[t._v("flags")]),t._v(" and "),e("code",[t._v("--no-respawning")]),t._v(" (when "),e("em",[t._v("ready")]),t._v(" is true).")]),t._v(" "),e("p",[e("strong",[t._v("Parameter:")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("Parameter")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("Type")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("em",[t._v("ready")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("boolean")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("True, if not respawning and is ready to execute main function.")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("em",[t._v("proc")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("object")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Child process object if respawned, otherwise current process object.")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("em",[t._v("argv")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Array")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("An array of command line arguments.")])])])])])]),t._v(" "),e("h2",{attrs:{id:"license"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#license"}},[t._v("#")]),t._v(" License")]),t._v(" "),e("p",[t._v("MIT")])])}),[],!1,null,null,null);a.default=n.exports}}]);