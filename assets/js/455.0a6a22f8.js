(window.webpackJsonp=window.webpackJsonp||[]).push([[455],{823:function(t,e,a){"use strict";a.r(e);var s=a(25),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"stack-trace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stack-trace"}},[t._v("#")]),t._v(" stack-trace")]),t._v(" "),a("p",[t._v("Get v8 stack traces as an array of CallSite objects.")]),t._v(" "),a("h2",{attrs:{id:"install"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install"}},[t._v("#")]),t._v(" Install")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" stack-trace\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h2",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),a("p",[t._v("The stack-trace module makes it easy for you to capture the current stack:")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" stackTrace "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stack-trace'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" trace "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" stackTrace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'assert'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strictEqual")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("trace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFileName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("However, sometimes you have already popped the stack you are interested in,\nand all you have left is an "),a("code",[t._v("Error")]),t._v(" object. This module can help:")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" stackTrace "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stack-trace'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'something went wrong'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" trace "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" stackTrace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'assert'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strictEqual")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("trace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFileName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("Please note that parsing the "),a("code",[t._v("Error#stack")]),t._v(" property is not perfect, only\ncertain properties can be retrieved with it as noted in the API docs below.")]),t._v(" "),a("h2",{attrs:{id:"long-stack-traces"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#long-stack-traces"}},[t._v("#")]),t._v(" Long stack traces")]),t._v(" "),a("p",[t._v("stack-trace works great with "),a("a",{attrs:{href:"https://github.com/tlrobinson/long-stack-traces",target:"_blank",rel:"noopener noreferrer"}},[t._v("long-stack-traces"),a("OutboundLink")],1),t._v(", when parsing an "),a("code",[t._v("err.stack")]),t._v("\nthat has crossed the event loop boundary, a "),a("code",[t._v("CallSite")]),t._v(" object returning\n"),a("code",[t._v("'----------------------------------------'")]),t._v(" for "),a("code",[t._v("getFileName()")]),t._v(" is created.\nAll other methods of the event loop boundary call site return "),a("code",[t._v("null")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" API")]),t._v(" "),a("h3",{attrs:{id:"stacktrace-get-belowfn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stacktrace-get-belowfn"}},[t._v("#")]),t._v(" stackTrace.get([belowFn])")]),t._v(" "),a("p",[t._v("Returns an array of "),a("code",[t._v("CallSite")]),t._v(" objects, where element "),a("code",[t._v("0")]),t._v(" is the current call\nsite.")]),t._v(" "),a("p",[t._v("When passing a function on the current stack as the "),a("code",[t._v("belowFn")]),t._v(" parameter, the\nreturned array will only include "),a("code",[t._v("CallSite")]),t._v(" objects below this function.")]),t._v(" "),a("h3",{attrs:{id:"stacktrace-parse-err"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stacktrace-parse-err"}},[t._v("#")]),t._v(" stackTrace.parse(err)")]),t._v(" "),a("p",[t._v("Parses the "),a("code",[t._v("err.stack")]),t._v(" property of an "),a("code",[t._v("Error")]),t._v(" object into an array compatible\nwith those returned by "),a("code",[t._v("stackTrace.get()")]),t._v(". However, only the following methods\nare implemented on the returned "),a("code",[t._v("CallSite")]),t._v(" objects.")]),t._v(" "),a("ul",[a("li",[t._v("getTypeName")]),t._v(" "),a("li",[t._v("getFunctionName")]),t._v(" "),a("li",[t._v("getMethodName")]),t._v(" "),a("li",[t._v("getFileName")]),t._v(" "),a("li",[t._v("getLineNumber")]),t._v(" "),a("li",[t._v("getColumnNumber")]),t._v(" "),a("li",[t._v("isNative")])]),t._v(" "),a("p",[t._v("Note: Except "),a("code",[t._v("getFunctionName()")]),t._v(", all of the above methods return exactly the\nsame values as you would get from "),a("code",[t._v("stackTrace.get()")]),t._v(". "),a("code",[t._v("getFunctionName()")]),t._v("\nis sometimes a little different, but still useful.")]),t._v(" "),a("h3",{attrs:{id:"callsite"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#callsite"}},[t._v("#")]),t._v(" CallSite")]),t._v(" "),a("p",[t._v("The official v8 CallSite object API can be found "),a("a",{attrs:{href:"http://code.google.com/p/v8/wiki/JavaScriptStackTraceApi",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),a("OutboundLink")],1),t._v(". A quick\nexcerpt:")]),t._v(" "),a("blockquote",[a("p",[t._v("A CallSite object defines the following methods:")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("getThis")]),t._v(": returns the value of this")]),t._v(" "),a("li",[a("strong",[t._v("getTypeName")]),t._v(": returns the type of this as a string. This is the name of the function stored in the constructor field of this, if available, otherwise the object's [[Class]] internal property.")]),t._v(" "),a("li",[a("strong",[t._v("getFunction")]),t._v(": returns the current function")]),t._v(" "),a("li",[a("strong",[t._v("getFunctionName")]),t._v(": returns the name of the current function, typically its name property. If a name property is not available an attempt will be made to try to infer a name from the function's context.")]),t._v(" "),a("li",[a("strong",[t._v("getMethodName")]),t._v(": returns the name of the property of this or one of its prototypes that holds the current function")]),t._v(" "),a("li",[a("strong",[t._v("getFileName")]),t._v(": if this function was defined in a script returns the name of the script")]),t._v(" "),a("li",[a("strong",[t._v("getLineNumber")]),t._v(": if this function was defined in a script returns the current line number")]),t._v(" "),a("li",[a("strong",[t._v("getColumnNumber")]),t._v(": if this function was defined in a script returns the current column number")]),t._v(" "),a("li",[a("strong",[t._v("getEvalOrigin")]),t._v(": if this function was created using a call to eval returns a CallSite object representing the location where eval was called")]),t._v(" "),a("li",[a("strong",[t._v("isToplevel")]),t._v(": is this a toplevel invocation, that is, is this the global object?")]),t._v(" "),a("li",[a("strong",[t._v("isEval")]),t._v(": does this call take place in code defined by a call to eval?")]),t._v(" "),a("li",[a("strong",[t._v("isNative")]),t._v(": is this call in native V8 code?")]),t._v(" "),a("li",[a("strong",[t._v("isConstructor")]),t._v(": is this a constructor call?")])])]),t._v(" "),a("h2",{attrs:{id:"license"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#license"}},[t._v("#")]),t._v(" License")]),t._v(" "),a("p",[t._v("stack-trace is licensed under the MIT license.")])])}),[],!1,null,null,null);e.default=n.exports}}]);