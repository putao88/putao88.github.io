(window.webpackJsonp=window.webpackJsonp||[]).push([[506],{866:function(t,s,a){"use strict";a.r(s);var e=a(25),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",{attrs:{align:"center"}},[a("a",{attrs:{href:"http://gulpjs.com"}},[a("img",{attrs:{height:"257",width:"114",src:"https://raw.githubusercontent.com/gulpjs/artwork/master/gulp-2x.png"}})])]),t._v(" "),a("h1",{attrs:{id:"vinyl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vinyl"}},[t._v("#")]),t._v(" vinyl")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.npmjs.com/package/vinyl",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/npm/v/vinyl.svg",alt:"NPM version"}}),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://www.npmjs.com/package/vinyl",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/npm/dm/vinyl.svg",alt:"Downloads"}}),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://dev.azure.com/gulpjs/gulp/_build/latest?definitionId=$PROJECT_ID&branchName=master",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://dev.azure.com/gulpjs/gulp/_apis/build/status/vinyl?branchName=master",alt:"Azure Pipelines Build Status"}}),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://travis-ci.org/gulpjs/vinyl",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/travis/gulpjs/vinyl.svg?label=travis-ci",alt:"Travis Build Status"}}),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://ci.appveyor.com/project/gulpjs/vinyl",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/appveyor/ci/gulpjs/vinyl.svg?label=appveyor",alt:"AppVeyor Build Status"}}),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://coveralls.io/r/gulpjs/vinyl",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/coveralls/gulpjs/vinyl/master.svg",alt:"Coveralls Status"}}),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://gitter.im/gulpjs/gulp",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://badges.gitter.im/gulpjs/gulp.svg",alt:"Gitter chat"}}),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("Virtual file format.")]),t._v(" "),a("h2",{attrs:{id:"what-is-vinyl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-vinyl"}},[t._v("#")]),t._v(" What is Vinyl?")]),t._v(" "),a("p",[t._v("Vinyl is a very simple metadata object that describes a file. When you think of a file, two attributes come to mind: "),a("code",[t._v("path")]),t._v(" and "),a("code",[t._v("contents")]),t._v(". These are the main attributes on a Vinyl object. A file does not necessarily represent something on your computerâ€™s file system. You have files on S3, FTP, Dropbox, Box, CloudThingly.io and other services. Vinyl can be used to describe files from all of these sources.")]),t._v(" "),a("h2",{attrs:{id:"what-is-a-vinyl-adapter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-a-vinyl-adapter"}},[t._v("#")]),t._v(" What is a Vinyl Adapter?")]),t._v(" "),a("p",[t._v('While Vinyl provides a clean way to describe a file, we also need a way to access these files. Each file source needs what I call a "Vinyl adapter". A Vinyl adapter simply exposes a '),a("code",[t._v("src(globs)")]),t._v(" and a "),a("code",[t._v("dest(folder)")]),t._v(" method. Each return a stream. The "),a("code",[t._v("src")]),t._v(" stream produces Vinyl objects, and the "),a("code",[t._v("dest")]),t._v(" stream consumes Vinyl objects. Vinyl adapters can expose extra methods that might be specific to their input/output medium, such as the "),a("code",[t._v("symlink")]),t._v(" method "),a("a",{attrs:{href:"https://github.com/gulpjs/vinyl-fs",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("vinyl-fs")]),a("OutboundLink")],1),t._v(" provides.")]),t._v(" "),a("h2",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" Vinyl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vinyl'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" jsFile "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vinyl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  cwd"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  base"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/test/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/test/file.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  contents"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'var x = 123'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("h2",{attrs:{id:"api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" API")]),t._v(" "),a("h3",{attrs:{id:"new-vinyl-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#new-vinyl-options"}},[t._v("#")]),t._v(" "),a("code",[t._v("new Vinyl([options])")])]),t._v(" "),a("p",[t._v("The constructor is used to create a new instance of "),a("code",[t._v("Vinyl")]),t._v(". Each instance represents a separate file, directory or symlink.")]),t._v(" "),a("p",[t._v("All internally managed paths ("),a("code",[t._v("cwd")]),t._v(", "),a("code",[t._v("base")]),t._v(", "),a("code",[t._v("path")]),t._v(", "),a("code",[t._v("history")]),t._v(") are normalized and have trailing separators removed. See "),a("a",{attrs:{href:"#normalization-and-concatenation"}},[t._v("Normalization and concatenation")]),t._v(" for more information.")]),t._v(" "),a("p",[t._v("Options may be passed upon instantiation to create a file with specific properties.")]),t._v(" "),a("h4",{attrs:{id:"options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[t._v("#")]),t._v(" "),a("code",[t._v("options")])]),t._v(" "),a("p",[t._v("Options are not mutated by the constructor.")]),t._v(" "),a("h5",{attrs:{id:"options-cwd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-cwd"}},[t._v("#")]),t._v(" "),a("code",[t._v("options.cwd")])]),t._v(" "),a("p",[t._v("The current working directory of the file.")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("String")])]),t._v(" "),a("p",[t._v("Default: "),a("code",[t._v("process.cwd()")])]),t._v(" "),a("h5",{attrs:{id:"options-base"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-base"}},[t._v("#")]),t._v(" "),a("code",[t._v("options.base")])]),t._v(" "),a("p",[t._v("Used for calculating the "),a("code",[t._v("relative")]),t._v(" property. This is typically where a glob starts.")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("String")])]),t._v(" "),a("p",[t._v("Default: "),a("code",[t._v("options.cwd")])]),t._v(" "),a("h5",{attrs:{id:"options-path"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-path"}},[t._v("#")]),t._v(" "),a("code",[t._v("options.path")])]),t._v(" "),a("p",[t._v("The full path to the file.")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("String")])]),t._v(" "),a("p",[t._v("Default: "),a("code",[t._v("undefined")])]),t._v(" "),a("h5",{attrs:{id:"options-history"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-history"}},[t._v("#")]),t._v(" "),a("code",[t._v("options.history")])]),t._v(" "),a("p",[t._v("Stores the path history. If "),a("code",[t._v("options.path")]),t._v(" and "),a("code",[t._v("options.history")]),t._v(" are both passed, "),a("code",[t._v("options.path")]),t._v(" is appended to "),a("code",[t._v("options.history")]),t._v(". All "),a("code",[t._v("options.history")]),t._v(" paths are normalized by the "),a("code",[t._v("file.path")]),t._v(" setter.")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("Array")])]),t._v(" "),a("p",[t._v("Default: "),a("code",[t._v("[]")]),t._v(" (or "),a("code",[t._v("[options.path]")]),t._v(" if "),a("code",[t._v("options.path")]),t._v(" is passed)")]),t._v(" "),a("h5",{attrs:{id:"options-stat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-stat"}},[t._v("#")]),t._v(" "),a("code",[t._v("options.stat")])]),t._v(" "),a("p",[t._v("The result of an "),a("code",[t._v("fs.stat")]),t._v(" call. This is how you mark the file as a directory or symbolic link. See "),a("a",{attrs:{href:"#isdirectory"}},[t._v("isDirectory()")]),t._v(", "),a("a",{attrs:{href:"#issymbolic"}},[t._v("isSymbolic()")]),t._v(" and "),a("a",{attrs:{href:"http://nodejs.org/api/fs.html#fs_class_fs_stats",target:"_blank",rel:"noopener noreferrer"}},[t._v("fs.Stats"),a("OutboundLink")],1),t._v(" for more information.")]),t._v(" "),a("p",[t._v("Type: "),a("a",{attrs:{href:"http://nodejs.org/api/fs.html#fs_class_fs_stats",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("fs.Stats")]),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("Default: "),a("code",[t._v("undefined")])]),t._v(" "),a("h5",{attrs:{id:"options-contents"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-contents"}},[t._v("#")]),t._v(" "),a("code",[t._v("options.contents")])]),t._v(" "),a("p",[t._v("The contents of the file.  If "),a("code",[t._v("options.contents")]),t._v(" is a "),a("a",{attrs:{href:"https://nodejs.org/api/stream.html#stream_readable_streams",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("ReadableStream")]),a("OutboundLink")],1),t._v(", it is wrapped in a "),a("a",{attrs:{href:"https://github.com/mcollina/cloneable-readable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("cloneable-readable")]),a("OutboundLink")],1),t._v(" stream.")]),t._v(" "),a("p",[t._v("Type: "),a("a",{attrs:{href:"https://nodejs.org/api/stream.html#stream_readable_streams",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("ReadableStream")]),a("OutboundLink")],1),t._v(", "),a("a",{attrs:{href:"https://nodejs.org/api/buffer.html#buffer_class_buffer",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Buffer")]),a("OutboundLink")],1),t._v(", or "),a("code",[t._v("null")])]),t._v(" "),a("p",[t._v("Default: "),a("code",[t._v("null")])]),t._v(" "),a("h5",{attrs:{id:"options-custom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-custom"}},[t._v("#")]),t._v(" "),a("code",[t._v("options.{custom}")])]),t._v(" "),a("p",[t._v("Any other option properties will be directly assigned to the new Vinyl object.")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" Vinyl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vinyl'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" file "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vinyl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" foo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h3",{attrs:{id:"instance-methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#instance-methods"}},[t._v("#")]),t._v(" Instance methods")]),t._v(" "),a("p",[t._v("Each Vinyl object will have instance methods. Every method will be available but may return differently based on what properties were set upon instantiation or modified since.")]),t._v(" "),a("h4",{attrs:{id:"file-isbuffer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file-isbuffer"}},[t._v("#")]),t._v(" "),a("code",[t._v("file.isBuffer()")])]),t._v(" "),a("p",[t._v("Returns "),a("code",[t._v("true")]),t._v(" if the file contents are a "),a("a",{attrs:{href:"https://nodejs.org/api/buffer.html#buffer_class_buffer",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Buffer")]),a("OutboundLink")],1),t._v(", otherwise "),a("code",[t._v("false")]),t._v(".")]),t._v(" "),a("h4",{attrs:{id:"file-isstream"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file-isstream"}},[t._v("#")]),t._v(" "),a("code",[t._v("file.isStream()")])]),t._v(" "),a("p",[t._v("Returns "),a("code",[t._v("true")]),t._v(" if the file contents are a "),a("a",{attrs:{href:"https://nodejs.org/api/stream.html#stream_stream",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Stream")]),a("OutboundLink")],1),t._v(", otherwise "),a("code",[t._v("false")]),t._v(".")]),t._v(" "),a("h4",{attrs:{id:"file-isnull"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file-isnull"}},[t._v("#")]),t._v(" "),a("code",[t._v("file.isNull()")])]),t._v(" "),a("p",[t._v("Returns "),a("code",[t._v("true")]),t._v(" if the file contents are "),a("code",[t._v("null")]),t._v(", otherwise "),a("code",[t._v("false")]),t._v(".")]),t._v(" "),a("h4",{attrs:{id:"file-isdirectory"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file-isdirectory"}},[t._v("#")]),t._v(" "),a("code",[t._v("file.isDirectory()")])]),t._v(" "),a("p",[t._v("Returns "),a("code",[t._v("true")]),t._v(" if the file represents a directory, otherwise "),a("code",[t._v("false")]),t._v(".")]),t._v(" "),a("p",[t._v("A file is considered a directory when:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("file.isNull()")]),t._v(" is "),a("code",[t._v("true")])]),t._v(" "),a("li",[a("code",[t._v("file.stat")]),t._v(" is an object")]),t._v(" "),a("li",[a("code",[t._v("file.stat.isDirectory()")]),t._v(" returns "),a("code",[t._v("true")])])]),t._v(" "),a("p",[t._v("When constructing a Vinyl object, pass in a valid "),a("a",{attrs:{href:"http://nodejs.org/api/fs.html#fs_class_fs_stats",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("fs.Stats")]),a("OutboundLink")],1),t._v(" object via "),a("code",[t._v("options.stat")]),t._v(". If you are mocking the "),a("a",{attrs:{href:"http://nodejs.org/api/fs.html#fs_class_fs_stats",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("fs.Stats")]),a("OutboundLink")],1),t._v(" object, you may need to stub the "),a("code",[t._v("isDirectory()")]),t._v(" method.")]),t._v(" "),a("h4",{attrs:{id:"file-issymbolic"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file-issymbolic"}},[t._v("#")]),t._v(" "),a("code",[t._v("file.isSymbolic()")])]),t._v(" "),a("p",[t._v("Returns "),a("code",[t._v("true")]),t._v(" if the file represents a symbolic link, otherwise "),a("code",[t._v("false")]),t._v(".")]),t._v(" "),a("p",[t._v("A file is considered symbolic when:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("file.isNull()")]),t._v(" is "),a("code",[t._v("true")])]),t._v(" "),a("li",[a("code",[t._v("file.stat")]),t._v(" is an object")]),t._v(" "),a("li",[a("code",[t._v("file.stat.isSymbolicLink()")]),t._v(" returns "),a("code",[t._v("true")])])]),t._v(" "),a("p",[t._v("When constructing a Vinyl object, pass in a valid "),a("a",{attrs:{href:"http://nodejs.org/api/fs.html#fs_class_fs_stats",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("fs.Stats")]),a("OutboundLink")],1),t._v(" object via "),a("code",[t._v("options.stat")]),t._v(". If you are mocking the "),a("a",{attrs:{href:"http://nodejs.org/api/fs.html#fs_class_fs_stats",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("fs.Stats")]),a("OutboundLink")],1),t._v(" object, you may need to stub the "),a("code",[t._v("isSymbolicLink()")]),t._v(" method.")]),t._v(" "),a("h4",{attrs:{id:"file-clone-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file-clone-options"}},[t._v("#")]),t._v(" "),a("code",[t._v("file.clone([options])")])]),t._v(" "),a("p",[t._v("Returns a new Vinyl object with all attributes cloned.")]),t._v(" "),a("p",[a("strong",[t._v("By default custom attributes are cloned deeply.")])]),t._v(" "),a("p",[t._v("If "),a("code",[t._v("options")]),t._v(" or "),a("code",[t._v("options.deep")]),t._v(" is "),a("code",[t._v("false")]),t._v(", custom attributes will not be cloned deeply.")]),t._v(" "),a("p",[t._v("If "),a("code",[t._v("file.contents")]),t._v(" is a "),a("a",{attrs:{href:"https://nodejs.org/api/buffer.html#buffer_class_buffer",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Buffer")]),a("OutboundLink")],1),t._v(" and "),a("code",[t._v("options.contents")]),t._v(" is "),a("code",[t._v("false")]),t._v(", the "),a("a",{attrs:{href:"https://nodejs.org/api/buffer.html#buffer_class_buffer",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Buffer")]),a("OutboundLink")],1),t._v(" reference will be reused instead of copied.")]),t._v(" "),a("h4",{attrs:{id:"file-inspect"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file-inspect"}},[t._v("#")]),t._v(" "),a("code",[t._v("file.inspect()")])]),t._v(" "),a("p",[t._v("Returns a formatted-string interpretation of the Vinyl object. Automatically called by node's "),a("code",[t._v("console.log")]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"instance-properties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#instance-properties"}},[t._v("#")]),t._v(" Instance properties")]),t._v(" "),a("p",[t._v("Each Vinyl object will have instance properties. Some may be unavailable based on what properties were set upon instantiation or modified since.")]),t._v(" "),a("h4",{attrs:{id:"file-contents"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file-contents"}},[t._v("#")]),t._v(" "),a("code",[t._v("file.contents")])]),t._v(" "),a("p",[t._v("Gets and sets the contents of the file. If set to a "),a("a",{attrs:{href:"https://nodejs.org/api/stream.html#stream_readable_streams",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("ReadableStream")]),a("OutboundLink")],1),t._v(", it is wrapped in a "),a("a",{attrs:{href:"https://github.com/mcollina/cloneable-readable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("cloneable-readable")]),a("OutboundLink")],1),t._v(" stream.")]),t._v(" "),a("p",[t._v("Throws when set to any value other than a "),a("a",{attrs:{href:"https://nodejs.org/api/stream.html#stream_readable_streams",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("ReadableStream")]),a("OutboundLink")],1),t._v(", a "),a("a",{attrs:{href:"https://nodejs.org/api/buffer.html#buffer_class_buffer",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Buffer")]),a("OutboundLink")],1),t._v(" or "),a("code",[t._v("null")]),t._v(".")]),t._v(" "),a("p",[t._v("Type: "),a("a",{attrs:{href:"https://nodejs.org/api/stream.html#stream_readable_streams",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("ReadableStream")]),a("OutboundLink")],1),t._v(", "),a("a",{attrs:{href:"https://nodejs.org/api/buffer.html#buffer_class_buffer",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Buffer")]),a("OutboundLink")],1),t._v(", or "),a("code",[t._v("null")])]),t._v(" "),a("h4",{attrs:{id:"file-cwd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file-cwd"}},[t._v("#")]),t._v(" "),a("code",[t._v("file.cwd")])]),t._v(" "),a("p",[t._v("Gets and sets current working directory. Will always be normalized and have trailing separators removed.")]),t._v(" "),a("p",[t._v("Throws when set to any value other than non-empty strings.")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("String")])]),t._v(" "),a("h4",{attrs:{id:"file-base"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file-base"}},[t._v("#")]),t._v(" "),a("code",[t._v("file.base")])]),t._v(" "),a("p",[t._v("Gets and sets base directory. Used for relative pathing (typically where a glob starts).\nWhen "),a("code",[t._v("null")]),t._v(" or "),a("code",[t._v("undefined")]),t._v(", it simply proxies the "),a("code",[t._v("file.cwd")]),t._v(" property. Will always be normalized and have trailing separators removed.")]),t._v(" "),a("p",[t._v("Throws when set to any value other than non-empty strings or "),a("code",[t._v("null")]),t._v("/"),a("code",[t._v("undefined")]),t._v(".")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("String")])]),t._v(" "),a("h4",{attrs:{id:"file-path"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file-path"}},[t._v("#")]),t._v(" "),a("code",[t._v("file.path")])]),t._v(" "),a("p",[t._v("Gets and sets the absolute pathname string or "),a("code",[t._v("undefined")]),t._v(". Setting to a different value appends the new path to "),a("code",[t._v("file.history")]),t._v(". If set to the same value as the current path, it is ignored. All new values are normalized and have trailing separators removed.")]),t._v(" "),a("p",[t._v("Throws when set to any value other than a string.")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("String")])]),t._v(" "),a("h4",{attrs:{id:"file-history"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file-history"}},[t._v("#")]),t._v(" "),a("code",[t._v("file.history")])]),t._v(" "),a("p",[t._v("Array of "),a("code",[t._v("file.path")]),t._v(" values the Vinyl object has had, from "),a("code",[t._v("file.history[0]")]),t._v(" (original) through "),a("code",[t._v("file.history[file.history.length - 1]")]),t._v(" (current). "),a("code",[t._v("file.history")]),t._v(" and its elements should normally be treated as read-only and only altered indirectly by setting "),a("code",[t._v("file.path")]),t._v(".")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("Array")])]),t._v(" "),a("h4",{attrs:{id:"file-relative"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file-relative"}},[t._v("#")]),t._v(" "),a("code",[t._v("file.relative")])]),t._v(" "),a("p",[t._v("Gets the result of "),a("code",[t._v("path.relative(file.base, file.path)")]),t._v(".")]),t._v(" "),a("p",[t._v("Throws when set or when "),a("code",[t._v("file.path")]),t._v(" is not set.")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("String")])]),t._v(" "),a("p",[t._v("Example:")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" file "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  cwd"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  base"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/test/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/test/file.js'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("relative"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// file.js")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h4",{attrs:{id:"file-dirname"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file-dirname"}},[t._v("#")]),t._v(" "),a("code",[t._v("file.dirname")])]),t._v(" "),a("p",[t._v("Gets and sets the dirname of "),a("code",[t._v("file.path")]),t._v(". Will always be normalized and have trailing separators removed.")]),t._v(" "),a("p",[t._v("Throws when "),a("code",[t._v("file.path")]),t._v(" is not set.")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("String")])]),t._v(" "),a("p",[t._v("Example:")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" file "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  cwd"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  base"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/test/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/test/file.js'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /test")]),t._v("\n\nfile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dirname "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/specs'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /specs")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /specs/file.js")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("h4",{attrs:{id:"file-basename"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file-basename"}},[t._v("#")]),t._v(" "),a("code",[t._v("file.basename")])]),t._v(" "),a("p",[t._v("Gets and sets the basename of "),a("code",[t._v("file.path")]),t._v(".")]),t._v(" "),a("p",[t._v("Throws when "),a("code",[t._v("file.path")]),t._v(" is not set.")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("String")])]),t._v(" "),a("p",[t._v("Example:")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" file "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  cwd"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  base"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/test/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/test/file.js'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("basename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// file.js")]),t._v("\n\nfile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("basename "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'file.txt'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("basename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// file.txt")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /test/file.txt")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("h4",{attrs:{id:"file-stem"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file-stem"}},[t._v("#")]),t._v(" "),a("code",[t._v("file.stem")])]),t._v(" "),a("p",[t._v("Gets and sets stem (filename without suffix) of "),a("code",[t._v("file.path")]),t._v(".")]),t._v(" "),a("p",[t._v("Throws when "),a("code",[t._v("file.path")]),t._v(" is not set.")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("String")])]),t._v(" "),a("p",[t._v("Example:")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" file "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  cwd"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  base"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/test/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/test/file.js'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// file")]),t._v("\n\nfile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stem "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// foo")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /test/foo.js")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("h4",{attrs:{id:"file-extname"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file-extname"}},[t._v("#")]),t._v(" "),a("code",[t._v("file.extname")])]),t._v(" "),a("p",[t._v("Gets and sets extname of "),a("code",[t._v("file.path")]),t._v(".")]),t._v(" "),a("p",[t._v("Throws when "),a("code",[t._v("file.path")]),t._v(" is not set.")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("String")])]),t._v(" "),a("p",[t._v("Example:")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" file "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  cwd"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  base"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/test/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/test/file.js'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("extname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// .js")]),t._v("\n\nfile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("extname "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.txt'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("extname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// .txt")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /test/file.txt")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("h4",{attrs:{id:"file-symlink"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file-symlink"}},[t._v("#")]),t._v(" "),a("code",[t._v("file.symlink")])]),t._v(" "),a("p",[t._v("Gets and sets the path where the file points to if it's a symbolic link. Will always be normalized and have trailing separators removed.")]),t._v(" "),a("p",[t._v("Throws when set to any value other than a string.")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("String")])]),t._v(" "),a("h3",{attrs:{id:"vinyl-isvinyl-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vinyl-isvinyl-file"}},[t._v("#")]),t._v(" "),a("code",[t._v("Vinyl.isVinyl(file)")])]),t._v(" "),a("p",[t._v("Static method used for checking if an object is a Vinyl file. Use this method instead of "),a("code",[t._v("instanceof")]),t._v(".")]),t._v(" "),a("p",[t._v("Takes an object and returns "),a("code",[t._v("true")]),t._v(" if it is a Vinyl file, otherwise returns "),a("code",[t._v("false")]),t._v(".")]),t._v(" "),a("p",[a("strong",[t._v("Note: This method uses an internal flag that some older versions of Vinyl didn't expose.")])]),t._v(" "),a("p",[t._v("Example:")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" Vinyl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vinyl'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" file "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vinyl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" notAFile "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nVinyl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isVinyl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nVinyl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isVinyl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("notAFile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h3",{attrs:{id:"vinyl-iscustomprop-property"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vinyl-iscustomprop-property"}},[t._v("#")]),t._v(" "),a("code",[t._v("Vinyl.isCustomProp(property)")])]),t._v(" "),a("p",[t._v("Static method used by Vinyl when setting values inside the constructor or when copying properties in "),a("code",[t._v("file.clone()")]),t._v(".")]),t._v(" "),a("p",[t._v("Takes a string "),a("code",[t._v("property")]),t._v(" and returns "),a("code",[t._v("true")]),t._v(" if the property is not used internally, otherwise returns "),a("code",[t._v("false")]),t._v(".")]),t._v(" "),a("p",[t._v("This method is useful for inheritting from the Vinyl constructor. Read more in "),a("a",{attrs:{href:"#extending-vinyl"}},[t._v("Extending Vinyl")]),t._v(".")]),t._v(" "),a("p",[t._v("Example:")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" Vinyl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vinyl'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nVinyl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isCustomProp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sourceMap'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nVinyl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isCustomProp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'path'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false -> internal getter/setter")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h2",{attrs:{id:"normalization-and-concatenation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#normalization-and-concatenation"}},[t._v("#")]),t._v(" Normalization and concatenation")]),t._v(" "),a("p",[t._v("Since all properties are normalized in their setters, you can just concatenate with "),a("code",[t._v("/")]),t._v(", and normalization takes care of it properly on all platforms.")]),t._v(" "),a("p",[t._v("Example:")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" file "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo.bar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// posix => /test/foo.bar")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// win32 => \\\\test\\\\foo.bar")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("But never concatenate with "),a("code",[t._v("\\")]),t._v(", since that is a valid filename character on posix system.")]),t._v(" "),a("h2",{attrs:{id:"extending-vinyl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#extending-vinyl"}},[t._v("#")]),t._v(" Extending Vinyl")]),t._v(" "),a("p",[t._v("When extending Vinyl into your own class with extra features, you need to think about a few things.")]),t._v(" "),a("p",[t._v("When you have your own properties that are managed internally, you need to extend the static "),a("code",[t._v("isCustomProp")]),t._v(" method to return "),a("code",[t._v("false")]),t._v(" when one of these properties is queried.")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" Vinyl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vinyl'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" builtInProps "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SuperFile")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vinyl")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("options")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'example internal read-only value'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isCustomProp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isCustomProp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" builtInProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// `foo` won't be assigned to the object below")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SuperFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" foo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"something"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br")])]),a("p",[t._v("This makes properties "),a("code",[t._v("foo")]),t._v(" and "),a("code",[t._v("_foo")]),t._v(" skipped when passed in options to "),a("code",[t._v("constructor(options)")]),t._v(" so they don't get assigned to the new object and override your custom implementation. They also won't be copied when cloning. "),a("strong",[t._v("Note:")]),t._v(" The "),a("code",[t._v("_foo")]),t._v(" and "),a("code",[t._v("foo")]),t._v(" properties will still exist on the created/cloned object because you are assigning "),a("code",[t._v("_foo")]),t._v(" in the constructor and "),a("code",[t._v("foo")]),t._v(" is defined on the prototype.")]),t._v(" "),a("p",[t._v("Same goes for "),a("code",[t._v("clone()")]),t._v(". If you have your own internal stuff that needs special handling during cloning, you should extend it to do so.")]),t._v(" "),a("h2",{attrs:{id:"license"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#license"}},[t._v("#")]),t._v(" License")]),t._v(" "),a("p",[t._v("MIT")])])}),[],!1,null,null,null);s.default=n.exports}}]);