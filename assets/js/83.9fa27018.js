(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{449:function(s,t,a){"use strict";a.r(t);var e=a(25),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"braces"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#braces"}},[s._v("#")]),s._v(" braces "),a("a",{attrs:{href:"https://www.npmjs.com/package/braces",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/npm/v/braces.svg?style=flat",alt:"NPM version"}}),a("OutboundLink")],1),s._v(" "),a("a",{attrs:{href:"https://npmjs.org/package/braces",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/npm/dm/braces.svg?style=flat",alt:"NPM monthly downloads"}}),a("OutboundLink")],1),s._v(" "),a("a",{attrs:{href:"https://npmjs.org/package/braces",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/npm/dt/braces.svg?style=flat",alt:"NPM total downloads"}}),a("OutboundLink")],1),s._v(" "),a("a",{attrs:{href:"https://travis-ci.org/micromatch/braces",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/travis/micromatch/braces.svg?style=flat&label=Travis",alt:"Linux Build Status"}}),a("OutboundLink")],1),s._v(" "),a("a",{attrs:{href:"https://ci.appveyor.com/project/micromatch/braces",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/appveyor/ci/micromatch/braces.svg?style=flat&label=AppVeyor",alt:"Windows Build Status"}}),a("OutboundLink")],1)]),s._v(" "),a("blockquote",[a("p",[s._v("Bash-like brace expansion, implemented in JavaScript. Safer than other brace expansion libs, with complete support for the Bash 4.3 braces specification, without sacrificing speed.")])]),s._v(" "),a("p",[s._v("Please consider following this project's author, "),a("a",{attrs:{href:"https://github.com/jonschlinkert",target:"_blank",rel:"noopener noreferrer"}},[s._v("Jon Schlinkert"),a("OutboundLink")],1),s._v(", and consider starring the project to show your ❤️ and support.")]),s._v(" "),a("h2",{attrs:{id:"install"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install"}},[s._v("#")]),s._v(" Install")]),s._v(" "),a("p",[s._v("Install with "),a("a",{attrs:{href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("npm"),a("OutboundLink")],1),s._v(":")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" --save braces\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"why-use-braces"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#why-use-braces"}},[s._v("#")]),s._v(" Why use braces?")]),s._v(" "),a("p",[s._v("Brace patterns are great for matching ranges. Users (and implementors) shouldn't have to think about whether or not they will break their application (or yours) from accidentally defining an aggressive brace pattern. "),a("em",[s._v("Braces is the only library that offers a "),a("a",{attrs:{href:"#performance"}},[s._v("solution to this problem")])]),s._v(".")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("Safe(r)")]),s._v(": Braces isn't vulnerable to DoS attacks like "),a("a",{attrs:{href:"https://github.com/juliangruber/brace-expansion",target:"_blank",rel:"noopener noreferrer"}},[s._v("brace-expansion"),a("OutboundLink")],1),s._v(", "),a("a",{attrs:{href:"https://github.com/isaacs/minimatch",target:"_blank",rel:"noopener noreferrer"}},[s._v("minimatch"),a("OutboundLink")],1),s._v(" and "),a("a",{attrs:{href:"https://github.com/sindresorhus/multimatch",target:"_blank",rel:"noopener noreferrer"}},[s._v("multimatch"),a("OutboundLink")],1),s._v(" (a different bug than the "),a("a",{attrs:{href:"https://medium.com/node-security/minimatch-redos-vulnerability-590da24e6d3c#.jew0b6mpc",target:"_blank",rel:"noopener noreferrer"}},[s._v("other regex DoS bug"),a("OutboundLink")],1),s._v(").")]),s._v(" "),a("li",[a("strong",[s._v("Accurate")]),s._v(": complete support for the "),a("RouterLink",{attrs:{to:"/Study/工程化/gulp 学习代码/gulp-project/node_modules/braces/www.gnu.org/software/bash/"}},[s._v("Bash 4.3 Brace Expansion")]),s._v(" specification (passes all of the Bash braces tests)")],1),s._v(" "),a("li",[a("strong",[a("a",{attrs:{href:"#benchmarks"}},[s._v("fast and performant")])]),s._v(": Starts fast, runs fast and "),a("a",{attrs:{href:"#performance"}},[s._v("scales well")]),s._v(" as patterns increase in complexity.")]),s._v(" "),a("li",[a("strong",[s._v("Organized code base")]),s._v(": with parser and compiler that are eas(y|ier) to maintain and update when edge cases crop up.")]),s._v(" "),a("li",[a("strong",[s._v("Well-tested")]),s._v(": thousands of test assertions. Passes 100% of the "),a("a",{attrs:{href:"https://github.com/isaacs/minimatch",target:"_blank",rel:"noopener noreferrer"}},[s._v("minimatch"),a("OutboundLink")],1),s._v(" and "),a("a",{attrs:{href:"https://github.com/juliangruber/brace-expansion",target:"_blank",rel:"noopener noreferrer"}},[s._v("brace-expansion"),a("OutboundLink")],1),s._v(" unit tests as well (as of the writing of this).")])]),s._v(" "),a("h2",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[s._v("#")]),s._v(" Usage")]),s._v(" "),a("p",[s._v("The main export is a function that takes one or more brace "),a("code",[s._v("patterns")]),s._v(" and "),a("code",[s._v("options")]),s._v(".")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" braces "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'braces'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("braces")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pattern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("By default, braces returns an optimized regex-source string. To get an array of brace patterns, use "),a("code",[s._v("brace.expand()")]),s._v(".")]),s._v(" "),a("p",[s._v("The following section explains the difference in more detail. "),a("em",[s._v('(If you\'re curious about "why" braces does this by default, see '),a("a",{attrs:{href:"#brace-matching-pitfalls"}},[s._v("brace matching pitfalls")])]),s._v(".")]),s._v(" "),a("h3",{attrs:{id:"optimized-vs-expanded-braces"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#optimized-vs-expanded-braces"}},[s._v("#")]),s._v(" Optimized vs. expanded braces")]),s._v(" "),a("p",[a("strong",[s._v("Optimized")])]),s._v(" "),a("p",[s._v("By default, patterns are optimized for regex and matching:")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("braces")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a/{x,y,z}/b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//=> ['a/(x|y|z)/b']")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[s._v("Expanded")])]),s._v(" "),a("p",[s._v("To expand patterns the same way as Bash or "),a("a",{attrs:{href:"https://github.com/isaacs/minimatch",target:"_blank",rel:"noopener noreferrer"}},[s._v("minimatch"),a("OutboundLink")],1),s._v(", use the "),a("a",{attrs:{href:"#expand"}},[s._v(".expand")]),s._v(" method:")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("braces"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("expand")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a/{x,y,z}/b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//=> ['a/x/b', 'a/y/b', 'a/z/b']")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("Or use "),a("a",{attrs:{href:"#optionsexpand"}},[s._v("options.expand")]),s._v(":")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("braces")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a/{x,y,z}/b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("expand"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//=> ['a/x/b', 'a/y/b', 'a/z/b']")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"features"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#features"}},[s._v("#")]),s._v(" Features")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#lists"}},[s._v("lists")]),s._v(': Supports "lists": '),a("code",[s._v("a/{b,c}/d")]),s._v(" => "),a("code",[s._v("['a/b/d', 'a/c/d']")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#sequences"}},[s._v("sequences")]),s._v(': Supports alphabetical or numerical "sequences" (ranges): '),a("code",[s._v("{1..3}")]),s._v(" => "),a("code",[s._v("['1', '2', '3']")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#steps"}},[s._v("steps")]),s._v(': Supports "steps" or increments: '),a("code",[s._v("{2..10..2}")]),s._v(" => "),a("code",[s._v("['2', '4', '6', '8', '10']")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#escaping"}},[s._v("escaping")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#options"}},[s._v("options")])])]),s._v(" "),a("h3",{attrs:{id:"lists"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lists"}},[s._v("#")]),s._v(" Lists")]),s._v(" "),a("p",[s._v("Uses "),a("a",{attrs:{href:"https://github.com/jonschlinkert/fill-range",target:"_blank",rel:"noopener noreferrer"}},[s._v("fill-range"),a("OutboundLink")],1),s._v(" for expanding alphabetical or numeric lists:")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("braces")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a/{foo,bar,baz}/*.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//=> ['a/(foo|bar|baz)/*.js']")]),s._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("braces"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("expand")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a/{foo,bar,baz}/*.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//=> ['a/foo/*.js', 'a/bar/*.js', 'a/baz/*.js']")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"sequences"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sequences"}},[s._v("#")]),s._v(" Sequences")]),s._v(" "),a("p",[s._v("Uses "),a("a",{attrs:{href:"https://github.com/jonschlinkert/fill-range",target:"_blank",rel:"noopener noreferrer"}},[s._v("fill-range"),a("OutboundLink")],1),s._v(' for expanding alphabetical or numeric ranges (bash "sequences"):')]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("braces"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("expand")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{1..3}'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ['1', '2', '3']")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("braces"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("expand")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a{01..03}b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ['a01b', 'a02b', 'a03b']")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("braces"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("expand")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a{1..3}b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ['a1b', 'a2b', 'a3b']")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("braces"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("expand")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{a..c}'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ['a', 'b', 'c']")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("braces"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("expand")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo/{a..c}'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ['foo/a', 'foo/b', 'foo/c']")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// supports padded ranges")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("braces")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a{01..03}b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//=> [ 'a(0[1-3])b' ]")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("braces")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a{001..300}b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//=> [ 'a(0{2}[1-9]|0[1-9][0-9]|[12][0-9]{2}|300)b' ]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h3",{attrs:{id:"steps"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#steps"}},[s._v("#")]),s._v(" Steps")]),s._v(" "),a("p",[s._v("Steps, or increments, may be used with ranges:")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("braces"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("expand")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{2..10..2}'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//=> ['2', '4', '6', '8', '10']")]),s._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("braces")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{2..10..2}'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//=> ['(2|4|6|8|10)']")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("When the "),a("a",{attrs:{href:"#optimize"}},[s._v(".optimize")]),s._v(" method is used, or "),a("a",{attrs:{href:"#optionsoptimize"}},[s._v("options.optimize")]),s._v(" is set to true, sequences are passed to "),a("a",{attrs:{href:"https://github.com/jonschlinkert/to-regex-range",target:"_blank",rel:"noopener noreferrer"}},[s._v("to-regex-range"),a("OutboundLink")],1),s._v(" for expansion.")]),s._v(" "),a("h3",{attrs:{id:"nesting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nesting"}},[s._v("#")]),s._v(" Nesting")]),s._v(" "),a("p",[s._v("Brace patterns may be nested. The results of each expanded string are not sorted, and left to right order is preserved.")]),s._v(" "),a("p",[a("strong",[s._v('"Expanded" braces')])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("braces"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("expand")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a{b,c,/{x,y}}/e'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//=> ['ab/e', 'ac/e', 'a/x/e', 'a/y/e']")]),s._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("braces"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("expand")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a/{x,{1..5},y}/c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//=> ['a/x/c', 'a/1/c', 'a/2/c', 'a/3/c', 'a/4/c', 'a/5/c', 'a/y/c']")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[a("strong",[s._v('"Optimized" braces')])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("braces")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a{b,c,/{x,y}}/e'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//=> ['a(b|c|/(x|y))/e']")]),s._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("braces")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a/{x,{1..5},y}/c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//=> ['a/(x|([1-5])|y)/c']")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"escaping"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#escaping"}},[s._v("#")]),s._v(" Escaping")]),s._v(" "),a("p",[a("strong",[s._v("Escaping braces")])]),s._v(" "),a("p",[s._v("A brace pattern will not be expanded or evaluted if "),a("em",[s._v("either the opening or closing brace is escaped")]),s._v(":")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("braces"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("expand")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a\\\\{d,c,b}e'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//=> ['a{d,c,b}e']")]),s._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("braces"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("expand")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a{d,c,b\\\\}e'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//=> ['a{d,c,b}e']")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[a("strong",[s._v("Escaping commas")])]),s._v(" "),a("p",[s._v("Commas inside braces may also be escaped:")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("braces"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("expand")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a{b\\\\,c}d'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//=> ['a{b,c}d']")]),s._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("braces"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("expand")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a{d\\\\,c,b}e'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//=> ['ad,ce', 'abe']")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[a("strong",[s._v("Single items")])]),s._v(" "),a("p",[s._v("Following bash conventions, a brace pattern is also not expanded when it contains a single character:")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("braces"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("expand")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a{b}c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//=> ['a{b}c']")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[s._v("#")]),s._v(" Options")]),s._v(" "),a("h3",{attrs:{id:"options-maxlength"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-maxlength"}},[s._v("#")]),s._v(" options.maxLength")]),s._v(" "),a("p",[a("strong",[s._v("Type")]),s._v(": "),a("code",[s._v("Number")])]),s._v(" "),a("p",[a("strong",[s._v("Default")]),s._v(": "),a("code",[s._v("65,536")])]),s._v(" "),a("p",[a("strong",[s._v("Description")]),s._v(": Limit the length of the input string. Useful when the input string is generated or your application allows users to pass a string, et cetera.")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("braces")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a/{b,c}/d'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" maxLength"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//=> throws an error")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"options-expand"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-expand"}},[s._v("#")]),s._v(" options.expand")]),s._v(" "),a("p",[a("strong",[s._v("Type")]),s._v(": "),a("code",[s._v("Boolean")])]),s._v(" "),a("p",[a("strong",[s._v("Default")]),s._v(": "),a("code",[s._v("undefined")])]),s._v(" "),a("p",[a("strong",[s._v("Description")]),s._v(': Generate an "expanded" brace pattern (this option is unncessary with the '),a("code",[s._v(".expand")]),s._v(" method, which does the same thing).")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("braces")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a/{b,c}/d'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("expand"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//=> [ 'a/b/d', 'a/c/d' ]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"options-optimize"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-optimize"}},[s._v("#")]),s._v(" options.optimize")]),s._v(" "),a("p",[a("strong",[s._v("Type")]),s._v(": "),a("code",[s._v("Boolean")])]),s._v(" "),a("p",[a("strong",[s._v("Default")]),s._v(": "),a("code",[s._v("true")])]),s._v(" "),a("p",[a("strong",[s._v("Description")]),s._v(": Enabled by default.")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("braces")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a/{b,c}/d'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//=> [ 'a/(b|c)/d' ]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"options-nodupes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-nodupes"}},[s._v("#")]),s._v(" options.nodupes")]),s._v(" "),a("p",[a("strong",[s._v("Type")]),s._v(": "),a("code",[s._v("Boolean")])]),s._v(" "),a("p",[a("strong",[s._v("Default")]),s._v(": "),a("code",[s._v("true")])]),s._v(" "),a("p",[a("strong",[s._v("Description")]),s._v(": Duplicates are removed by default. To keep duplicates, pass "),a("code",[s._v("{nodupes: false}")]),s._v(" on the options")]),s._v(" "),a("h3",{attrs:{id:"options-rangelimit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-rangelimit"}},[s._v("#")]),s._v(" options.rangeLimit")]),s._v(" "),a("p",[a("strong",[s._v("Type")]),s._v(": "),a("code",[s._v("Number")])]),s._v(" "),a("p",[a("strong",[s._v("Default")]),s._v(": "),a("code",[s._v("250")])]),s._v(" "),a("p",[a("strong",[s._v("Description")]),s._v(": When "),a("code",[s._v("braces.expand()")]),s._v(" is used, or "),a("code",[s._v("options.expand")]),s._v(" is true, brace patterns will automatically be "),a("a",{attrs:{href:"#optionsoptimize"}},[s._v("optimized")]),s._v(" when the difference between the range minimum and range maximum exceeds the "),a("code",[s._v("rangeLimit")]),s._v(". This is to prevent huge ranges from freezing your application.")]),s._v(" "),a("p",[s._v("You can set this to any number, or change "),a("code",[s._v("options.rangeLimit")]),s._v(" to "),a("code",[s._v("Inifinity")]),s._v(" to disable this altogether.")]),s._v(" "),a("p",[a("strong",[s._v("Examples")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// pattern exceeds the "rangeLimit", so it\'s optimized automatically')]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("braces"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("expand")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{1..1000}'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//=> ['([1-9]|[1-9][0-9]{1,2}|1000)']")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// pattern does not exceed "rangeLimit", so it\'s NOT optimized')]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("braces"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("expand")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{1..100}'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//=> ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h3",{attrs:{id:"options-transform"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-transform"}},[s._v("#")]),s._v(" options.transform")]),s._v(" "),a("p",[a("strong",[s._v("Type")]),s._v(": "),a("code",[s._v("Function")])]),s._v(" "),a("p",[a("strong",[s._v("Default")]),s._v(": "),a("code",[s._v("undefined")])]),s._v(" "),a("p",[a("strong",[s._v("Description")]),s._v(": Customize range expansion.")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" range "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" braces"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("expand")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'x{a..e}y'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("transform")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("range"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//=> [ 'xfooay', 'xfooby', 'xfoocy', 'xfoody', 'xfooey' ]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"options-quantifiers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-quantifiers"}},[s._v("#")]),s._v(" options.quantifiers")]),s._v(" "),a("p",[a("strong",[s._v("Type")]),s._v(": "),a("code",[s._v("Boolean")])]),s._v(" "),a("p",[a("strong",[s._v("Default")]),s._v(": "),a("code",[s._v("undefined")])]),s._v(" "),a("p",[a("strong",[s._v("Description")]),s._v(": In regular expressions, quanitifiers can be used to specify how many times a token can be repeated. For example, "),a("code",[s._v("a{1,3}")]),s._v(" will match the letter "),a("code",[s._v("a")]),s._v(" one to three times.")]),s._v(" "),a("p",[s._v("Unfortunately, regex quantifiers happen to share the same syntax as "),a("a",{attrs:{href:"#lists"}},[s._v("Bash lists")])]),s._v(" "),a("p",[s._v("The "),a("code",[s._v("quantifiers")]),s._v(" option tells braces to detect when "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#quantifiers",target:"_blank",rel:"noopener noreferrer"}},[s._v("regex quantifiers"),a("OutboundLink")],1),s._v(" are defined in the given pattern, and not to try to expand them as lists.")]),s._v(" "),a("p",[a("strong",[s._v("Examples")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" braces "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'braces'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("braces")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a/b{1,3}/{x,y,z}'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//=> [ 'a/b(1|3)/(x|y|z)' ]")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("braces")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a/b{1,3}/{x,y,z}'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("quantifiers"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//=> [ 'a/b{1,3}/(x|y|z)' ]")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("braces")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a/b{1,3}/{x,y,z}'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("quantifiers"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" expand"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//=> [ 'a/b{1,3}/x', 'a/b{1,3}/y', 'a/b{1,3}/z' ]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h3",{attrs:{id:"options-unescape"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-unescape"}},[s._v("#")]),s._v(" options.unescape")]),s._v(" "),a("p",[a("strong",[s._v("Type")]),s._v(": "),a("code",[s._v("Boolean")])]),s._v(" "),a("p",[a("strong",[s._v("Default")]),s._v(": "),a("code",[s._v("undefined")])]),s._v(" "),a("p",[a("strong",[s._v("Description")]),s._v(": Strip backslashes that were used for escaping from the result.")]),s._v(" "),a("h2",{attrs:{id:"what-is-brace-expansion"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-brace-expansion"}},[s._v("#")]),s._v(' What is "brace expansion"?')]),s._v(" "),a("p",[s._v("Brace expansion is a type of parameter expansion that was made popular by unix shells for generating lists of strings, as well as regex-like matching when used alongside wildcards (globs).")]),s._v(" "),a("p",[s._v('In addition to "expansion", braces are also used for matching. In other words:')]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#brace-expansion"}},[s._v("brace expansion")]),s._v(" is for generating new lists")]),s._v(" "),a("li",[a("a",{attrs:{href:"#brace-matching"}},[s._v("brace matching")]),s._v(" is for filtering existing lists")])]),s._v(" "),a("details",[a("summary",[a("strong",[s._v("More about brace expansion")]),s._v(" (click to expand)")]),s._v(" "),a("p",[s._v("There are two main types of brace expansion:")]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("lists")]),s._v(": which are defined using comma-separated values inside curly braces: "),a("code",[s._v("{a,b,c}")])]),s._v(" "),a("li",[a("strong",[s._v("sequences")]),s._v(": which are defined using a starting value and an ending value, separated by two dots: "),a("code",[s._v("a{1..3}b")]),s._v('. Optionally, a third argument may be passed to define a "step" or increment to use: '),a("code",[s._v("a{1..100..10}b")]),s._v('. These are also sometimes referred to as "ranges".')])]),s._v(" "),a("p",[s._v("Here are some example brace patterns to illustrate how they work:")]),s._v(" "),a("p",[a("strong",[s._v("Sets")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("{a,b,c}       => a b c\n{a,b,c}{1,2}  => a1 a2 b1 b2 c1 c2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[s._v("Sequences")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("{1..9}        => 1 2 3 4 5 6 7 8 9\n{4..-4}       => 4 3 2 1 0 -1 -2 -3 -4\n{1..20..3}    => 1 4 7 10 13 16 19\n{a..j}        => a b c d e f g h i j\n{j..a}        => j i h g f e d c b a\n{a..z..3}     => a d g j m p s v y\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[a("strong",[s._v("Combination")])]),s._v(" "),a("p",[s._v("Sets and sequences can be mixed together or used along with any other strings.")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("{a,b,c}{1..3}   => a1 a2 a3 b1 b2 b3 c1 c2 c3\nfoo/{a,b,c}/bar => foo/a/bar foo/b/bar foo/c/bar\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v('The fact that braces can be "expanded" from relatively simple patterns makes them ideal for quickly generating test fixtures, file paths, and similar use cases.')]),s._v(" "),a("h2",{attrs:{id:"brace-matching"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#brace-matching"}},[s._v("#")]),s._v(" Brace matching")]),s._v(" "),a("p",[s._v("In addition to "),a("em",[s._v("expansion")]),s._v(", brace patterns are also useful for performing regular-expression-like matching.")]),s._v(" "),a("p",[s._v("For example, the pattern "),a("code",[s._v("foo/{1..3}/bar")]),s._v(" would match any of following strings:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("foo/1/bar\nfoo/2/bar\nfoo/3/bar\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("But not:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("baz/1/qux\nbaz/2/qux\nbaz/3/qux\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("Braces can also be combined with "),a("a",{attrs:{href:"https://github.com/jonschlinkert/micromatch",target:"_blank",rel:"noopener noreferrer"}},[s._v("glob patterns"),a("OutboundLink")],1),s._v(" to perform more advanced wildcard matching. For example, the pattern "),a("code",[s._v("*/{1..3}/*")]),s._v(" would match any of following strings:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("foo/1/bar\nfoo/2/bar\nfoo/3/bar\nbaz/1/qux\nbaz/2/qux\nbaz/3/qux\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h2",{attrs:{id:"brace-matching-pitfalls"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#brace-matching-pitfalls"}},[s._v("#")]),s._v(" Brace matching pitfalls")]),s._v(" "),a("p",[s._v("Although brace patterns offer a user-friendly way of matching ranges or sets of strings, there are also some major disadvantages and potential risks you should be aware of.")]),s._v(" "),a("h3",{attrs:{id:"tldr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tldr"}},[s._v("#")]),s._v(" tldr")]),s._v(" "),a("p",[a("strong",[s._v('"brace bombs"')])]),s._v(" "),a("ul",[a("li",[s._v("brace expansion can eat up a huge amount of processing resources")]),s._v(" "),a("li",[s._v("as brace patterns increase "),a("em",[s._v("linearly in size")]),s._v(", the system resources required to expand the pattern increase exponentially")]),s._v(" "),a("li",[s._v("users can accidentally (or intentially) exhaust your system's resources resulting in the equivalent of a DoS attack (bonus: no programming knowledge is required!)")])]),s._v(" "),a("p",[s._v("For a more detailed explanation with examples, see the "),a("a",{attrs:{href:"#geometric-complexity"}},[s._v("geometric complexity")]),s._v(" section.")]),s._v(" "),a("h3",{attrs:{id:"the-solution"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-solution"}},[s._v("#")]),s._v(" The solution")]),s._v(" "),a("p",[s._v("Jump to the "),a("a",{attrs:{href:"#performance"}},[s._v("performance section")]),s._v(" to see how Braces solves this problem in comparison to other libraries.")]),s._v(" "),a("h3",{attrs:{id:"geometric-complexity"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#geometric-complexity"}},[s._v("#")]),s._v(" Geometric complexity")]),s._v(" "),a("p",[s._v("At minimum, brace patterns with sets limited to two elements have quadradic or "),a("code",[s._v("O(n^2)")]),s._v(" complexity. But the complexity of the algorithm increases exponentially as the number of sets, "),a("em",[s._v("and elements per set")]),s._v(", increases, which is "),a("code",[s._v("O(n^c)")]),s._v(".")]),s._v(" "),a("p",[s._v("For example, the following sets demonstrate quadratic ("),a("code",[s._v("O(n^2)")]),s._v(") complexity:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("{1,2}{3,4}      => (2X2)    => 13 14 23 24\n{1,2}{3,4}{5,6} => (2X2X2)  => 135 136 145 146 235 236 245 246\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("But add an element to a set, and we get a n-fold Cartesian product with "),a("code",[s._v("O(n^c)")]),s._v(" complexity:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("{1,2,3}{4,5,6}{7,8,9} => (3X3X3) => 147 148 149 157 158 159 167 168 169 247 248 \n                                    249 257 258 259 267 268 269 347 348 349 357 \n                                    358 359 367 368 369\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("Now, imagine how this complexity grows given that each element is a n-tuple:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("{1..100}{1..100}         => (100X100)     => 10,000 elements (38.4 kB)\n{1..100}{1..100}{1..100} => (100X100X100) => 1,000,000 elements (5.76 MB)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("Although these examples are clearly contrived, they demonstrate how brace patterns can quickly grow out of control.")]),s._v(" "),a("p",[a("strong",[s._v("More information")])]),s._v(" "),a("p",[s._v("Interested in learning more about brace expansion?")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://www.linuxjournal.com/content/bash-brace-expansion",target:"_blank",rel:"noopener noreferrer"}},[s._v("linuxjournal/bash-brace-expansion"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://rosettacode.org/wiki/Brace_expansion",target:"_blank",rel:"noopener noreferrer"}},[s._v("rosettacode/Brace_expansion"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Cartesian_product",target:"_blank",rel:"noopener noreferrer"}},[s._v("cartesian product"),a("OutboundLink")],1)])])]),s._v(" "),a("h2",{attrs:{id:"performance"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance"}},[s._v("#")]),s._v(" Performance")]),s._v(" "),a("p",[s._v("Braces is not only screaming fast, it's also more accurate the other brace expansion libraries.")]),s._v(" "),a("h3",{attrs:{id:"better-algorithms"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#better-algorithms"}},[s._v("#")]),s._v(" Better algorithms")]),s._v(" "),a("p",[s._v("Fortunately there is a solution to the "),a("a",{attrs:{href:"#brace-matching-pitfalls"}},[s._v('"brace bomb" problem')]),s._v(": "),a("em",[s._v("don't expand brace patterns into an array when they're used for matching")]),s._v(".")]),s._v(" "),a("p",[s._v("Instead, convert the pattern into an optimized regular expression. This is easier said than done, and braces is the only library that does this currently.")]),s._v(" "),a("p",[a("strong",[s._v("The proof is in the numbers")])]),s._v(" "),a("p",[s._v("Minimatch gets exponentially slower as patterns increase in complexity, braces does not. The following results were generated using "),a("code",[s._v("braces()")]),s._v(" and "),a("code",[s._v("minimatch.braceExpand()")]),s._v(", respectively.")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[s._v("Pattern")])]),s._v(" "),a("th",[a("strong",[s._v("braces")])]),s._v(" "),a("th",[a("strong",[a("a",{attrs:{href:"https://github.com/isaacs/minimatch",target:"_blank",rel:"noopener noreferrer"}},[s._v("minimatch"),a("OutboundLink")],1)])])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("{1..9007199254740991}")]),a("sup",{staticClass:"footnote-ref"},[a("a",{attrs:{href:"#fn1",id:"fnref1"}},[s._v("[1]")])])]),s._v(" "),a("td",[a("code",[s._v("298 B")]),s._v(" (5ms 459μs)")]),s._v(" "),a("td",[s._v("N/A (freezes)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("{1..1000000000000000}")])]),s._v(" "),a("td",[a("code",[s._v("41 B")]),s._v(" (1ms 15μs)")]),s._v(" "),a("td",[s._v("N/A (freezes)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("{1..100000000000000}")])]),s._v(" "),a("td",[a("code",[s._v("40 B")]),s._v(" (890μs)")]),s._v(" "),a("td",[s._v("N/A (freezes)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("{1..10000000000000}")])]),s._v(" "),a("td",[a("code",[s._v("39 B")]),s._v(" (2ms 49μs)")]),s._v(" "),a("td",[s._v("N/A (freezes)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("{1..1000000000000}")])]),s._v(" "),a("td",[a("code",[s._v("38 B")]),s._v(" (608μs)")]),s._v(" "),a("td",[s._v("N/A (freezes)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("{1..100000000000}")])]),s._v(" "),a("td",[a("code",[s._v("37 B")]),s._v(" (397μs)")]),s._v(" "),a("td",[s._v("N/A (freezes)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("{1..10000000000}")])]),s._v(" "),a("td",[a("code",[s._v("35 B")]),s._v(" (983μs)")]),s._v(" "),a("td",[s._v("N/A (freezes)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("{1..1000000000}")])]),s._v(" "),a("td",[a("code",[s._v("34 B")]),s._v(" (798μs)")]),s._v(" "),a("td",[s._v("N/A (freezes)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("{1..100000000}")])]),s._v(" "),a("td",[a("code",[s._v("33 B")]),s._v(" (733μs)")]),s._v(" "),a("td",[s._v("N/A (freezes)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("{1..10000000}")])]),s._v(" "),a("td",[a("code",[s._v("32 B")]),s._v(" (5ms 632μs)")]),s._v(" "),a("td",[a("code",[s._v("78.89 MB")]),s._v(" (16s 388ms 569μs)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("{1..1000000}")])]),s._v(" "),a("td",[a("code",[s._v("31 B")]),s._v(" (1ms 381μs)")]),s._v(" "),a("td",[a("code",[s._v("6.89 MB")]),s._v(" (1s 496ms 887μs)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("{1..100000}")])]),s._v(" "),a("td",[a("code",[s._v("30 B")]),s._v(" (950μs)")]),s._v(" "),a("td",[a("code",[s._v("588.89 kB")]),s._v(" (146ms 921μs)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("{1..10000}")])]),s._v(" "),a("td",[a("code",[s._v("29 B")]),s._v(" (1ms 114μs)")]),s._v(" "),a("td",[a("code",[s._v("48.89 kB")]),s._v(" (14ms 187μs)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("{1..1000}")])]),s._v(" "),a("td",[a("code",[s._v("28 B")]),s._v(" (760μs)")]),s._v(" "),a("td",[a("code",[s._v("3.89 kB")]),s._v(" (1ms 453μs)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("{1..100}")])]),s._v(" "),a("td",[a("code",[s._v("22 B")]),s._v(" (345μs)")]),s._v(" "),a("td",[a("code",[s._v("291 B")]),s._v(" (196μs)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("{1..10}")])]),s._v(" "),a("td",[a("code",[s._v("10 B")]),s._v(" (533μs)")]),s._v(" "),a("td",[a("code",[s._v("20 B")]),s._v(" (37μs)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("{1..3}")])]),s._v(" "),a("td",[a("code",[s._v("7 B")]),s._v(" (190μs)")]),s._v(" "),a("td",[a("code",[s._v("5 B")]),s._v(" (27μs)")])])])]),s._v(" "),a("h3",{attrs:{id:"faster-algorithms"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#faster-algorithms"}},[s._v("#")]),s._v(" Faster algorithms")]),s._v(" "),a("p",[s._v("When you need expansion, braces is still much faster.")]),s._v(" "),a("p",[a("em",[s._v("(the following results were generated using "),a("code",[s._v("braces.expand()")]),s._v(" and "),a("code",[s._v("minimatch.braceExpand()")]),s._v(", respectively)")])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[s._v("Pattern")])]),s._v(" "),a("th",[a("strong",[s._v("braces")])]),s._v(" "),a("th",[a("strong",[a("a",{attrs:{href:"https://github.com/isaacs/minimatch",target:"_blank",rel:"noopener noreferrer"}},[s._v("minimatch"),a("OutboundLink")],1)])])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("{1..10000000}")])]),s._v(" "),a("td",[a("code",[s._v("78.89 MB")]),s._v(" (2s 698ms 642μs)")]),s._v(" "),a("td",[a("code",[s._v("78.89 MB")]),s._v(" (18s 601ms 974μs)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("{1..1000000}")])]),s._v(" "),a("td",[a("code",[s._v("6.89 MB")]),s._v(" (458ms 576μs)")]),s._v(" "),a("td",[a("code",[s._v("6.89 MB")]),s._v(" (1s 491ms 621μs)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("{1..100000}")])]),s._v(" "),a("td",[a("code",[s._v("588.89 kB")]),s._v(" (20ms 728μs)")]),s._v(" "),a("td",[a("code",[s._v("588.89 kB")]),s._v(" (156ms 919μs)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("{1..10000}")])]),s._v(" "),a("td",[a("code",[s._v("48.89 kB")]),s._v(" (2ms 202μs)")]),s._v(" "),a("td",[a("code",[s._v("48.89 kB")]),s._v(" (13ms 641μs)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("{1..1000}")])]),s._v(" "),a("td",[a("code",[s._v("3.89 kB")]),s._v(" (1ms 796μs)")]),s._v(" "),a("td",[a("code",[s._v("3.89 kB")]),s._v(" (1ms 958μs)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("{1..100}")])]),s._v(" "),a("td",[a("code",[s._v("291 B")]),s._v(" (424μs)")]),s._v(" "),a("td",[a("code",[s._v("291 B")]),s._v(" (211μs)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("{1..10}")])]),s._v(" "),a("td",[a("code",[s._v("20 B")]),s._v(" (487μs)")]),s._v(" "),a("td",[a("code",[s._v("20 B")]),s._v(" (72μs)")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("{1..3}")])]),s._v(" "),a("td",[a("code",[s._v("5 B")]),s._v(" (166μs)")]),s._v(" "),a("td",[a("code",[s._v("5 B")]),s._v(" (27μs)")])])])]),s._v(" "),a("p",[s._v("If you'd like to run these comparisons yourself, see "),a("a",{attrs:{href:"test/support/generate.js"}},[s._v("test/support/generate.js")]),s._v(".")]),s._v(" "),a("h2",{attrs:{id:"benchmarks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#benchmarks"}},[s._v("#")]),s._v(" Benchmarks")]),s._v(" "),a("h3",{attrs:{id:"running-benchmarks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#running-benchmarks"}},[s._v("#")]),s._v(" Running benchmarks")]),s._v(" "),a("p",[s._v("Install dev dependencies:")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" i -d "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" benchmark\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"latest-results"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#latest-results"}},[s._v("#")]),s._v(" Latest results")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("Benchmarking: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" of "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n · combination-nested\n · combination\n · escaped\n · list-basic\n · list-multiple\n · no-braces\n · sequence-basic\n · sequence-multiple\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# benchmark/fixtures/combination-nested.js (52 bytes)")]),s._v("\n  brace-expansion x "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4,756")]),s._v(" ops/sec ±1.09% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("86")]),s._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  braces x "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11,202")]),s._v(",303 ops/sec ±1.06% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("88")]),s._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  minimatch x "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4,816")]),s._v(" ops/sec ±0.99% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("87")]),s._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n  fastest is braces\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# benchmark/fixtures/combination.js (51 bytes)")]),s._v("\n  brace-expansion x "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("625")]),s._v(" ops/sec ±0.87% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("87")]),s._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  braces x "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11,031")]),s._v(",884 ops/sec ±0.72% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("90")]),s._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  minimatch x "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("637")]),s._v(" ops/sec ±0.84% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("88")]),s._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n  fastest is braces\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# benchmark/fixtures/escaped.js (44 bytes)")]),s._v("\n  brace-expansion x "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("163,325")]),s._v(" ops/sec ±1.05% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("87")]),s._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  braces x "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10,655")]),s._v(",071 ops/sec ±1.22% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("88")]),s._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  minimatch x "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("147,495")]),s._v(" ops/sec ±0.96% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("88")]),s._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n  fastest is braces\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# benchmark/fixtures/list-basic.js (40 bytes)")]),s._v("\n  brace-expansion x "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("99,726")]),s._v(" ops/sec ±1.07% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("83")]),s._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  braces x "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10,596")]),s._v(",584 ops/sec ±0.98% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("88")]),s._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  minimatch x "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100,069")]),s._v(" ops/sec ±1.17% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("86")]),s._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n  fastest is braces\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# benchmark/fixtures/list-multiple.js (52 bytes)")]),s._v("\n  brace-expansion x "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("34,348")]),s._v(" ops/sec ±1.08% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("88")]),s._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  braces x "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9,264")]),s._v(",131 ops/sec ±1.12% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("88")]),s._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  minimatch x "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("34,893")]),s._v(" ops/sec ±0.87% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("87")]),s._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n  fastest is braces\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# benchmark/fixtures/no-braces.js (48 bytes)")]),s._v("\n  brace-expansion x "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("275,368")]),s._v(" ops/sec ±1.18% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("89")]),s._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  braces x "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9,134")]),s._v(",677 ops/sec ±0.95% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("88")]),s._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  minimatch x "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3,755")]),s._v(",954 ops/sec ±1.13% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("89")]),s._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n  fastest is braces\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# benchmark/fixtures/sequence-basic.js (41 bytes)")]),s._v("\n  brace-expansion x "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5,492")]),s._v(" ops/sec ±1.35% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("87")]),s._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  braces x "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8,485")]),s._v(",034 ops/sec ±1.28% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("89")]),s._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  minimatch x "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5,341")]),s._v(" ops/sec ±1.17% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("87")]),s._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n  fastest is braces\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# benchmark/fixtures/sequence-multiple.js (51 bytes)")]),s._v("\n  brace-expansion x "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("116")]),s._v(" ops/sec ±0.77% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("77")]),s._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  braces x "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9,445")]),s._v(",118 ops/sec ±1.32% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("84")]),s._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  minimatch x "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("109")]),s._v(" ops/sec ±1.16% "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("76")]),s._v(" runs sampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n  fastest is braces\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br")])]),a("h2",{attrs:{id:"about"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#about"}},[s._v("#")]),s._v(" About")]),s._v(" "),a("details",[a("summary",[a("strong",[s._v("Contributing")])]),s._v(" "),a("p",[s._v("Pull requests and stars are always welcome. For bugs and feature requests, "),a("a",{attrs:{href:"../../issues/new"}},[s._v("please create an issue")]),s._v(".")])]),s._v(" "),a("details",[a("summary",[a("strong",[s._v("Running Tests")])]),s._v(" "),a("p",[s._v("Running and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("details",[a("summary",[a("strong",[s._v("Building docs")])]),s._v(" "),a("p",[a("em",[s._v("(This project's readme.md is generated by "),a("a",{attrs:{href:"https://github.com/verbose/verb-generate-readme",target:"_blank",rel:"noopener noreferrer"}},[s._v("verb"),a("OutboundLink")],1),s._v(", please don't edit the readme directly. Any changes to the readme must be made in the "),a("RouterLink",{attrs:{to:"/Study/工程化/gulp 学习代码/gulp-project/node_modules/braces/.verb.html"}},[s._v(".verb.md")]),s._v(" readme template.)")],1)]),s._v(" "),a("p",[s._v("To generate the readme, run the following command:")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -g verbose/verb"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#dev verb-generate-readme && verb")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("h3",{attrs:{id:"related-projects"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#related-projects"}},[s._v("#")]),s._v(" Related projects")]),s._v(" "),a("p",[s._v("You might also be interested in these projects:")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.npmjs.com/package/expand-brackets",target:"_blank",rel:"noopener noreferrer"}},[s._v("expand-brackets"),a("OutboundLink")],1),s._v(": Expand POSIX bracket expressions (character classes) in glob patterns. | "),a("a",{attrs:{href:"https://github.com/jonschlinkert/expand-brackets",title:"Expand POSIX bracket expressions (character classes) in glob patterns.",target:"_blank",rel:"noopener noreferrer"}},[s._v("homepage"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://www.npmjs.com/package/extglob",target:"_blank",rel:"noopener noreferrer"}},[s._v("extglob"),a("OutboundLink")],1),s._v(": Extended glob support for JavaScript. Adds (almost) the expressive power of regular expressions to glob… "),a("a",{attrs:{href:"https://github.com/micromatch/extglob",target:"_blank",rel:"noopener noreferrer"}},[s._v("more"),a("OutboundLink")],1),s._v(" | "),a("a",{attrs:{href:"https://github.com/micromatch/extglob",title:"Extended glob support for JavaScript. Adds (almost) the expressive power of regular expressions to glob patterns.",target:"_blank",rel:"noopener noreferrer"}},[s._v("homepage"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://www.npmjs.com/package/fill-range",target:"_blank",rel:"noopener noreferrer"}},[s._v("fill-range"),a("OutboundLink")],1),s._v(": Fill in a range of numbers or letters, optionally passing an increment or "),a("code",[s._v("step")]),s._v(" to… "),a("a",{attrs:{href:"https://github.com/jonschlinkert/fill-range",target:"_blank",rel:"noopener noreferrer"}},[s._v("more"),a("OutboundLink")],1),s._v(" | "),a("a",{attrs:{href:"https://github.com/jonschlinkert/fill-range",title:"Fill in a range of numbers or letters, optionally passing an increment or `step` to use, or create a regex-compatible range with `options.toRegex`",target:"_blank",rel:"noopener noreferrer"}},[s._v("homepage"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://www.npmjs.com/package/micromatch",target:"_blank",rel:"noopener noreferrer"}},[s._v("micromatch"),a("OutboundLink")],1),s._v(": Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch. | "),a("a",{attrs:{href:"https://github.com/micromatch/micromatch",title:"Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch.",target:"_blank",rel:"noopener noreferrer"}},[s._v("homepage"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://www.npmjs.com/package/nanomatch",target:"_blank",rel:"noopener noreferrer"}},[s._v("nanomatch"),a("OutboundLink")],1),s._v(": Fast, minimal glob matcher for node.js. Similar to micromatch, minimatch and multimatch, but complete Bash… "),a("a",{attrs:{href:"https://github.com/micromatch/nanomatch",target:"_blank",rel:"noopener noreferrer"}},[s._v("more"),a("OutboundLink")],1),s._v(" | "),a("a",{attrs:{href:"https://github.com/micromatch/nanomatch",title:"Fast, minimal glob matcher for node.js. Similar to micromatch, minimatch and multimatch, but complete Bash 4.3 wildcard support only (no support for exglobs, posix brackets or braces)",target:"_blank",rel:"noopener noreferrer"}},[s._v("homepage"),a("OutboundLink")],1)])]),s._v(" "),a("h3",{attrs:{id:"contributors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#contributors"}},[s._v("#")]),s._v(" Contributors")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[s._v("Commits")])]),s._v(" "),a("th",[a("strong",[s._v("Contributor")])])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("188")]),s._v(" "),a("td",[a("a",{attrs:{href:"https://github.com/jonschlinkert",target:"_blank",rel:"noopener noreferrer"}},[s._v("jonschlinkert"),a("OutboundLink")],1)])]),s._v(" "),a("tr",[a("td",[s._v("4")]),s._v(" "),a("td",[a("a",{attrs:{href:"https://github.com/doowb",target:"_blank",rel:"noopener noreferrer"}},[s._v("doowb"),a("OutboundLink")],1)])]),s._v(" "),a("tr",[a("td",[s._v("1")]),s._v(" "),a("td",[a("a",{attrs:{href:"https://github.com/es128",target:"_blank",rel:"noopener noreferrer"}},[s._v("es128"),a("OutboundLink")],1)])]),s._v(" "),a("tr",[a("td",[s._v("1")]),s._v(" "),a("td",[a("a",{attrs:{href:"https://github.com/eush77",target:"_blank",rel:"noopener noreferrer"}},[s._v("eush77"),a("OutboundLink")],1)])]),s._v(" "),a("tr",[a("td",[s._v("1")]),s._v(" "),a("td",[a("a",{attrs:{href:"https://github.com/hemanth",target:"_blank",rel:"noopener noreferrer"}},[s._v("hemanth"),a("OutboundLink")],1)])])])]),s._v(" "),a("h3",{attrs:{id:"author"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#author"}},[s._v("#")]),s._v(" Author")]),s._v(" "),a("p",[a("strong",[s._v("Jon Schlinkert")])]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://linkedin.com/in/jonschlinkert",target:"_blank",rel:"noopener noreferrer"}},[s._v("linkedin/in/jonschlinkert"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/jonschlinkert",target:"_blank",rel:"noopener noreferrer"}},[s._v("github/jonschlinkert"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://twitter.com/jonschlinkert",target:"_blank",rel:"noopener noreferrer"}},[s._v("twitter/jonschlinkert"),a("OutboundLink")],1)])]),s._v(" "),a("h3",{attrs:{id:"license"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#license"}},[s._v("#")]),s._v(" License")]),s._v(" "),a("p",[s._v("Copyright © 2018, "),a("a",{attrs:{href:"https://github.com/jonschlinkert",target:"_blank",rel:"noopener noreferrer"}},[s._v("Jon Schlinkert"),a("OutboundLink")],1),s._v(".\nReleased under the "),a("a",{attrs:{href:"LICENSE"}},[s._v("MIT License")]),s._v(".")]),s._v(" "),a("hr"),s._v(" "),a("p",[a("em",[s._v("This file was generated by "),a("a",{attrs:{href:"https://github.com/verbose/verb-generate-readme",target:"_blank",rel:"noopener noreferrer"}},[s._v("verb-generate-readme"),a("OutboundLink")],1),s._v(", v0.6.0, on February 17, 2018.")])]),s._v(" "),a("hr",{staticClass:"footnotes-sep"}),s._v(" "),a("section",{staticClass:"footnotes"},[a("ol",{staticClass:"footnotes-list"},[a("li",{staticClass:"footnote-item",attrs:{id:"fn1"}},[s._v("this is the largest safe integer allowed in JavaScript. "),a("a",{staticClass:"footnote-backref",attrs:{href:"#fnref1"}},[s._v("↩")])])])])])}),[],!1,null,null,null);t.default=n.exports}}]);