(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{426:function(a,t,s){"use strict";s.r(t);var n=s(25),r=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"参考资源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资源"}},[a._v("#")]),a._v(" 参考资源")]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://swearer23.github.io/micro-frontends/",target:"_blank",rel:"noopener noreferrer"}},[a._v("微前端"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://qiankun.umijs.org/zh/guide",target:"_blank",rel:"noopener noreferrer"}},[a._v("qiankun"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://juejin.cn/column/7117245118465179661",target:"_blank",rel:"noopener noreferrer"}},[a._v("微前端从入门到精通"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://juejin.cn/post/7069566144750813197",target:"_blank",rel:"noopener noreferrer"}},[a._v("微前端实践指北"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://juejin.cn/post/6844904158085021704",target:"_blank",rel:"noopener noreferrer"}},[a._v("基于 qiankun 的微前端最佳实践"),s("OutboundLink")],1)])]),a._v(" "),s("h2",{attrs:{id:"流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#流程"}},[a._v("#")]),a._v(" 流程")]),a._v(" "),s("ol",[s("li",[a._v("什么是微前端,微前端的主要特征,适用场景")]),a._v(" "),s("li",[a._v("微前端常见解决方案及优缺点")])]),a._v(" "),s("ul",[s("li",[a._v("ifram")]),a._v(" "),s("li",[a._v("single-spa")]),a._v(" "),s("li",[a._v("qiankun")]),a._v(" "),s("li",[a._v("miacro-app")])]),a._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[a._v("qiankun")])]),a._v(" "),s("ul",[s("li",[a._v("实现方式")])]),a._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[a._v("结合实际情况分析什么项目适用微前端、项目中是否需要使用微前端")])]),a._v(" "),s("ul",[s("li",[a._v("下单平台中内嵌收银台和cs-chat这种情况")]),a._v(" "),s("li",[a._v("ops2技术老旧,如果渐进式重构就需要采用iframe这种形式")])]),a._v(" "),s("h2",{attrs:{id:"微前端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#微前端"}},[a._v("#")]),a._v(" 微前端")]),a._v(" "),s("h3",{attrs:{id:"微前端定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#微前端定义"}},[a._v("#")]),a._v(" 微前端定义")]),a._v(" "),s("ul",[s("li",[a._v("微前端不是特指某一项技术，而是一种思想。是由2016年 ThoughtWorks Technology Radar 中提出的，借鉴后端微服务的架构模式，将 Web 应用由单一的单体应用转变为多个小型前端应用，聚合为一的应用。")]),a._v(" "),s("li",[a._v("所以微前端不是指具体的库，不是指具体的框架，不是指具体的工具，而是一种理想与架构模式。")]),a._v(" "),s("li",[a._v("微前端的核心三大原则就是：独立运行、独立部署、独立开发 所以满足这些的最佳人选就是 “iframe”!!!")]),a._v(" "),s("li",[s("strong",[a._v("单体巨石前端应用")]),a._v(" "),s("ul",[s("li",[a._v("现代的前端应用的发展趋势正在变得越来越富功能化，富交互化，也就是传说中的SPA(单页面应用)；这样越来越复杂的单体前端应用，背后的后端应用则是数量庞大的微服务集群。被一个团队维护的前端项目，随着时间推进，会变得越来越庞大，越来越难以维护。所以我们给这种应用起名为巨石单体应用。\n"),s("img",{attrs:{src:"https://swearer23.github.io/micro-frontends/ressources/diagrams/organisational/monolith-frontback-microservices.png",alt:"单体巨石前端应用"}})])])]),a._v(" "),s("li",[s("strong",[a._v("面向垂直划分系统的前端架构")]),a._v(" "),s("ul",[s("li",[a._v("微前端背后的思想是认为：现代复杂的web app或者网站，通常由很多 相对独立的功能模块组合而成，而对这些模块负责的应该是 相互独立的多个团队。这些独立的团队由于专业分工不同，会负责着 特定的业务领域，以及完成 特定的开发任务。这样的团队，通常在人员组成方面囊括了从前端开发到服务端开发，从UI实现到数据库设计这样 端到端 的 跨职能人员 构成。")]),a._v(" "),s("li",[a._v("微前端之类的思路，会被称为 面向垂直划分系统的前端集成。\n"),s("img",{attrs:{src:"https://swearer23.github.io/micro-frontends/ressources/diagrams/organisational/verticals-headline.png",alt:"面向垂直划分系统的前端架构"}})])])])]),a._v(" "),s("h3",{attrs:{id:"微前端架构背后的核心思维"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#微前端架构背后的核心思维"}},[a._v("#")]),a._v(" 微前端架构背后的核心思维")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("技术不可知主义")]),a._v("\n每个团队应该选择自己的技术栈以及技术进化路线，而不是与其他团队步调一致。在项目中可以通过引入自定义元素来提供技术栈无关的接口，同时还隐藏了复杂的内部实现。也许在微前端的语境之下，框架将不是未来架构师主要考虑的问题，如何高效的提供可复用的WebComponent会成为核心问题。")]),a._v(" "),s("li",[s("strong",[a._v("隔离团队之间的代码")]),a._v("\n即便所有团队都使用同样的框架，也不要共享同一个运行时环境。构建自包含的Apps。不要依赖共享的状态或者全局变量。")]),a._v(" "),s("li",[s("strong",[a._v("建立团队自己的前缀")]),a._v("\n在还不能做到完全隔离的环境下，通过命名规约进行隔离。对于CSS， 事件，Local Storage 以及 Cookies之类的环境之下，通过命名空间进行的隔离可以避免冲突，以及所有权。")]),a._v(" "),s("li",[s("strong",[a._v("原生浏览器标准优先于框架封装的API")]),a._v("\n使用 用于通信的原生浏览器事件机制 ，而不是自己构建一个PubSub系统。如果确实需要设计一个跨团队的通信API，那么也尽量让设计简单为好。")]),a._v(" "),s("li",[s("strong",[a._v("构建高可用的网络应用")]),a._v("\n即便在Javascript执行失败的情况下，站点的功能也应保证可用。使用同构渲染以及渐进增强来提升体验和性能")])]),a._v(" "),s("h3",{attrs:{id:"微前端架构具备以下几个核心价值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#微前端架构具备以下几个核心价值"}},[a._v("#")]),a._v(" 微前端架构具备以下几个核心价值")]),a._v(" "),s("ul",[s("li",[a._v("技术栈无关\n"),s("ul",[s("li",[a._v("主框架不限制接入应用的技术栈，微应用具备完全自主权")])])]),a._v(" "),s("li",[a._v("独立开发、独立部署\n"),s("ul",[s("li",[a._v("微应用仓库独立，前后端可独立开发，部署完成后主框架自动完成同步更新")])])]),a._v(" "),s("li",[a._v("增量升级\n"),s("ul",[s("li",[a._v("在面对各种复杂场景时，我们通常很难对一个已经存在的系统做全量的技术栈升级或重构，而微前端是一种非常好的实施渐进式重构的手段和策略")])])]),a._v(" "),s("li",[a._v("独立运行时\n"),s("ul",[s("li",[a._v("每个微应用之间状态隔离，运行时状态不共享")])])])]),a._v(" "),s("h3",{attrs:{id:"微前端适用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#微前端适用场景"}},[a._v("#")]),a._v(" 微前端适用场景")]),a._v(" "),s("ul",[s("li",[a._v("微前端架构旨在解决单体应用在一个相对长的时间跨度下，由于参与的人员、团队的增多、变迁，从一个普通应用演变成一个巨石应用(Frontend Monolith)后，随之而来的应用不可维护的问题。这类问题在企业级 Web 应用中尤其常见。")])]),a._v(" "),s("h2",{attrs:{id:"微前端常见解决方案及优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#微前端常见解决方案及优缺点"}},[a._v("#")]),a._v(" 微前端常见解决方案及优缺点")]),a._v(" "),s("ul",[s("li",[a._v("ifram")]),a._v(" "),s("li",[a._v("single-spa")]),a._v(" "),s("li",[a._v("qiankun")]),a._v(" "),s("li",[a._v("miacro-app")])]),a._v(" "),s("h2",{attrs:{id:"qiankun"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#qiankun"}},[a._v("#")]),a._v(" qiankun")]),a._v(" "),s("h3",{attrs:{id:"why-not-iframe"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#why-not-iframe"}},[a._v("#")]),a._v(" Why Not Iframe")]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.yuque.com/kuitos/gky7yw/gesexv",target:"_blank",rel:"noopener noreferrer"}},[a._v("Why Not Iframe"),s("OutboundLink")],1)])]),a._v(" "),s("h3",{attrs:{id:"特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[a._v("#")]),a._v(" 特性")]),a._v(" "),s("ul",[s("li",[a._v("📦 基于 single-spa 封装，提供了更加开箱即用的 API。")]),a._v(" "),s("li",[a._v("📱 技术栈无关，任意技术栈的应用均可 使用/接入，不论是 React/Vue/Angular/JQuery 还是其他等框架。")]),a._v(" "),s("li",[a._v("💪 HTML Entry 接入方式，让你接入微应用像使用 iframe 一样简单。")]),a._v(" "),s("li",[a._v("🛡​ 样式隔离，确保微应用之间样式互相不干扰。")]),a._v(" "),s("li",[a._v("🧳 JS 沙箱，确保微应用之间 全局变量/事件 不冲突。")]),a._v(" "),s("li",[a._v("⚡️ 资源预加载，在浏览器空闲时间预加载未打开的微应用资源，加速微应用打开速度。")]),a._v(" "),s("li",[a._v("🔌 umi 插件，提供了 @umijs/plugin-qiankun 供 umi 应用一键切换成微前端架构系统。")])]),a._v(" "),s("h3",{attrs:{id:"qiankun的实践"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#qiankun的实践"}},[a._v("#")]),a._v(" qiankun的实践")]),a._v(" "),s("h4",{attrs:{id:"创建主应用和微应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建主应用和微应用"}},[a._v("#")]),a._v(" 创建主应用和微应用")]),a._v(" "),s("ul",[s("li",[a._v("用vue2创建主应用基座main")]),a._v(" "),s("li",[a._v("react创建微应用react-app")]),a._v(" "),s("li",[a._v("vue2创建微应用vue-app")]),a._v(" "),s("li",[a._v("jq创建微应用static-app")])]),a._v(" "),s("h4",{attrs:{id:"构建主应用基座"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构建主应用基座"}},[a._v("#")]),a._v(" 构建主应用基座")]),a._v(" "),s("ul",[s("li",[a._v("引入qiankun")]),a._v(" "),s("li",[a._v("注册微应用")])]),a._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[a._v("  "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("registerMicroApps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n   * name: 微应用名称 - 具有唯一性\n   * entry: 微应用入口 - 通过该地址加载微应用\n   * container: 微应用挂载节点(选择器) - 微应用加载完成后将挂载在该节点上\n   * activeRule: 微应用触发的路由规则 - 触发路由规则后将加载该微应用\n   * 当匹配到activeRule规则时,获取entry资源,渲染到container容器中\n   */")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n      name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"ReactMicroApp"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n      entry"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("REACT_MICRO_APP")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n      container"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"#frame"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n      activeRule"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/react"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br")])]),s("p",[a._v("registerMicroApps")]),a._v(" "),s("ul",[s("li",[a._v("启动微应用")])]),a._v(" "),s("h4",{attrs:{id:"微应用接入改造"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#微应用接入改造"}},[a._v("#")]),a._v(" 微应用接入改造")]),a._v(" "),s("p",[a._v("以vue2.0为例")]),a._v(" "),s("ol",[s("li",[a._v("导出相应的生命周期钩子")])]),a._v(" "),s("ul",[s("li",[a._v("bootstrap: 渲染之前")]),a._v(" "),s("li",[a._v("mount: 渲染函数")]),a._v(" "),s("li",[a._v("unmount: 卸载函数（多次切换如果不卸载，会导致 内存泄漏）")]),a._v(" "),s("li",[s("strong",[a._v("注意")]),a._v("：\n"),s("ul",[s("li",[a._v("每个生命周期必须返回Promise，因此直接将函数定义为async（会返回Promise）")]),a._v(" "),s("li",[a._v("当子应用在qiankun中设置一个全局变量：window."),s("strong",[a._v("POWERED_BY_QIANKUN")]),a._v("，可以通过这个来判断子应用是否独立运行")])])])]),a._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[a._v("创建public-path.js文件")])]),a._v(" "),s("ul",[s("li",[a._v("打包文件的静态资源路径")]),a._v(" "),s("li",[a._v("一般项目的public-path默认路径为/,所有静态资源都只能在子应用里才能加载出来;设置好全局public-path路径后,静态资源的路径前缀是动态的,在主应用中也可以加载出来")])]),a._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("__POWERED_BY_QIANKUN__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 动态设置 webpack publicPath，防止资源加载出错")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// eslint-disable-next-line no-undef")]),a._v("\n  __webpack_public_path__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("__INJECTED_PUBLIC_PATH_BY_QIANKUN__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("ol",{attrs:{start:"3"}},[s("li",[a._v("配置微应用的打包工具")])]),a._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[a._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("defineConfig")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  transpileDependencies"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  devServer"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 配置跨域请求头，解决开发环境的跨域问题")]),a._v("\n    headers"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Access-Control-Allow-Origin'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'*'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  configureWebpack"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    output"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 微应用的包名，这里与主应用中注册的微应用名称一致")]),a._v("\n      library"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"VueMicroApp"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 将你的 library 暴露为所有的模块定义下都可运行的方式（打包成兼容的格式）")]),a._v("\n      libraryTarget"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'umd'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 按需加载相关，设置为 webpackJsonp_VueMicroApp 即可（即webpackJsonp_{包名}）")]),a._v("\n      chunkLoadingGlobal"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[a._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("webpackJsonp_VueMicroApp")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[a._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br")])]),s("h3",{attrs:{id:"qiankun-应用间通信"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#qiankun-应用间通信"}},[a._v("#")]),a._v(" qiankun-应用间通信")]),a._v(" "),s("p",[s("strong",[a._v("我们应该从业务的角度出发划分各个子应用，尽可能减少应用间的通信，从而简化整个应用，使得我们的微前端架构可以更加灵活可控")])]),a._v(" "),s("ul",[s("li",[a._v("Actions 通信\n"),s("ul",[s("li",[a._v("这种通信方式比较适合业务划分清晰，应用间通信较少的微前端应用场景。")]),a._v(" "),s("li",[a._v("先注册 观察者 到观察者池中，然后通过修改 globalState 可以触发所有的 观察者 函数，从而达到组件间通信的效果\n"),s("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/5/8/171f3c48e01117fa~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.image",alt:"通信原理"}})]),a._v(" "),s("li",[a._v("qiankun 内部提供了 initGlobalState 方法用于注册 MicroAppStateActions 实例用于通信，该实例有三个方法\n"),s("ul",[s("li",[a._v("setGlobalState：设置 globalState - 设置新的值时，内部将执行 浅检查，如果检查到 globalState 发生改变则触发通知，通知到所有的 观察者 函数。")]),a._v(" "),s("li",[a._v("onGlobalStateChange：注册 观察者 函数 - 响应 globalState 变化，在 globalState 发生改变时触发该 观察者 函数。")]),a._v(" "),s("li",[a._v("offGlobalStateChange：取消 观察者 函数 - 该实例不再响应 globalState 变化。")])])]),a._v(" "),s("li",[a._v("Actions 通信方案也存在一些优缺点，\n"),s("ul",[s("li",[a._v("优点如下：\n"),s("ol",[s("li",[a._v("使用简单；")]),a._v(" "),s("li",[a._v("官方支持性高；")]),a._v(" "),s("li",[a._v("适合通信较少的业务场景；")])])]),a._v(" "),s("li",[a._v("缺点如下：\n"),s("ol",[s("li",[a._v("子应用独立运行时，需要额外配置无 Actions 时的逻辑；")]),a._v(" "),s("li",[a._v("子应用需要先了解状态池的细节，再进行通信；")]),a._v(" "),s("li",[a._v("由于状态池无法跟踪，通信场景较多时，容易出现状态混乱、维护困难等问题；")])])])])])])]),a._v(" "),s("li",[a._v("Shared通信\n"),s("ul",[s("li",[a._v("Shared 通信方案的原理就是，主应用基于 redux 维护一个状态池，通过 shared 实例暴露一些方法给子应用使用。同时，子应用需要单独维护一份 shared 实例，在独立运行时使用自身的 shared 实例，在嵌入主应用时使用主应用的 shared 实例，这样就可以保证在使用和表现上的一致性。")]),a._v(" "),s("li",[a._v("Shared 通信方案需要自行维护状态池，这样会增加项目的复杂度。好处是可以使用市面上比较成熟的状态管理工具，如 redux、mobx，可以有更好的状态管理追踪和一些工具集。")]),a._v(" "),s("li",[a._v("Shared优缺点\n"),s("ul",[s("li",[a._v("优点有这些：\n"),s("ol",[s("li",[a._v("可以自由选择状态管理库，更好的开发体验。 - 比如 redux 有专门配套的开发工具可以跟踪状态的变化。")]),a._v(" "),s("li",[a._v("子应用无需了解主应用的状态池实现细节，只需要了解 shared 的函数抽象，实现一套自身的 shared 甚至空 shared 即可，可以更好的规范子应用开发。")]),a._v(" "),s("li",[a._v("子应用无法随意污染主应用的状态池，只能通过主应用暴露的 shared 实例的特定方法操作状态池，从而避免状态池污染产生的问题。")]),a._v(" "),s("li",[a._v("子应用将具备独立运行的能力，Shared 通信使得父子应用有了更好的解耦性。")])])]),a._v(" "),s("li",[a._v("缺点也有两个：\n"),s("ol",[s("li",[a._v("主应用需要单独维护一套状态池，会增加维护成本和项目复杂度；")]),a._v(" "),s("li",[a._v("子应用需要单独维护一份 shared 实例，会增加维护成本；")])])])])])])])]),a._v(" "),s("h3",{attrs:{id:"qiankun的实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#qiankun的实现原理"}},[a._v("#")]),a._v(" qiankun的实现原理")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/6/1714da36c103427a~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.awebp",alt:"整体流程"}})]),a._v(" "),s("ol",[s("li",[a._v("监听路由变化")])]),a._v(" "),s("ul",[s("li",[a._v("hash路由:window.onhaschange")]),a._v(" "),s("li",[a._v("history路由:改写history相关方法")])]),a._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[a._v("匹配子应用")])]),a._v(" "),s("ul",[s("li",[a._v("获取当前路由路径")]),a._v(" "),s("li",[a._v("去apps 里面查找")]),a._v(" "),s("li",[a._v("匹配apps数组的activeRule哪一个是当前路径的的起始值")])]),a._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[a._v("加载子应用(请求子应用的html资源)")])]),a._v(" "),s("ul",[s("li",[a._v("使用fetch方法获取对应entry入口资源")]),a._v(" "),s("li",[a._v("import-html-entry获取并解析子应用资源")])]),a._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[a._v("渲染子应用")])]),a._v(" "),s("ul",[s("li",[a._v("将获取到的html资源渲染到对应的主应用的container中: container.innerHTML = html")]),a._v(" "),s("li",[a._v("手动加载子应用的script资源")]),a._v(" "),s("li",[a._v("执行script中的代码: eval或者使用new Function")]),a._v(" "),s("li",[a._v("设置全局变量来判断当前是否是qiankun环境")])]),a._v(" "),s("h4",{attrs:{id:"在构建过程中核心解决问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在构建过程中核心解决问题"}},[a._v("#")]),a._v(" "),s("strong",[a._v("在构建过程中核心解决问题:")])]),a._v(" "),s("ul",[s("li",[a._v("微前端的设计和观察者模式一样有发布者,订阅者")]),a._v(" "),s("li",[a._v("通过import-html-entry加载并解析子应用资源")]),a._v(" "),s("li",[a._v("样式隔离(基本2种方式)\n"),s("ul",[s("li",[a._v("shadow dom(自动生成样式隔离)解决了样式冲突:会把子应用都放在shadow dom中,这样不会造成样式冲突\n"),s("ul",[s("li",[a._v("Web components 的一个重要属性是封装——可以将标记结构、样式和行为隐藏起来，并与页面上的其他代码相隔离")]),a._v(" "),s("li",[a._v("兼容性不太好")])])]),a._v(" "),s("li",[a._v("给样式类名加选择器前缀,使其与主应用样式不冲突")])])]),a._v(" "),s("li",[a._v("JS沙箱\n"),s("ul",[s("li",[a._v("genSandbox 内部的沙箱主要是通过是否支持 window.Proxy 分为 LegacySandbox 和 SnapshotSandbox 两种")])])])]),a._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),s("ul",[s("li",[a._v("很多项目几乎都会面临业务快速发展之后，单体应用进化成巨石应用的问题。我们要维护一个巨无霸中台应用,就需要引入微前端概念")]),a._v(" "),s("li",[a._v("根据需要选择合适的微前端技术")])])])}),[],!1,null,null,null);t.default=r.exports}}]);